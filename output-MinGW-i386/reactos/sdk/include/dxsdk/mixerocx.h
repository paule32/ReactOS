/*** Autogenerated by WIDL <undefined version> from /home/jens/winos/reactos/sdk/include/dxsdk/mixerocx.idl - Do not edit ***/

#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#ifdef __REACTOS__
#define WIN32_LEAN_AND_MEAN
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __mixerocx_h__
#define __mixerocx_h__

/* Forward declarations */

#ifndef __IMixerOCXNotify_FWD_DEFINED__
#define __IMixerOCXNotify_FWD_DEFINED__
typedef interface IMixerOCXNotify IMixerOCXNotify;
#ifdef __cplusplus
interface IMixerOCXNotify;
#endif /* __cplusplus */
#endif

#ifndef __IMixerOCX_FWD_DEFINED__
#define __IMixerOCX_FWD_DEFINED__
typedef interface IMixerOCX IMixerOCX;
#ifdef __cplusplus
interface IMixerOCX;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <unknwn.h>

#ifdef __cplusplus
extern "C" {
#endif

#ifndef __IMixerOCXNotify_FWD_DEFINED__
#define __IMixerOCXNotify_FWD_DEFINED__
typedef interface IMixerOCXNotify IMixerOCXNotify;
#ifdef __cplusplus
interface IMixerOCXNotify;
#endif /* __cplusplus */
#endif

#ifndef __IMixerOCX_FWD_DEFINED__
#define __IMixerOCX_FWD_DEFINED__
typedef interface IMixerOCX IMixerOCX;
#ifdef __cplusplus
interface IMixerOCX;
#endif /* __cplusplus */
#endif

/*****************************************************************************
 * IMixerOCXNotify interface
 */
#ifndef __IMixerOCXNotify_INTERFACE_DEFINED__
#define __IMixerOCXNotify_INTERFACE_DEFINED__

DEFINE_GUID(IID_IMixerOCXNotify, 0x81a3bd31, 0xdee1, 0x11d1, 0x85,0x08, 0x00,0xa0,0xc9,0x1f,0x9c,0xa0);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("81a3bd31-dee1-11d1-8508-00a0c91f9ca0")
IMixerOCXNotify : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE OnInvalidateRect(
        LPCRECT lpcRect) = 0;

    virtual HRESULT STDMETHODCALLTYPE OnStatusChange(
        ULONG ulStatusFlags) = 0;

    virtual HRESULT STDMETHODCALLTYPE OnDataChange(
        ULONG ulDataFlags) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IMixerOCXNotify, 0x81a3bd31, 0xdee1, 0x11d1, 0x85,0x08, 0x00,0xa0,0xc9,0x1f,0x9c,0xa0)
#endif
#else
typedef struct IMixerOCXNotifyVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IMixerOCXNotify *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IMixerOCXNotify *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IMixerOCXNotify *This);

    /*** IMixerOCXNotify methods ***/
    HRESULT (STDMETHODCALLTYPE *OnInvalidateRect)(
        IMixerOCXNotify *This,
        LPCRECT lpcRect);

    HRESULT (STDMETHODCALLTYPE *OnStatusChange)(
        IMixerOCXNotify *This,
        ULONG ulStatusFlags);

    HRESULT (STDMETHODCALLTYPE *OnDataChange)(
        IMixerOCXNotify *This,
        ULONG ulDataFlags);

    END_INTERFACE
} IMixerOCXNotifyVtbl;

interface IMixerOCXNotify {
    CONST_VTBL IMixerOCXNotifyVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IMixerOCXNotify_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IMixerOCXNotify_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMixerOCXNotify_Release(This) (This)->lpVtbl->Release(This)
/*** IMixerOCXNotify methods ***/
#define IMixerOCXNotify_OnInvalidateRect(This,lpcRect) (This)->lpVtbl->OnInvalidateRect(This,lpcRect)
#define IMixerOCXNotify_OnStatusChange(This,ulStatusFlags) (This)->lpVtbl->OnStatusChange(This,ulStatusFlags)
#define IMixerOCXNotify_OnDataChange(This,ulDataFlags) (This)->lpVtbl->OnDataChange(This,ulDataFlags)
#else
/*** IUnknown methods ***/
FORCEINLINE HRESULT IMixerOCXNotify_QueryInterface(IMixerOCXNotify* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
FORCEINLINE ULONG IMixerOCXNotify_AddRef(IMixerOCXNotify* This) {
    return This->lpVtbl->AddRef(This);
}
FORCEINLINE ULONG IMixerOCXNotify_Release(IMixerOCXNotify* This) {
    return This->lpVtbl->Release(This);
}
/*** IMixerOCXNotify methods ***/
FORCEINLINE HRESULT IMixerOCXNotify_OnInvalidateRect(IMixerOCXNotify* This,LPCRECT lpcRect) {
    return This->lpVtbl->OnInvalidateRect(This,lpcRect);
}
FORCEINLINE HRESULT IMixerOCXNotify_OnStatusChange(IMixerOCXNotify* This,ULONG ulStatusFlags) {
    return This->lpVtbl->OnStatusChange(This,ulStatusFlags);
}
FORCEINLINE HRESULT IMixerOCXNotify_OnDataChange(IMixerOCXNotify* This,ULONG ulDataFlags) {
    return This->lpVtbl->OnDataChange(This,ulDataFlags);
}
#endif
#endif

#endif

HRESULT STDMETHODCALLTYPE IMixerOCXNotify_OnInvalidateRect_Proxy(
    IMixerOCXNotify* This,
    LPCRECT lpcRect);
void __RPC_STUB IMixerOCXNotify_OnInvalidateRect_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IMixerOCXNotify_OnStatusChange_Proxy(
    IMixerOCXNotify* This,
    ULONG ulStatusFlags);
void __RPC_STUB IMixerOCXNotify_OnStatusChange_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IMixerOCXNotify_OnDataChange_Proxy(
    IMixerOCXNotify* This,
    ULONG ulDataFlags);
void __RPC_STUB IMixerOCXNotify_OnDataChange_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);

#endif  /* __IMixerOCXNotify_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IMixerOCX interface
 */
#ifndef __IMixerOCX_INTERFACE_DEFINED__
#define __IMixerOCX_INTERFACE_DEFINED__

DEFINE_GUID(IID_IMixerOCX, 0x81a3bd32, 0xdee1, 0x11d1, 0x85,0x08, 0x00,0xa0,0xc9,0x1f,0x9c,0xa0);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("81a3bd32-dee1-11d1-8508-00a0c91f9ca0")
IMixerOCX : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE OnDisplayChange(
        ULONG ulBitsPerPixel,
        ULONG ulScreenWidth,
        ULONG ulScreenHeight) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetAspectRatio(
        LPDWORD pdwPictAspectRatioX,
        LPDWORD pdwPictAspectRatioY) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetVideoSize(
        LPDWORD pdwVideoWidth,
        LPDWORD pdwVideoHeight) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetStatus(
        LPDWORD *pdwStatus) = 0;

    virtual HRESULT STDMETHODCALLTYPE OnDraw(
        HDC hdcDraw,
        LPCRECT prcDraw) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetDrawRegion(
        LPPOINT lpptTopLeftSC,
        LPCRECT prcDrawCC,
        LPCRECT lprcClip) = 0;

    virtual HRESULT STDMETHODCALLTYPE Advise(
        IMixerOCXNotify *pmdns) = 0;

    virtual HRESULT STDMETHODCALLTYPE UnAdvise(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IMixerOCX, 0x81a3bd32, 0xdee1, 0x11d1, 0x85,0x08, 0x00,0xa0,0xc9,0x1f,0x9c,0xa0)
#endif
#else
typedef struct IMixerOCXVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IMixerOCX *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IMixerOCX *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IMixerOCX *This);

    /*** IMixerOCX methods ***/
    HRESULT (STDMETHODCALLTYPE *OnDisplayChange)(
        IMixerOCX *This,
        ULONG ulBitsPerPixel,
        ULONG ulScreenWidth,
        ULONG ulScreenHeight);

    HRESULT (STDMETHODCALLTYPE *GetAspectRatio)(
        IMixerOCX *This,
        LPDWORD pdwPictAspectRatioX,
        LPDWORD pdwPictAspectRatioY);

    HRESULT (STDMETHODCALLTYPE *GetVideoSize)(
        IMixerOCX *This,
        LPDWORD pdwVideoWidth,
        LPDWORD pdwVideoHeight);

    HRESULT (STDMETHODCALLTYPE *GetStatus)(
        IMixerOCX *This,
        LPDWORD *pdwStatus);

    HRESULT (STDMETHODCALLTYPE *OnDraw)(
        IMixerOCX *This,
        HDC hdcDraw,
        LPCRECT prcDraw);

    HRESULT (STDMETHODCALLTYPE *SetDrawRegion)(
        IMixerOCX *This,
        LPPOINT lpptTopLeftSC,
        LPCRECT prcDrawCC,
        LPCRECT lprcClip);

    HRESULT (STDMETHODCALLTYPE *Advise)(
        IMixerOCX *This,
        IMixerOCXNotify *pmdns);

    HRESULT (STDMETHODCALLTYPE *UnAdvise)(
        IMixerOCX *This);

    END_INTERFACE
} IMixerOCXVtbl;

interface IMixerOCX {
    CONST_VTBL IMixerOCXVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IMixerOCX_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IMixerOCX_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMixerOCX_Release(This) (This)->lpVtbl->Release(This)
/*** IMixerOCX methods ***/
#define IMixerOCX_OnDisplayChange(This,ulBitsPerPixel,ulScreenWidth,ulScreenHeight) (This)->lpVtbl->OnDisplayChange(This,ulBitsPerPixel,ulScreenWidth,ulScreenHeight)
#define IMixerOCX_GetAspectRatio(This,pdwPictAspectRatioX,pdwPictAspectRatioY) (This)->lpVtbl->GetAspectRatio(This,pdwPictAspectRatioX,pdwPictAspectRatioY)
#define IMixerOCX_GetVideoSize(This,pdwVideoWidth,pdwVideoHeight) (This)->lpVtbl->GetVideoSize(This,pdwVideoWidth,pdwVideoHeight)
#define IMixerOCX_GetStatus(This,pdwStatus) (This)->lpVtbl->GetStatus(This,pdwStatus)
#define IMixerOCX_OnDraw(This,hdcDraw,prcDraw) (This)->lpVtbl->OnDraw(This,hdcDraw,prcDraw)
#define IMixerOCX_SetDrawRegion(This,lpptTopLeftSC,prcDrawCC,lprcClip) (This)->lpVtbl->SetDrawRegion(This,lpptTopLeftSC,prcDrawCC,lprcClip)
#define IMixerOCX_Advise(This,pmdns) (This)->lpVtbl->Advise(This,pmdns)
#define IMixerOCX_UnAdvise(This) (This)->lpVtbl->UnAdvise(This)
#else
/*** IUnknown methods ***/
FORCEINLINE HRESULT IMixerOCX_QueryInterface(IMixerOCX* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
FORCEINLINE ULONG IMixerOCX_AddRef(IMixerOCX* This) {
    return This->lpVtbl->AddRef(This);
}
FORCEINLINE ULONG IMixerOCX_Release(IMixerOCX* This) {
    return This->lpVtbl->Release(This);
}
/*** IMixerOCX methods ***/
FORCEINLINE HRESULT IMixerOCX_OnDisplayChange(IMixerOCX* This,ULONG ulBitsPerPixel,ULONG ulScreenWidth,ULONG ulScreenHeight) {
    return This->lpVtbl->OnDisplayChange(This,ulBitsPerPixel,ulScreenWidth,ulScreenHeight);
}
FORCEINLINE HRESULT IMixerOCX_GetAspectRatio(IMixerOCX* This,LPDWORD pdwPictAspectRatioX,LPDWORD pdwPictAspectRatioY) {
    return This->lpVtbl->GetAspectRatio(This,pdwPictAspectRatioX,pdwPictAspectRatioY);
}
FORCEINLINE HRESULT IMixerOCX_GetVideoSize(IMixerOCX* This,LPDWORD pdwVideoWidth,LPDWORD pdwVideoHeight) {
    return This->lpVtbl->GetVideoSize(This,pdwVideoWidth,pdwVideoHeight);
}
FORCEINLINE HRESULT IMixerOCX_GetStatus(IMixerOCX* This,LPDWORD *pdwStatus) {
    return This->lpVtbl->GetStatus(This,pdwStatus);
}
FORCEINLINE HRESULT IMixerOCX_OnDraw(IMixerOCX* This,HDC hdcDraw,LPCRECT prcDraw) {
    return This->lpVtbl->OnDraw(This,hdcDraw,prcDraw);
}
FORCEINLINE HRESULT IMixerOCX_SetDrawRegion(IMixerOCX* This,LPPOINT lpptTopLeftSC,LPCRECT prcDrawCC,LPCRECT lprcClip) {
    return This->lpVtbl->SetDrawRegion(This,lpptTopLeftSC,prcDrawCC,lprcClip);
}
FORCEINLINE HRESULT IMixerOCX_Advise(IMixerOCX* This,IMixerOCXNotify *pmdns) {
    return This->lpVtbl->Advise(This,pmdns);
}
FORCEINLINE HRESULT IMixerOCX_UnAdvise(IMixerOCX* This) {
    return This->lpVtbl->UnAdvise(This);
}
#endif
#endif

#endif

HRESULT STDMETHODCALLTYPE IMixerOCX_OnDisplayChange_Proxy(
    IMixerOCX* This,
    ULONG ulBitsPerPixel,
    ULONG ulScreenWidth,
    ULONG ulScreenHeight);
void __RPC_STUB IMixerOCX_OnDisplayChange_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IMixerOCX_GetAspectRatio_Proxy(
    IMixerOCX* This,
    LPDWORD pdwPictAspectRatioX,
    LPDWORD pdwPictAspectRatioY);
void __RPC_STUB IMixerOCX_GetAspectRatio_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IMixerOCX_GetVideoSize_Proxy(
    IMixerOCX* This,
    LPDWORD pdwVideoWidth,
    LPDWORD pdwVideoHeight);
void __RPC_STUB IMixerOCX_GetVideoSize_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IMixerOCX_GetStatus_Proxy(
    IMixerOCX* This,
    LPDWORD *pdwStatus);
void __RPC_STUB IMixerOCX_GetStatus_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IMixerOCX_OnDraw_Proxy(
    IMixerOCX* This,
    HDC hdcDraw,
    LPCRECT prcDraw);
void __RPC_STUB IMixerOCX_OnDraw_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IMixerOCX_SetDrawRegion_Proxy(
    IMixerOCX* This,
    LPPOINT lpptTopLeftSC,
    LPCRECT prcDrawCC,
    LPCRECT lprcClip);
void __RPC_STUB IMixerOCX_SetDrawRegion_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IMixerOCX_Advise_Proxy(
    IMixerOCX* This,
    IMixerOCXNotify *pmdns);
void __RPC_STUB IMixerOCX_Advise_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IMixerOCX_UnAdvise_Proxy(
    IMixerOCX* This);
void __RPC_STUB IMixerOCX_UnAdvise_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);

#endif  /* __IMixerOCX_INTERFACE_DEFINED__ */

/* Begin additional prototypes for all interfaces */

ULONG           __RPC_USER HDC_UserSize     (ULONG *, ULONG, HDC *);
unsigned char * __RPC_USER HDC_UserMarshal  (ULONG *, unsigned char *, HDC *);
unsigned char * __RPC_USER HDC_UserUnmarshal(ULONG *, unsigned char *, HDC *);
void            __RPC_USER HDC_UserFree     (ULONG *, HDC *);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __mixerocx_h__ */
