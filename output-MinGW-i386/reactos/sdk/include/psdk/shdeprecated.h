/*** Autogenerated by WIDL <undefined version> from /home/jens/winos/reactos/sdk/include/psdk/shdeprecated.idl - Do not edit ***/

#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#ifdef __REACTOS__
#define WIN32_LEAN_AND_MEAN
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __shdeprecated_h__
#define __shdeprecated_h__

/* Forward declarations */

#ifndef __ITravelEntry_FWD_DEFINED__
#define __ITravelEntry_FWD_DEFINED__
typedef interface ITravelEntry ITravelEntry;
#ifdef __cplusplus
interface ITravelEntry;
#endif /* __cplusplus */
#endif

#ifndef __ITravelLog_FWD_DEFINED__
#define __ITravelLog_FWD_DEFINED__
typedef interface ITravelLog ITravelLog;
#ifdef __cplusplus
interface ITravelLog;
#endif /* __cplusplus */
#endif

#ifndef __IExpDispSupport_FWD_DEFINED__
#define __IExpDispSupport_FWD_DEFINED__
typedef interface IExpDispSupport IExpDispSupport;
#ifdef __cplusplus
interface IExpDispSupport;
#endif /* __cplusplus */
#endif

#ifndef __IBrowserService_FWD_DEFINED__
#define __IBrowserService_FWD_DEFINED__
typedef interface IBrowserService IBrowserService;
#ifdef __cplusplus
interface IBrowserService;
#endif /* __cplusplus */
#endif

#ifndef __IShellService_FWD_DEFINED__
#define __IShellService_FWD_DEFINED__
typedef interface IShellService IShellService;
#ifdef __cplusplus
interface IShellService;
#endif /* __cplusplus */
#endif

#ifndef __IBrowserService2_FWD_DEFINED__
#define __IBrowserService2_FWD_DEFINED__
typedef interface IBrowserService2 IBrowserService2;
#ifdef __cplusplus
interface IBrowserService2;
#endif /* __cplusplus */
#endif

#ifndef __IBrowserService3_FWD_DEFINED__
#define __IBrowserService3_FWD_DEFINED__
typedef interface IBrowserService3 IBrowserService3;
#ifdef __cplusplus
interface IBrowserService3;
#endif /* __cplusplus */
#endif

#ifndef __IBrowserService4_FWD_DEFINED__
#define __IBrowserService4_FWD_DEFINED__
typedef interface IBrowserService4 IBrowserService4;
#ifdef __cplusplus
interface IBrowserService4;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <objidl.h>
#include <ocidl.h>
#include <shtypes.h>
#include <shobjidl.h>
#include <hlink.h>
#include <exdisp.h>

#ifdef __cplusplus
extern "C" {
#endif

#define TLOG_BACK    -1
#define TLOG_FORE    1
#define TLMENUF_INCLUDECURRENT   0x00000001
#define TLMENUF_CHECKCURRENT     (TLMENUF_INCLUDECURRENT | 0x00000002)
#define TLMENUF_BACK             0x00000010
#define TLMENUF_FORE             0x00000020
#define TLMENUF_BACKANDFORTH     (TLMENUF_BACK | TLMENUF_FORE | TLMENUF_INCLUDECURRENT)
/*****************************************************************************
 * ITravelEntry interface
 */
#ifndef __ITravelEntry_INTERFACE_DEFINED__
#define __ITravelEntry_INTERFACE_DEFINED__

DEFINE_GUID(IID_ITravelEntry, 0xf46edb3b, 0xbc2f, 0x11d0, 0x94,0x12, 0x00,0xaa,0x00,0xa3,0xeb,0xd3);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("f46edb3b-bc2f-11d0-9412-00aa00a3ebd3")
ITravelEntry : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE Invoke(
        IUnknown *punk) = 0;

    virtual HRESULT STDMETHODCALLTYPE Update(
        IUnknown *punk,
        BOOL fIsLocalAnchor) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetPidl(
        LPITEMIDLIST *ppidl) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ITravelEntry, 0xf46edb3b, 0xbc2f, 0x11d0, 0x94,0x12, 0x00,0xaa,0x00,0xa3,0xeb,0xd3)
#endif
#else
typedef struct ITravelEntryVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ITravelEntry *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ITravelEntry *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ITravelEntry *This);

    /*** ITravelEntry methods ***/
    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ITravelEntry *This,
        IUnknown *punk);

    HRESULT (STDMETHODCALLTYPE *Update)(
        ITravelEntry *This,
        IUnknown *punk,
        BOOL fIsLocalAnchor);

    HRESULT (STDMETHODCALLTYPE *GetPidl)(
        ITravelEntry *This,
        LPITEMIDLIST *ppidl);

    END_INTERFACE
} ITravelEntryVtbl;

interface ITravelEntry {
    CONST_VTBL ITravelEntryVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ITravelEntry_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ITravelEntry_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ITravelEntry_Release(This) (This)->lpVtbl->Release(This)
/*** ITravelEntry methods ***/
#define ITravelEntry_Invoke(This,punk) (This)->lpVtbl->Invoke(This,punk)
#define ITravelEntry_Update(This,punk,fIsLocalAnchor) (This)->lpVtbl->Update(This,punk,fIsLocalAnchor)
#define ITravelEntry_GetPidl(This,ppidl) (This)->lpVtbl->GetPidl(This,ppidl)
#else
/*** IUnknown methods ***/
FORCEINLINE HRESULT ITravelEntry_QueryInterface(ITravelEntry* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
FORCEINLINE ULONG ITravelEntry_AddRef(ITravelEntry* This) {
    return This->lpVtbl->AddRef(This);
}
FORCEINLINE ULONG ITravelEntry_Release(ITravelEntry* This) {
    return This->lpVtbl->Release(This);
}
/*** ITravelEntry methods ***/
FORCEINLINE HRESULT ITravelEntry_Invoke(ITravelEntry* This,IUnknown *punk) {
    return This->lpVtbl->Invoke(This,punk);
}
FORCEINLINE HRESULT ITravelEntry_Update(ITravelEntry* This,IUnknown *punk,BOOL fIsLocalAnchor) {
    return This->lpVtbl->Update(This,punk,fIsLocalAnchor);
}
FORCEINLINE HRESULT ITravelEntry_GetPidl(ITravelEntry* This,LPITEMIDLIST *ppidl) {
    return This->lpVtbl->GetPidl(This,ppidl);
}
#endif
#endif

#endif

HRESULT STDMETHODCALLTYPE ITravelEntry_Invoke_Proxy(
    ITravelEntry* This,
    IUnknown *punk);
void __RPC_STUB ITravelEntry_Invoke_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE ITravelEntry_Update_Proxy(
    ITravelEntry* This,
    IUnknown *punk,
    BOOL fIsLocalAnchor);
void __RPC_STUB ITravelEntry_Update_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE ITravelEntry_GetPidl_Proxy(
    ITravelEntry* This,
    LPITEMIDLIST *ppidl);
void __RPC_STUB ITravelEntry_GetPidl_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);

#endif  /* __ITravelEntry_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ITravelLog interface
 */
#ifndef __ITravelLog_INTERFACE_DEFINED__
#define __ITravelLog_INTERFACE_DEFINED__

DEFINE_GUID(IID_ITravelLog, 0x66a9cb08, 0x4802, 0x11d2, 0xa5,0x61, 0x00,0xa0,0xc9,0x2d,0xbf,0xe8);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("66a9cb08-4802-11d2-a561-00a0c92dbfe8")
ITravelLog : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE AddEntry(
        IUnknown *punk,
        BOOL fIsLocalAnchor) = 0;

    virtual HRESULT STDMETHODCALLTYPE UpdateEntry(
        IUnknown *punk,
        BOOL fIsLocalAnchor) = 0;

    virtual HRESULT STDMETHODCALLTYPE UpdateExternal(
        IUnknown *punk,
        IUnknown *punkHLBrowseContext) = 0;

    virtual HRESULT STDMETHODCALLTYPE Travel(
        IUnknown *punk,
        int iOffset) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetTravelEntry(
        IUnknown *punk,
        int iOffset,
        ITravelEntry **ppte) = 0;

    virtual HRESULT STDMETHODCALLTYPE FindTravelEntry(
        IUnknown *punk,
        LPCITEMIDLIST pidl,
        ITravelEntry **ppte) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetToolTipText(
        IUnknown *punk,
        int iOffset,
        int idsTemplate,
        LPWSTR pwzText,
        DWORD cchText) = 0;

    virtual HRESULT STDMETHODCALLTYPE InsertMenuEntries(
        IUnknown *punk,
        HMENU hmenu,
        int nPos,
        int idFirst,
        int idLast,
        DWORD dwFlags) = 0;

    virtual HRESULT STDMETHODCALLTYPE Clone(
        ITravelLog **pptl) = 0;

    virtual DWORD STDMETHODCALLTYPE CountEntries(
        IUnknown *punk) = 0;

    virtual HRESULT STDMETHODCALLTYPE Revert(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ITravelLog, 0x66a9cb08, 0x4802, 0x11d2, 0xa5,0x61, 0x00,0xa0,0xc9,0x2d,0xbf,0xe8)
#endif
#else
typedef struct ITravelLogVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ITravelLog *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ITravelLog *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ITravelLog *This);

    /*** ITravelLog methods ***/
    HRESULT (STDMETHODCALLTYPE *AddEntry)(
        ITravelLog *This,
        IUnknown *punk,
        BOOL fIsLocalAnchor);

    HRESULT (STDMETHODCALLTYPE *UpdateEntry)(
        ITravelLog *This,
        IUnknown *punk,
        BOOL fIsLocalAnchor);

    HRESULT (STDMETHODCALLTYPE *UpdateExternal)(
        ITravelLog *This,
        IUnknown *punk,
        IUnknown *punkHLBrowseContext);

    HRESULT (STDMETHODCALLTYPE *Travel)(
        ITravelLog *This,
        IUnknown *punk,
        int iOffset);

    HRESULT (STDMETHODCALLTYPE *GetTravelEntry)(
        ITravelLog *This,
        IUnknown *punk,
        int iOffset,
        ITravelEntry **ppte);

    HRESULT (STDMETHODCALLTYPE *FindTravelEntry)(
        ITravelLog *This,
        IUnknown *punk,
        LPCITEMIDLIST pidl,
        ITravelEntry **ppte);

    HRESULT (STDMETHODCALLTYPE *GetToolTipText)(
        ITravelLog *This,
        IUnknown *punk,
        int iOffset,
        int idsTemplate,
        LPWSTR pwzText,
        DWORD cchText);

    HRESULT (STDMETHODCALLTYPE *InsertMenuEntries)(
        ITravelLog *This,
        IUnknown *punk,
        HMENU hmenu,
        int nPos,
        int idFirst,
        int idLast,
        DWORD dwFlags);

    HRESULT (STDMETHODCALLTYPE *Clone)(
        ITravelLog *This,
        ITravelLog **pptl);

    DWORD (STDMETHODCALLTYPE *CountEntries)(
        ITravelLog *This,
        IUnknown *punk);

    HRESULT (STDMETHODCALLTYPE *Revert)(
        ITravelLog *This);

    END_INTERFACE
} ITravelLogVtbl;

interface ITravelLog {
    CONST_VTBL ITravelLogVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ITravelLog_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ITravelLog_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ITravelLog_Release(This) (This)->lpVtbl->Release(This)
/*** ITravelLog methods ***/
#define ITravelLog_AddEntry(This,punk,fIsLocalAnchor) (This)->lpVtbl->AddEntry(This,punk,fIsLocalAnchor)
#define ITravelLog_UpdateEntry(This,punk,fIsLocalAnchor) (This)->lpVtbl->UpdateEntry(This,punk,fIsLocalAnchor)
#define ITravelLog_UpdateExternal(This,punk,punkHLBrowseContext) (This)->lpVtbl->UpdateExternal(This,punk,punkHLBrowseContext)
#define ITravelLog_Travel(This,punk,iOffset) (This)->lpVtbl->Travel(This,punk,iOffset)
#define ITravelLog_GetTravelEntry(This,punk,iOffset,ppte) (This)->lpVtbl->GetTravelEntry(This,punk,iOffset,ppte)
#define ITravelLog_FindTravelEntry(This,punk,pidl,ppte) (This)->lpVtbl->FindTravelEntry(This,punk,pidl,ppte)
#define ITravelLog_GetToolTipText(This,punk,iOffset,idsTemplate,pwzText,cchText) (This)->lpVtbl->GetToolTipText(This,punk,iOffset,idsTemplate,pwzText,cchText)
#define ITravelLog_InsertMenuEntries(This,punk,hmenu,nPos,idFirst,idLast,dwFlags) (This)->lpVtbl->InsertMenuEntries(This,punk,hmenu,nPos,idFirst,idLast,dwFlags)
#define ITravelLog_Clone(This,pptl) (This)->lpVtbl->Clone(This,pptl)
#define ITravelLog_CountEntries(This,punk) (This)->lpVtbl->CountEntries(This,punk)
#define ITravelLog_Revert(This) (This)->lpVtbl->Revert(This)
#else
/*** IUnknown methods ***/
FORCEINLINE HRESULT ITravelLog_QueryInterface(ITravelLog* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
FORCEINLINE ULONG ITravelLog_AddRef(ITravelLog* This) {
    return This->lpVtbl->AddRef(This);
}
FORCEINLINE ULONG ITravelLog_Release(ITravelLog* This) {
    return This->lpVtbl->Release(This);
}
/*** ITravelLog methods ***/
FORCEINLINE HRESULT ITravelLog_AddEntry(ITravelLog* This,IUnknown *punk,BOOL fIsLocalAnchor) {
    return This->lpVtbl->AddEntry(This,punk,fIsLocalAnchor);
}
FORCEINLINE HRESULT ITravelLog_UpdateEntry(ITravelLog* This,IUnknown *punk,BOOL fIsLocalAnchor) {
    return This->lpVtbl->UpdateEntry(This,punk,fIsLocalAnchor);
}
FORCEINLINE HRESULT ITravelLog_UpdateExternal(ITravelLog* This,IUnknown *punk,IUnknown *punkHLBrowseContext) {
    return This->lpVtbl->UpdateExternal(This,punk,punkHLBrowseContext);
}
FORCEINLINE HRESULT ITravelLog_Travel(ITravelLog* This,IUnknown *punk,int iOffset) {
    return This->lpVtbl->Travel(This,punk,iOffset);
}
FORCEINLINE HRESULT ITravelLog_GetTravelEntry(ITravelLog* This,IUnknown *punk,int iOffset,ITravelEntry **ppte) {
    return This->lpVtbl->GetTravelEntry(This,punk,iOffset,ppte);
}
FORCEINLINE HRESULT ITravelLog_FindTravelEntry(ITravelLog* This,IUnknown *punk,LPCITEMIDLIST pidl,ITravelEntry **ppte) {
    return This->lpVtbl->FindTravelEntry(This,punk,pidl,ppte);
}
FORCEINLINE HRESULT ITravelLog_GetToolTipText(ITravelLog* This,IUnknown *punk,int iOffset,int idsTemplate,LPWSTR pwzText,DWORD cchText) {
    return This->lpVtbl->GetToolTipText(This,punk,iOffset,idsTemplate,pwzText,cchText);
}
FORCEINLINE HRESULT ITravelLog_InsertMenuEntries(ITravelLog* This,IUnknown *punk,HMENU hmenu,int nPos,int idFirst,int idLast,DWORD dwFlags) {
    return This->lpVtbl->InsertMenuEntries(This,punk,hmenu,nPos,idFirst,idLast,dwFlags);
}
FORCEINLINE HRESULT ITravelLog_Clone(ITravelLog* This,ITravelLog **pptl) {
    return This->lpVtbl->Clone(This,pptl);
}
FORCEINLINE DWORD ITravelLog_CountEntries(ITravelLog* This,IUnknown *punk) {
    return This->lpVtbl->CountEntries(This,punk);
}
FORCEINLINE HRESULT ITravelLog_Revert(ITravelLog* This) {
    return This->lpVtbl->Revert(This);
}
#endif
#endif

#endif

HRESULT STDMETHODCALLTYPE ITravelLog_AddEntry_Proxy(
    ITravelLog* This,
    IUnknown *punk,
    BOOL fIsLocalAnchor);
void __RPC_STUB ITravelLog_AddEntry_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE ITravelLog_UpdateEntry_Proxy(
    ITravelLog* This,
    IUnknown *punk,
    BOOL fIsLocalAnchor);
void __RPC_STUB ITravelLog_UpdateEntry_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE ITravelLog_UpdateExternal_Proxy(
    ITravelLog* This,
    IUnknown *punk,
    IUnknown *punkHLBrowseContext);
void __RPC_STUB ITravelLog_UpdateExternal_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE ITravelLog_Travel_Proxy(
    ITravelLog* This,
    IUnknown *punk,
    int iOffset);
void __RPC_STUB ITravelLog_Travel_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE ITravelLog_GetTravelEntry_Proxy(
    ITravelLog* This,
    IUnknown *punk,
    int iOffset,
    ITravelEntry **ppte);
void __RPC_STUB ITravelLog_GetTravelEntry_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE ITravelLog_FindTravelEntry_Proxy(
    ITravelLog* This,
    IUnknown *punk,
    LPCITEMIDLIST pidl,
    ITravelEntry **ppte);
void __RPC_STUB ITravelLog_FindTravelEntry_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE ITravelLog_GetToolTipText_Proxy(
    ITravelLog* This,
    IUnknown *punk,
    int iOffset,
    int idsTemplate,
    LPWSTR pwzText,
    DWORD cchText);
void __RPC_STUB ITravelLog_GetToolTipText_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE ITravelLog_InsertMenuEntries_Proxy(
    ITravelLog* This,
    IUnknown *punk,
    HMENU hmenu,
    int nPos,
    int idFirst,
    int idLast,
    DWORD dwFlags);
void __RPC_STUB ITravelLog_InsertMenuEntries_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE ITravelLog_Clone_Proxy(
    ITravelLog* This,
    ITravelLog **pptl);
void __RPC_STUB ITravelLog_Clone_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
DWORD STDMETHODCALLTYPE ITravelLog_CountEntries_Proxy(
    ITravelLog* This,
    IUnknown *punk);
void __RPC_STUB ITravelLog_CountEntries_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE ITravelLog_Revert_Proxy(
    ITravelLog* This);
void __RPC_STUB ITravelLog_Revert_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);

#endif  /* __ITravelLog_INTERFACE_DEFINED__ */

typedef void *CIE4ConnectionPoint;
/*****************************************************************************
 * IExpDispSupport interface
 */
#ifndef __IExpDispSupport_INTERFACE_DEFINED__
#define __IExpDispSupport_INTERFACE_DEFINED__

DEFINE_GUID(IID_IExpDispSupport, 0x0d7d1d00, 0x6fc0, 0x11d0, 0xa9,0x74, 0x00,0xc0,0x4f,0xd7,0x05,0xa2);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("0d7d1d00-6fc0-11d0-a974-00c04fd705a2")
IExpDispSupport : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE FindCIE4ConnectionPoint(
        REFIID riid,
        CIE4ConnectionPoint **ppccp) = 0;

    virtual HRESULT STDMETHODCALLTYPE OnTranslateAccelerator(
        MSG *pMsg,
        DWORD grfModifiers) = 0;

    virtual HRESULT STDMETHODCALLTYPE OnInvoke(
        DISPID dispidMember,
        REFIID iid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pdispparams,
        VARIANT *pVarResult,
        EXCEPINFO *pexcepinfo,
        UINT *puArgErr) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IExpDispSupport, 0x0d7d1d00, 0x6fc0, 0x11d0, 0xa9,0x74, 0x00,0xc0,0x4f,0xd7,0x05,0xa2)
#endif
#else
typedef struct IExpDispSupportVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IExpDispSupport *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IExpDispSupport *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IExpDispSupport *This);

    /*** IExpDispSupport methods ***/
    HRESULT (STDMETHODCALLTYPE *FindCIE4ConnectionPoint)(
        IExpDispSupport *This,
        REFIID riid,
        CIE4ConnectionPoint **ppccp);

    HRESULT (STDMETHODCALLTYPE *OnTranslateAccelerator)(
        IExpDispSupport *This,
        MSG *pMsg,
        DWORD grfModifiers);

    HRESULT (STDMETHODCALLTYPE *OnInvoke)(
        IExpDispSupport *This,
        DISPID dispidMember,
        REFIID iid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pdispparams,
        VARIANT *pVarResult,
        EXCEPINFO *pexcepinfo,
        UINT *puArgErr);

    END_INTERFACE
} IExpDispSupportVtbl;

interface IExpDispSupport {
    CONST_VTBL IExpDispSupportVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IExpDispSupport_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IExpDispSupport_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IExpDispSupport_Release(This) (This)->lpVtbl->Release(This)
/*** IExpDispSupport methods ***/
#define IExpDispSupport_FindCIE4ConnectionPoint(This,riid,ppccp) (This)->lpVtbl->FindCIE4ConnectionPoint(This,riid,ppccp)
#define IExpDispSupport_OnTranslateAccelerator(This,pMsg,grfModifiers) (This)->lpVtbl->OnTranslateAccelerator(This,pMsg,grfModifiers)
#define IExpDispSupport_OnInvoke(This,dispidMember,iid,lcid,wFlags,pdispparams,pVarResult,pexcepinfo,puArgErr) (This)->lpVtbl->OnInvoke(This,dispidMember,iid,lcid,wFlags,pdispparams,pVarResult,pexcepinfo,puArgErr)
#else
/*** IUnknown methods ***/
FORCEINLINE HRESULT IExpDispSupport_QueryInterface(IExpDispSupport* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
FORCEINLINE ULONG IExpDispSupport_AddRef(IExpDispSupport* This) {
    return This->lpVtbl->AddRef(This);
}
FORCEINLINE ULONG IExpDispSupport_Release(IExpDispSupport* This) {
    return This->lpVtbl->Release(This);
}
/*** IExpDispSupport methods ***/
FORCEINLINE HRESULT IExpDispSupport_FindCIE4ConnectionPoint(IExpDispSupport* This,REFIID riid,CIE4ConnectionPoint **ppccp) {
    return This->lpVtbl->FindCIE4ConnectionPoint(This,riid,ppccp);
}
FORCEINLINE HRESULT IExpDispSupport_OnTranslateAccelerator(IExpDispSupport* This,MSG *pMsg,DWORD grfModifiers) {
    return This->lpVtbl->OnTranslateAccelerator(This,pMsg,grfModifiers);
}
FORCEINLINE HRESULT IExpDispSupport_OnInvoke(IExpDispSupport* This,DISPID dispidMember,REFIID iid,LCID lcid,WORD wFlags,DISPPARAMS *pdispparams,VARIANT *pVarResult,EXCEPINFO *pexcepinfo,UINT *puArgErr) {
    return This->lpVtbl->OnInvoke(This,dispidMember,iid,lcid,wFlags,pdispparams,pVarResult,pexcepinfo,puArgErr);
}
#endif
#endif

#endif

HRESULT STDMETHODCALLTYPE IExpDispSupport_FindCIE4ConnectionPoint_Proxy(
    IExpDispSupport* This,
    REFIID riid,
    CIE4ConnectionPoint **ppccp);
void __RPC_STUB IExpDispSupport_FindCIE4ConnectionPoint_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IExpDispSupport_OnTranslateAccelerator_Proxy(
    IExpDispSupport* This,
    MSG *pMsg,
    DWORD grfModifiers);
void __RPC_STUB IExpDispSupport_OnTranslateAccelerator_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IExpDispSupport_OnInvoke_Proxy(
    IExpDispSupport* This,
    DISPID dispidMember,
    REFIID iid,
    LCID lcid,
    WORD wFlags,
    DISPPARAMS *pdispparams,
    VARIANT *pVarResult,
    EXCEPINFO *pexcepinfo,
    UINT *puArgErr);
void __RPC_STUB IExpDispSupport_OnInvoke_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);

#endif  /* __IExpDispSupport_INTERFACE_DEFINED__ */

typedef enum tagBNSTATE {
    BNS_NORMAL = 0,
    BNS_BEGIN_NAVIGATE = 1,
    BNS_NAVIGATE = 2
} BNSTATE;
enum {
    SBSC_HIDE = 0,
    SBSC_SHOW = 1,
    SBSC_TOGGLE = 2,
    SBSC_QUERY = 3
};
#define BSF_REGISTERASDROPTARGET     0x00000001
#define BSF_THEATERMODE              0x00000002
#define BSF_NOLOCALFILEWARNING       0x00000010
#define BSF_UISETBYAUTOMATION        0x00000100
#define BSF_RESIZABLE                0x00000200
#define BSF_CANMAXIMIZE              0x00000400
#define BSF_TOPBROWSER               0x00000800
#define BSF_NAVNOHISTORY             0x00001000
#define BSF_HTMLNAVCANCELED          0x00002000
#define BSF_DONTSHOWNAVCANCELPAGE    0x00004000
#define BSF_SETNAVIGATABLECODEPAGE   0x00008000
#define BSF_DELEGATEDNAVIGATION      0x00010000
#define BSF_TRUSTEDFORACTIVEX        0x00020000
#define HLNF_CALLERUNTRUSTED             0x00200000
#define HLNF_TRUSTEDFORACTIVEX           0x00400000
#define HLNF_DISABLEWINDOWRESTRICTIONS   0x00800000
#define HLNF_TRUSTFIRSTDOWNLOAD          0x01000000
#define HLNF_UNTRUSTEDFORDOWNLOAD        0x02000000
#define SHHLNF_NOAUTOSELECT              0x04000000
#define SHHLNF_WRITENOHISTORY            0x08000000
#define HLNF_EXTERNALNAVIGATE            0x10000000
#define HLNF_ALLOW_AUTONAVIGATE          0x20000000
#define HLNF_NEWWINDOWSMANAGED           0x80000000
/*****************************************************************************
 * IBrowserService interface
 */
#ifndef __IBrowserService_INTERFACE_DEFINED__
#define __IBrowserService_INTERFACE_DEFINED__

DEFINE_GUID(IID_IBrowserService, 0x02ba3b52, 0x0547, 0x11d1, 0xb8,0x33, 0x00,0xc0,0x4f,0xc9,0xb3,0x1f);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("02ba3b52-0547-11d1-b833-00c04fc9b31f")
IBrowserService : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE GetParentSite(
        IOleInPlaceSite **ppipsite) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetTitle(
        IShellView *psv,
        LPCWSTR pszName) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetTitle(
        IShellView *psv,
        LPWSTR pszName,
        DWORD cchName) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetOleObject(
        IOleObject **ppobjv) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetTravelLog(
        ITravelLog **pptl) = 0;

    virtual HRESULT STDMETHODCALLTYPE ShowControlWindow(
        UINT id,
        BOOL fShow) = 0;

    virtual HRESULT STDMETHODCALLTYPE IsControlWindowShown(
        UINT id,
        BOOL *pfShown) = 0;

    virtual HRESULT STDMETHODCALLTYPE IEGetDisplayName(
        PCIDLIST_ABSOLUTE pidl,
        LPWSTR pwszName,
        UINT uFlags) = 0;

    virtual HRESULT STDMETHODCALLTYPE IEParseDisplayName(
        UINT uiCP,
        LPCWSTR pwszPath,
        PIDLIST_ABSOLUTE *ppidlOut) = 0;

    virtual HRESULT STDMETHODCALLTYPE DisplayParseError(
        HRESULT hres,
        LPCWSTR pwszPath) = 0;

    virtual HRESULT STDMETHODCALLTYPE NavigateToPidl(
        PCIDLIST_ABSOLUTE pidl,
        DWORD grfHLNF) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetNavigateState(
        BNSTATE bnstate) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetNavigateState(
        BNSTATE *pbnstate) = 0;

    virtual HRESULT STDMETHODCALLTYPE NotifyRedirect(
        IShellView *psv,
        PCIDLIST_ABSOLUTE pidl,
        BOOL *pfDidBrowse) = 0;

    virtual HRESULT STDMETHODCALLTYPE UpdateWindowList(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE UpdateBackForwardState(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetFlags(
        DWORD dwFlags,
        DWORD dwFlagMask) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetFlags(
        DWORD *pdwFlags) = 0;

    virtual HRESULT STDMETHODCALLTYPE CanNavigateNow(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetPidl(
        PIDLIST_ABSOLUTE *ppidl) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetReferrer(
        PCIDLIST_ABSOLUTE pidl) = 0;

    virtual DWORD STDMETHODCALLTYPE GetBrowserIndex(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetBrowserByIndex(
        DWORD dwID,
        IUnknown **ppunk) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetHistoryObject(
        IOleObject **ppole,
        IStream **pstm,
        IBindCtx **ppbc) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetHistoryObject(
        IOleObject *pole,
        BOOL fIsLocalAnchor) = 0;

    virtual HRESULT STDMETHODCALLTYPE CacheOLEServer(
        IOleObject *pole) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetSetCodePage(
        VARIANT *pvarIn,
        VARIANT *pvarOut) = 0;

    virtual HRESULT STDMETHODCALLTYPE OnHttpEquiv(
        IShellView *psv,
        BOOL fDone,
        VARIANT *pvarargIn,
        VARIANT *pvarargOut) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetPalette(
        HPALETTE *hpal) = 0;

    virtual HRESULT STDMETHODCALLTYPE RegisterWindow(
        BOOL fForceRegister,
        int swc) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IBrowserService, 0x02ba3b52, 0x0547, 0x11d1, 0xb8,0x33, 0x00,0xc0,0x4f,0xc9,0xb3,0x1f)
#endif
#else
typedef struct IBrowserServiceVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IBrowserService *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IBrowserService *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IBrowserService *This);

    /*** IBrowserService methods ***/
    HRESULT (STDMETHODCALLTYPE *GetParentSite)(
        IBrowserService *This,
        IOleInPlaceSite **ppipsite);

    HRESULT (STDMETHODCALLTYPE *SetTitle)(
        IBrowserService *This,
        IShellView *psv,
        LPCWSTR pszName);

    HRESULT (STDMETHODCALLTYPE *GetTitle)(
        IBrowserService *This,
        IShellView *psv,
        LPWSTR pszName,
        DWORD cchName);

    HRESULT (STDMETHODCALLTYPE *GetOleObject)(
        IBrowserService *This,
        IOleObject **ppobjv);

    HRESULT (STDMETHODCALLTYPE *GetTravelLog)(
        IBrowserService *This,
        ITravelLog **pptl);

    HRESULT (STDMETHODCALLTYPE *ShowControlWindow)(
        IBrowserService *This,
        UINT id,
        BOOL fShow);

    HRESULT (STDMETHODCALLTYPE *IsControlWindowShown)(
        IBrowserService *This,
        UINT id,
        BOOL *pfShown);

    HRESULT (STDMETHODCALLTYPE *IEGetDisplayName)(
        IBrowserService *This,
        PCIDLIST_ABSOLUTE pidl,
        LPWSTR pwszName,
        UINT uFlags);

    HRESULT (STDMETHODCALLTYPE *IEParseDisplayName)(
        IBrowserService *This,
        UINT uiCP,
        LPCWSTR pwszPath,
        PIDLIST_ABSOLUTE *ppidlOut);

    HRESULT (STDMETHODCALLTYPE *DisplayParseError)(
        IBrowserService *This,
        HRESULT hres,
        LPCWSTR pwszPath);

    HRESULT (STDMETHODCALLTYPE *NavigateToPidl)(
        IBrowserService *This,
        PCIDLIST_ABSOLUTE pidl,
        DWORD grfHLNF);

    HRESULT (STDMETHODCALLTYPE *SetNavigateState)(
        IBrowserService *This,
        BNSTATE bnstate);

    HRESULT (STDMETHODCALLTYPE *GetNavigateState)(
        IBrowserService *This,
        BNSTATE *pbnstate);

    HRESULT (STDMETHODCALLTYPE *NotifyRedirect)(
        IBrowserService *This,
        IShellView *psv,
        PCIDLIST_ABSOLUTE pidl,
        BOOL *pfDidBrowse);

    HRESULT (STDMETHODCALLTYPE *UpdateWindowList)(
        IBrowserService *This);

    HRESULT (STDMETHODCALLTYPE *UpdateBackForwardState)(
        IBrowserService *This);

    HRESULT (STDMETHODCALLTYPE *SetFlags)(
        IBrowserService *This,
        DWORD dwFlags,
        DWORD dwFlagMask);

    HRESULT (STDMETHODCALLTYPE *GetFlags)(
        IBrowserService *This,
        DWORD *pdwFlags);

    HRESULT (STDMETHODCALLTYPE *CanNavigateNow)(
        IBrowserService *This);

    HRESULT (STDMETHODCALLTYPE *GetPidl)(
        IBrowserService *This,
        PIDLIST_ABSOLUTE *ppidl);

    HRESULT (STDMETHODCALLTYPE *SetReferrer)(
        IBrowserService *This,
        PCIDLIST_ABSOLUTE pidl);

    DWORD (STDMETHODCALLTYPE *GetBrowserIndex)(
        IBrowserService *This);

    HRESULT (STDMETHODCALLTYPE *GetBrowserByIndex)(
        IBrowserService *This,
        DWORD dwID,
        IUnknown **ppunk);

    HRESULT (STDMETHODCALLTYPE *GetHistoryObject)(
        IBrowserService *This,
        IOleObject **ppole,
        IStream **pstm,
        IBindCtx **ppbc);

    HRESULT (STDMETHODCALLTYPE *SetHistoryObject)(
        IBrowserService *This,
        IOleObject *pole,
        BOOL fIsLocalAnchor);

    HRESULT (STDMETHODCALLTYPE *CacheOLEServer)(
        IBrowserService *This,
        IOleObject *pole);

    HRESULT (STDMETHODCALLTYPE *GetSetCodePage)(
        IBrowserService *This,
        VARIANT *pvarIn,
        VARIANT *pvarOut);

    HRESULT (STDMETHODCALLTYPE *OnHttpEquiv)(
        IBrowserService *This,
        IShellView *psv,
        BOOL fDone,
        VARIANT *pvarargIn,
        VARIANT *pvarargOut);

    HRESULT (STDMETHODCALLTYPE *GetPalette)(
        IBrowserService *This,
        HPALETTE *hpal);

    HRESULT (STDMETHODCALLTYPE *RegisterWindow)(
        IBrowserService *This,
        BOOL fForceRegister,
        int swc);

    END_INTERFACE
} IBrowserServiceVtbl;

interface IBrowserService {
    CONST_VTBL IBrowserServiceVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IBrowserService_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IBrowserService_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IBrowserService_Release(This) (This)->lpVtbl->Release(This)
/*** IBrowserService methods ***/
#define IBrowserService_GetParentSite(This,ppipsite) (This)->lpVtbl->GetParentSite(This,ppipsite)
#define IBrowserService_SetTitle(This,psv,pszName) (This)->lpVtbl->SetTitle(This,psv,pszName)
#define IBrowserService_GetTitle(This,psv,pszName,cchName) (This)->lpVtbl->GetTitle(This,psv,pszName,cchName)
#define IBrowserService_GetOleObject(This,ppobjv) (This)->lpVtbl->GetOleObject(This,ppobjv)
#define IBrowserService_GetTravelLog(This,pptl) (This)->lpVtbl->GetTravelLog(This,pptl)
#define IBrowserService_ShowControlWindow(This,id,fShow) (This)->lpVtbl->ShowControlWindow(This,id,fShow)
#define IBrowserService_IsControlWindowShown(This,id,pfShown) (This)->lpVtbl->IsControlWindowShown(This,id,pfShown)
#define IBrowserService_IEGetDisplayName(This,pidl,pwszName,uFlags) (This)->lpVtbl->IEGetDisplayName(This,pidl,pwszName,uFlags)
#define IBrowserService_IEParseDisplayName(This,uiCP,pwszPath,ppidlOut) (This)->lpVtbl->IEParseDisplayName(This,uiCP,pwszPath,ppidlOut)
#define IBrowserService_DisplayParseError(This,hres,pwszPath) (This)->lpVtbl->DisplayParseError(This,hres,pwszPath)
#define IBrowserService_NavigateToPidl(This,pidl,grfHLNF) (This)->lpVtbl->NavigateToPidl(This,pidl,grfHLNF)
#define IBrowserService_SetNavigateState(This,bnstate) (This)->lpVtbl->SetNavigateState(This,bnstate)
#define IBrowserService_GetNavigateState(This,pbnstate) (This)->lpVtbl->GetNavigateState(This,pbnstate)
#define IBrowserService_NotifyRedirect(This,psv,pidl,pfDidBrowse) (This)->lpVtbl->NotifyRedirect(This,psv,pidl,pfDidBrowse)
#define IBrowserService_UpdateWindowList(This) (This)->lpVtbl->UpdateWindowList(This)
#define IBrowserService_UpdateBackForwardState(This) (This)->lpVtbl->UpdateBackForwardState(This)
#define IBrowserService_SetFlags(This,dwFlags,dwFlagMask) (This)->lpVtbl->SetFlags(This,dwFlags,dwFlagMask)
#define IBrowserService_GetFlags(This,pdwFlags) (This)->lpVtbl->GetFlags(This,pdwFlags)
#define IBrowserService_CanNavigateNow(This) (This)->lpVtbl->CanNavigateNow(This)
#define IBrowserService_GetPidl(This,ppidl) (This)->lpVtbl->GetPidl(This,ppidl)
#define IBrowserService_SetReferrer(This,pidl) (This)->lpVtbl->SetReferrer(This,pidl)
#define IBrowserService_GetBrowserIndex(This) (This)->lpVtbl->GetBrowserIndex(This)
#define IBrowserService_GetBrowserByIndex(This,dwID,ppunk) (This)->lpVtbl->GetBrowserByIndex(This,dwID,ppunk)
#define IBrowserService_GetHistoryObject(This,ppole,pstm,ppbc) (This)->lpVtbl->GetHistoryObject(This,ppole,pstm,ppbc)
#define IBrowserService_SetHistoryObject(This,pole,fIsLocalAnchor) (This)->lpVtbl->SetHistoryObject(This,pole,fIsLocalAnchor)
#define IBrowserService_CacheOLEServer(This,pole) (This)->lpVtbl->CacheOLEServer(This,pole)
#define IBrowserService_GetSetCodePage(This,pvarIn,pvarOut) (This)->lpVtbl->GetSetCodePage(This,pvarIn,pvarOut)
#define IBrowserService_OnHttpEquiv(This,psv,fDone,pvarargIn,pvarargOut) (This)->lpVtbl->OnHttpEquiv(This,psv,fDone,pvarargIn,pvarargOut)
#define IBrowserService_GetPalette(This,hpal) (This)->lpVtbl->GetPalette(This,hpal)
#define IBrowserService_RegisterWindow(This,fForceRegister,swc) (This)->lpVtbl->RegisterWindow(This,fForceRegister,swc)
#else
/*** IUnknown methods ***/
FORCEINLINE HRESULT IBrowserService_QueryInterface(IBrowserService* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
FORCEINLINE ULONG IBrowserService_AddRef(IBrowserService* This) {
    return This->lpVtbl->AddRef(This);
}
FORCEINLINE ULONG IBrowserService_Release(IBrowserService* This) {
    return This->lpVtbl->Release(This);
}
/*** IBrowserService methods ***/
FORCEINLINE HRESULT IBrowserService_GetParentSite(IBrowserService* This,IOleInPlaceSite **ppipsite) {
    return This->lpVtbl->GetParentSite(This,ppipsite);
}
FORCEINLINE HRESULT IBrowserService_SetTitle(IBrowserService* This,IShellView *psv,LPCWSTR pszName) {
    return This->lpVtbl->SetTitle(This,psv,pszName);
}
FORCEINLINE HRESULT IBrowserService_GetTitle(IBrowserService* This,IShellView *psv,LPWSTR pszName,DWORD cchName) {
    return This->lpVtbl->GetTitle(This,psv,pszName,cchName);
}
FORCEINLINE HRESULT IBrowserService_GetOleObject(IBrowserService* This,IOleObject **ppobjv) {
    return This->lpVtbl->GetOleObject(This,ppobjv);
}
FORCEINLINE HRESULT IBrowserService_GetTravelLog(IBrowserService* This,ITravelLog **pptl) {
    return This->lpVtbl->GetTravelLog(This,pptl);
}
FORCEINLINE HRESULT IBrowserService_ShowControlWindow(IBrowserService* This,UINT id,BOOL fShow) {
    return This->lpVtbl->ShowControlWindow(This,id,fShow);
}
FORCEINLINE HRESULT IBrowserService_IsControlWindowShown(IBrowserService* This,UINT id,BOOL *pfShown) {
    return This->lpVtbl->IsControlWindowShown(This,id,pfShown);
}
FORCEINLINE HRESULT IBrowserService_IEGetDisplayName(IBrowserService* This,PCIDLIST_ABSOLUTE pidl,LPWSTR pwszName,UINT uFlags) {
    return This->lpVtbl->IEGetDisplayName(This,pidl,pwszName,uFlags);
}
FORCEINLINE HRESULT IBrowserService_IEParseDisplayName(IBrowserService* This,UINT uiCP,LPCWSTR pwszPath,PIDLIST_ABSOLUTE *ppidlOut) {
    return This->lpVtbl->IEParseDisplayName(This,uiCP,pwszPath,ppidlOut);
}
FORCEINLINE HRESULT IBrowserService_DisplayParseError(IBrowserService* This,HRESULT hres,LPCWSTR pwszPath) {
    return This->lpVtbl->DisplayParseError(This,hres,pwszPath);
}
FORCEINLINE HRESULT IBrowserService_NavigateToPidl(IBrowserService* This,PCIDLIST_ABSOLUTE pidl,DWORD grfHLNF) {
    return This->lpVtbl->NavigateToPidl(This,pidl,grfHLNF);
}
FORCEINLINE HRESULT IBrowserService_SetNavigateState(IBrowserService* This,BNSTATE bnstate) {
    return This->lpVtbl->SetNavigateState(This,bnstate);
}
FORCEINLINE HRESULT IBrowserService_GetNavigateState(IBrowserService* This,BNSTATE *pbnstate) {
    return This->lpVtbl->GetNavigateState(This,pbnstate);
}
FORCEINLINE HRESULT IBrowserService_NotifyRedirect(IBrowserService* This,IShellView *psv,PCIDLIST_ABSOLUTE pidl,BOOL *pfDidBrowse) {
    return This->lpVtbl->NotifyRedirect(This,psv,pidl,pfDidBrowse);
}
FORCEINLINE HRESULT IBrowserService_UpdateWindowList(IBrowserService* This) {
    return This->lpVtbl->UpdateWindowList(This);
}
FORCEINLINE HRESULT IBrowserService_UpdateBackForwardState(IBrowserService* This) {
    return This->lpVtbl->UpdateBackForwardState(This);
}
FORCEINLINE HRESULT IBrowserService_SetFlags(IBrowserService* This,DWORD dwFlags,DWORD dwFlagMask) {
    return This->lpVtbl->SetFlags(This,dwFlags,dwFlagMask);
}
FORCEINLINE HRESULT IBrowserService_GetFlags(IBrowserService* This,DWORD *pdwFlags) {
    return This->lpVtbl->GetFlags(This,pdwFlags);
}
FORCEINLINE HRESULT IBrowserService_CanNavigateNow(IBrowserService* This) {
    return This->lpVtbl->CanNavigateNow(This);
}
FORCEINLINE HRESULT IBrowserService_GetPidl(IBrowserService* This,PIDLIST_ABSOLUTE *ppidl) {
    return This->lpVtbl->GetPidl(This,ppidl);
}
FORCEINLINE HRESULT IBrowserService_SetReferrer(IBrowserService* This,PCIDLIST_ABSOLUTE pidl) {
    return This->lpVtbl->SetReferrer(This,pidl);
}
FORCEINLINE DWORD IBrowserService_GetBrowserIndex(IBrowserService* This) {
    return This->lpVtbl->GetBrowserIndex(This);
}
FORCEINLINE HRESULT IBrowserService_GetBrowserByIndex(IBrowserService* This,DWORD dwID,IUnknown **ppunk) {
    return This->lpVtbl->GetBrowserByIndex(This,dwID,ppunk);
}
FORCEINLINE HRESULT IBrowserService_GetHistoryObject(IBrowserService* This,IOleObject **ppole,IStream **pstm,IBindCtx **ppbc) {
    return This->lpVtbl->GetHistoryObject(This,ppole,pstm,ppbc);
}
FORCEINLINE HRESULT IBrowserService_SetHistoryObject(IBrowserService* This,IOleObject *pole,BOOL fIsLocalAnchor) {
    return This->lpVtbl->SetHistoryObject(This,pole,fIsLocalAnchor);
}
FORCEINLINE HRESULT IBrowserService_CacheOLEServer(IBrowserService* This,IOleObject *pole) {
    return This->lpVtbl->CacheOLEServer(This,pole);
}
FORCEINLINE HRESULT IBrowserService_GetSetCodePage(IBrowserService* This,VARIANT *pvarIn,VARIANT *pvarOut) {
    return This->lpVtbl->GetSetCodePage(This,pvarIn,pvarOut);
}
FORCEINLINE HRESULT IBrowserService_OnHttpEquiv(IBrowserService* This,IShellView *psv,BOOL fDone,VARIANT *pvarargIn,VARIANT *pvarargOut) {
    return This->lpVtbl->OnHttpEquiv(This,psv,fDone,pvarargIn,pvarargOut);
}
FORCEINLINE HRESULT IBrowserService_GetPalette(IBrowserService* This,HPALETTE *hpal) {
    return This->lpVtbl->GetPalette(This,hpal);
}
FORCEINLINE HRESULT IBrowserService_RegisterWindow(IBrowserService* This,BOOL fForceRegister,int swc) {
    return This->lpVtbl->RegisterWindow(This,fForceRegister,swc);
}
#endif
#endif

#endif

HRESULT STDMETHODCALLTYPE IBrowserService_GetParentSite_Proxy(
    IBrowserService* This,
    IOleInPlaceSite **ppipsite);
void __RPC_STUB IBrowserService_GetParentSite_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_SetTitle_Proxy(
    IBrowserService* This,
    IShellView *psv,
    LPCWSTR pszName);
void __RPC_STUB IBrowserService_SetTitle_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_GetTitle_Proxy(
    IBrowserService* This,
    IShellView *psv,
    LPWSTR pszName,
    DWORD cchName);
void __RPC_STUB IBrowserService_GetTitle_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_GetOleObject_Proxy(
    IBrowserService* This,
    IOleObject **ppobjv);
void __RPC_STUB IBrowserService_GetOleObject_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_GetTravelLog_Proxy(
    IBrowserService* This,
    ITravelLog **pptl);
void __RPC_STUB IBrowserService_GetTravelLog_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_ShowControlWindow_Proxy(
    IBrowserService* This,
    UINT id,
    BOOL fShow);
void __RPC_STUB IBrowserService_ShowControlWindow_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_IsControlWindowShown_Proxy(
    IBrowserService* This,
    UINT id,
    BOOL *pfShown);
void __RPC_STUB IBrowserService_IsControlWindowShown_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_IEGetDisplayName_Proxy(
    IBrowserService* This,
    PCIDLIST_ABSOLUTE pidl,
    LPWSTR pwszName,
    UINT uFlags);
void __RPC_STUB IBrowserService_IEGetDisplayName_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_IEParseDisplayName_Proxy(
    IBrowserService* This,
    UINT uiCP,
    LPCWSTR pwszPath,
    PIDLIST_ABSOLUTE *ppidlOut);
void __RPC_STUB IBrowserService_IEParseDisplayName_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_DisplayParseError_Proxy(
    IBrowserService* This,
    HRESULT hres,
    LPCWSTR pwszPath);
void __RPC_STUB IBrowserService_DisplayParseError_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_NavigateToPidl_Proxy(
    IBrowserService* This,
    PCIDLIST_ABSOLUTE pidl,
    DWORD grfHLNF);
void __RPC_STUB IBrowserService_NavigateToPidl_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_SetNavigateState_Proxy(
    IBrowserService* This,
    BNSTATE bnstate);
void __RPC_STUB IBrowserService_SetNavigateState_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_GetNavigateState_Proxy(
    IBrowserService* This,
    BNSTATE *pbnstate);
void __RPC_STUB IBrowserService_GetNavigateState_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_NotifyRedirect_Proxy(
    IBrowserService* This,
    IShellView *psv,
    PCIDLIST_ABSOLUTE pidl,
    BOOL *pfDidBrowse);
void __RPC_STUB IBrowserService_NotifyRedirect_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_UpdateWindowList_Proxy(
    IBrowserService* This);
void __RPC_STUB IBrowserService_UpdateWindowList_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_UpdateBackForwardState_Proxy(
    IBrowserService* This);
void __RPC_STUB IBrowserService_UpdateBackForwardState_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_SetFlags_Proxy(
    IBrowserService* This,
    DWORD dwFlags,
    DWORD dwFlagMask);
void __RPC_STUB IBrowserService_SetFlags_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_GetFlags_Proxy(
    IBrowserService* This,
    DWORD *pdwFlags);
void __RPC_STUB IBrowserService_GetFlags_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_CanNavigateNow_Proxy(
    IBrowserService* This);
void __RPC_STUB IBrowserService_CanNavigateNow_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_GetPidl_Proxy(
    IBrowserService* This,
    PIDLIST_ABSOLUTE *ppidl);
void __RPC_STUB IBrowserService_GetPidl_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_SetReferrer_Proxy(
    IBrowserService* This,
    PCIDLIST_ABSOLUTE pidl);
void __RPC_STUB IBrowserService_SetReferrer_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
DWORD STDMETHODCALLTYPE IBrowserService_GetBrowserIndex_Proxy(
    IBrowserService* This);
void __RPC_STUB IBrowserService_GetBrowserIndex_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_GetBrowserByIndex_Proxy(
    IBrowserService* This,
    DWORD dwID,
    IUnknown **ppunk);
void __RPC_STUB IBrowserService_GetBrowserByIndex_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_GetHistoryObject_Proxy(
    IBrowserService* This,
    IOleObject **ppole,
    IStream **pstm,
    IBindCtx **ppbc);
void __RPC_STUB IBrowserService_GetHistoryObject_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_SetHistoryObject_Proxy(
    IBrowserService* This,
    IOleObject *pole,
    BOOL fIsLocalAnchor);
void __RPC_STUB IBrowserService_SetHistoryObject_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_CacheOLEServer_Proxy(
    IBrowserService* This,
    IOleObject *pole);
void __RPC_STUB IBrowserService_CacheOLEServer_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_GetSetCodePage_Proxy(
    IBrowserService* This,
    VARIANT *pvarIn,
    VARIANT *pvarOut);
void __RPC_STUB IBrowserService_GetSetCodePage_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_OnHttpEquiv_Proxy(
    IBrowserService* This,
    IShellView *psv,
    BOOL fDone,
    VARIANT *pvarargIn,
    VARIANT *pvarargOut);
void __RPC_STUB IBrowserService_OnHttpEquiv_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_GetPalette_Proxy(
    IBrowserService* This,
    HPALETTE *hpal);
void __RPC_STUB IBrowserService_GetPalette_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService_RegisterWindow_Proxy(
    IBrowserService* This,
    BOOL fForceRegister,
    int swc);
void __RPC_STUB IBrowserService_RegisterWindow_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);

#endif  /* __IBrowserService_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IShellService interface
 */
#ifndef __IShellService_INTERFACE_DEFINED__
#define __IShellService_INTERFACE_DEFINED__

DEFINE_GUID(IID_IShellService, 0x5836fb00, 0x8187, 0x11cf, 0xa1,0x2b, 0x00,0xaa,0x00,0x4a,0xe8,0x37);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("5836fb00-8187-11cf-a12b-00aa004ae837")
IShellService : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE SetOwner(
        IUnknown *pUnk) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IShellService, 0x5836fb00, 0x8187, 0x11cf, 0xa1,0x2b, 0x00,0xaa,0x00,0x4a,0xe8,0x37)
#endif
#else
typedef struct IShellServiceVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IShellService *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IShellService *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IShellService *This);

    /*** IShellService methods ***/
    HRESULT (STDMETHODCALLTYPE *SetOwner)(
        IShellService *This,
        IUnknown *pUnk);

    END_INTERFACE
} IShellServiceVtbl;

interface IShellService {
    CONST_VTBL IShellServiceVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IShellService_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IShellService_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IShellService_Release(This) (This)->lpVtbl->Release(This)
/*** IShellService methods ***/
#define IShellService_SetOwner(This,pUnk) (This)->lpVtbl->SetOwner(This,pUnk)
#else
/*** IUnknown methods ***/
FORCEINLINE HRESULT IShellService_QueryInterface(IShellService* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
FORCEINLINE ULONG IShellService_AddRef(IShellService* This) {
    return This->lpVtbl->AddRef(This);
}
FORCEINLINE ULONG IShellService_Release(IShellService* This) {
    return This->lpVtbl->Release(This);
}
/*** IShellService methods ***/
FORCEINLINE HRESULT IShellService_SetOwner(IShellService* This,IUnknown *pUnk) {
    return This->lpVtbl->SetOwner(This,pUnk);
}
#endif
#endif

#endif

HRESULT STDMETHODCALLTYPE IShellService_SetOwner_Proxy(
    IShellService* This,
    IUnknown *pUnk);
void __RPC_STUB IShellService_SetOwner_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);

#endif  /* __IShellService_INTERFACE_DEFINED__ */

#if 0
typedef HANDLE HMONITOR;
#endif
enum {
    SECURELOCK_NOCHANGE = -1,
    SECURELOCK_SET_UNSECURE = 0,
    SECURELOCK_SET_MIXED = 1,
    SECURELOCK_SET_SECUREUNKNOWNBIT = 2,
    SECURELOCK_SET_SECURE40BIT = 3,
    SECURELOCK_SET_SECURE56BIT = 4,
    SECURELOCK_SET_FORTEZZA = 5,
    SECURELOCK_SET_SECURE128BIT = 6,
    SECURELOCK_FIRSTSUGGEST = 7,
    SECURELOCK_SUGGEST_UNSECURE = SECURELOCK_FIRSTSUGGEST,
    SECURELOCK_SUGGEST_MIXED = 8,
    SECURELOCK_SUGGEST_SECUREUNKNOWNBIT = 9,
    SECURELOCK_SUGGEST_SECURE40BIT = 10,
    SECURELOCK_SUGGEST_SECURE56BIT = 11,
    SECURELOCK_SUGGEST_FORTEZZA = 12,
    SECURELOCK_SUGGEST_SECURE128BIT = 13
};
#include <pshpack8.h>
typedef struct basebrowserdataxp {
    HWND _hwnd;
    ITravelLog *_ptl;
    IHlinkFrame *_phlf;
    IWebBrowser2 *_pautoWB2;
    IExpDispSupport *_pautoEDS;
    IShellService *_pautoSS;
    int _eSecureLockIcon;
    DWORD _fCreatingViewWindow;
    UINT _uActivateState;
    LPCITEMIDLIST _pidlNewShellView;
    IOleCommandTarget *_pctView;
    LPITEMIDLIST _pidlCur;
    IShellView *_psv;
    IShellFolder *_psf;
    HWND _hwndView;
    LPWSTR _pszTitleCur;
    LPITEMIDLIST _pidlPending;
    IShellView *_psvPending;
    IShellFolder *_psfPending;
    HWND _hwndViewPending;
    LPWSTR _pszTitlePending;
    BOOL _fIsViewMSHTML;
    BOOL _fPrivacyImpacted;
    CLSID _clsidView;
    CLSID _clsidViewPending;
    HWND _hwndFrame;
} BASEBROWSERDATAXP;
typedef struct basebrowserdataxp *LPBASEBROWSERDATAXP;
typedef struct basebrowserdatalh {
    HWND _hwnd;
    ITravelLog *_ptl;
    IHlinkFrame *_phlf;
    IWebBrowser2 *_pautoWB2;
    IExpDispSupport *_pautoEDS;
    IShellService *_pautoSS;
    int _eSecureLockIcon;
    DWORD _fCreatingViewWindow;
    UINT _uActivateState;
    LPCITEMIDLIST _pidlNewShellView;
    IOleCommandTarget *_pctView;
    LPITEMIDLIST _pidlCur;
    IShellView *_psv;
    IShellFolder *_psf;
    HWND _hwndView;
    LPWSTR _pszTitleCur;
    LPITEMIDLIST _pidlPending;
    IShellView *_psvPending;
    IShellFolder *_psfPending;
    HWND _hwndViewPending;
    LPWSTR _pszTitlePending;
    BOOL _fIsViewMSHTML;
    BOOL _fPrivacyImpacted;
    CLSID _clsidView;
    CLSID _clsidViewPending;
    HWND _hwndFrame;
    LONG _lPhishingFilterStatus;
} BASEBROWSERDATALH;
typedef struct basebrowserdatalh *LPBASEBROWSERDATALH;
#include <poppack.h>
typedef BASEBROWSERDATAXP BASEBROWSERDATA;
typedef const BASEBROWSERDATA *LPCBASEBROWSERDATA;
typedef BASEBROWSERDATA *LPBASEBROWSERDATA;
#define VIEW_PRIORITY_RESTRICTED         0x00000070
#define VIEW_PRIORITY_CACHEHIT           0x00000050
#define VIEW_PRIORITY_STALECACHEHIT      0x00000045
#define VIEW_PRIORITY_USEASDEFAULT       0x00000043
#define VIEW_PRIORITY_SHELLEXT           0x00000040
#define VIEW_PRIORITY_CACHEMISS          0x00000030
#define VIEW_PRIORITY_INHERIT            0x00000020
#define VIEW_PRIORITY_SHELLEXT_ASBACKUP  0x0015
#define VIEW_PRIORITY_DESPERATE          0x00000010
#define VIEW_PRIORITY_NONE               0x00000000
typedef struct tagFolderSetData {
    FOLDERSETTINGS _fs;
    SHELLVIEWID _vidRestore;
    DWORD _dwViewPriority;
} FOLDERSETDATA;
typedef struct tagFolderSetData *LPFOLDERSETDATA;
typedef struct SToolbarItem {
    IDockingWindow *ptbar;
    BORDERWIDTHS rcBorderTool;
    LPWSTR pwszItem;
    BOOL fShow;
    HMONITOR hMon;
} TOOLBARITEM;
typedef struct SToolbarItem *LPTOOLBARITEM;
#define ITB_VIEW        ((UINT)-1)
/*****************************************************************************
 * IBrowserService2 interface
 */
#ifndef __IBrowserService2_INTERFACE_DEFINED__
#define __IBrowserService2_INTERFACE_DEFINED__

DEFINE_GUID(IID_IBrowserService2, 0x68bd21cc, 0x438b, 0x11d2, 0xa5,0x60, 0x00,0xa0,0xc9,0x2d,0xbf,0xe8);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("68bd21cc-438b-11d2-a560-00a0c92dbfe8")
IBrowserService2 : public IBrowserService
{
    virtual LRESULT STDMETHODCALLTYPE WndProcBS(
        HWND hwnd,
        UINT uMsg,
        WPARAM wParam,
        LPARAM lParam) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetAsDefFolderSettings(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetViewRect(
        RECT *prc) = 0;

    virtual HRESULT STDMETHODCALLTYPE OnSize(
        WPARAM wParam) = 0;

    virtual HRESULT STDMETHODCALLTYPE OnCreate(
        struct tagCREATESTRUCTW *pcs) = 0;

    virtual LRESULT STDMETHODCALLTYPE OnCommand(
        WPARAM wParam,
        LPARAM lParam) = 0;

    virtual HRESULT STDMETHODCALLTYPE OnDestroy(
        ) = 0;

    virtual LRESULT STDMETHODCALLTYPE OnNotify(
        struct tagNMHDR *pnm) = 0;

    virtual HRESULT STDMETHODCALLTYPE OnSetFocus(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE OnFrameWindowActivateBS(
        BOOL fActive) = 0;

    virtual HRESULT STDMETHODCALLTYPE ReleaseShellView(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE ActivatePendingView(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE CreateViewWindow(
        IShellView *psvNew,
        IShellView *psvOld,
        LPRECT prcView,
        HWND *phwnd) = 0;

    virtual HRESULT STDMETHODCALLTYPE CreateBrowserPropSheetExt(
        REFIID riid,
        void **ppv) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetViewWindow(
        HWND *phwndView) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetBaseBrowserData(
        LPCBASEBROWSERDATA *pbbd) = 0;

    virtual LPBASEBROWSERDATA STDMETHODCALLTYPE PutBaseBrowserData(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE InitializeTravelLog(
        ITravelLog *ptl,
        DWORD dw) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetTopBrowser(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE Offline(
        int iCmd) = 0;

    virtual HRESULT STDMETHODCALLTYPE AllowViewResize(
        BOOL f) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetActivateState(
        UINT u) = 0;

    virtual HRESULT STDMETHODCALLTYPE UpdateSecureLockIcon(
        int eSecureLock) = 0;

    virtual HRESULT STDMETHODCALLTYPE InitializeDownloadManager(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE InitializeTransitionSite(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE _Initialize(
        HWND hwnd,
        IUnknown *pauto) = 0;

    virtual HRESULT STDMETHODCALLTYPE _CancelPendingNavigationAsync(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE _CancelPendingView(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE _MaySaveChanges(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE _PauseOrResumeView(
        BOOL fPaused) = 0;

    virtual HRESULT STDMETHODCALLTYPE _DisableModeless(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE _NavigateToPidl(
        LPCITEMIDLIST pidl,
        DWORD grfHLNF,
        DWORD dwFlags) = 0;

    virtual HRESULT STDMETHODCALLTYPE _TryShell2Rename(
        IShellView *psv,
        LPCITEMIDLIST pidlNew) = 0;

    virtual HRESULT STDMETHODCALLTYPE _SwitchActivationNow(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE _ExecChildren(
        IUnknown *punkBar,
        BOOL fBroadcast,
        const GUID *pguidCmdGroup,
        DWORD nCmdID,
        DWORD nCmdexecopt,
        VARIANTARG *pvarargIn,
        VARIANTARG *pvarargOut) = 0;

    virtual HRESULT STDMETHODCALLTYPE _SendChildren(
        HWND hwndBar,
        BOOL fBroadcast,
        UINT uMsg,
        WPARAM wParam,
        LPARAM lParam) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetFolderSetData(
        struct tagFolderSetData *pfsd) = 0;

    virtual HRESULT STDMETHODCALLTYPE _OnFocusChange(
        UINT itb) = 0;

    virtual HRESULT STDMETHODCALLTYPE v_ShowHideChildWindows(
        BOOL fChildOnly) = 0;

    virtual UINT STDMETHODCALLTYPE _get_itbLastFocus(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE _put_itbLastFocus(
        UINT itbLastFocus) = 0;

    virtual HRESULT STDMETHODCALLTYPE _UIActivateView(
        UINT uState) = 0;

    virtual HRESULT STDMETHODCALLTYPE _GetViewBorderRect(
        RECT *prc) = 0;

    virtual HRESULT STDMETHODCALLTYPE _UpdateViewRectSize(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE _ResizeNextBorder(
        UINT itb) = 0;

    virtual HRESULT STDMETHODCALLTYPE _ResizeView(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE _GetEffectiveClientArea(
        LPRECT lprectBorder,
        HMONITOR hmon) = 0;

    virtual IStream * STDMETHODCALLTYPE v_GetViewStream(
        LPCITEMIDLIST pidl,
        DWORD grfMode,
        LPCWSTR pwszName) = 0;

    virtual LRESULT STDMETHODCALLTYPE ForwardViewMsg(
        UINT uMsg,
        WPARAM wParam,
        LPARAM lParam) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetAcceleratorMenu(
        HACCEL hacc) = 0;

    virtual int STDMETHODCALLTYPE _GetToolbarCount(
        ) = 0;

    virtual LPTOOLBARITEM STDMETHODCALLTYPE _GetToolbarItem(
        int itb) = 0;

    virtual HRESULT STDMETHODCALLTYPE _SaveToolbars(
        IStream *pstm) = 0;

    virtual HRESULT STDMETHODCALLTYPE _LoadToolbars(
        IStream *pstm) = 0;

    virtual HRESULT STDMETHODCALLTYPE _CloseAndReleaseToolbars(
        BOOL fClose) = 0;

    virtual HRESULT STDMETHODCALLTYPE v_MayGetNextToolbarFocus(
        LPMSG lpMsg,
        UINT itbNext,
        int citb,
        LPTOOLBARITEM *pptbi,
        HWND *phwnd) = 0;

    virtual HRESULT STDMETHODCALLTYPE _ResizeNextBorderHelper(
        UINT itb,
        BOOL bUseHmonitor) = 0;

    virtual UINT STDMETHODCALLTYPE _FindTBar(
        IUnknown *punkSrc) = 0;

    virtual HRESULT STDMETHODCALLTYPE _SetFocus(
        LPTOOLBARITEM ptbi,
        HWND hwnd,
        LPMSG lpMsg) = 0;

    virtual HRESULT STDMETHODCALLTYPE v_MayTranslateAccelerator(
        MSG *pmsg) = 0;

    virtual HRESULT STDMETHODCALLTYPE _GetBorderDWHelper(
        IUnknown *punkSrc,
        LPRECT lprectBorder,
        BOOL bUseHmonitor) = 0;

    virtual HRESULT STDMETHODCALLTYPE v_CheckZoneCrossing(
        LPCITEMIDLIST pidl) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IBrowserService2, 0x68bd21cc, 0x438b, 0x11d2, 0xa5,0x60, 0x00,0xa0,0xc9,0x2d,0xbf,0xe8)
#endif
#else
typedef struct IBrowserService2Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IBrowserService2 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IBrowserService2 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IBrowserService2 *This);

    /*** IBrowserService methods ***/
    HRESULT (STDMETHODCALLTYPE *GetParentSite)(
        IBrowserService2 *This,
        IOleInPlaceSite **ppipsite);

    HRESULT (STDMETHODCALLTYPE *SetTitle)(
        IBrowserService2 *This,
        IShellView *psv,
        LPCWSTR pszName);

    HRESULT (STDMETHODCALLTYPE *GetTitle)(
        IBrowserService2 *This,
        IShellView *psv,
        LPWSTR pszName,
        DWORD cchName);

    HRESULT (STDMETHODCALLTYPE *GetOleObject)(
        IBrowserService2 *This,
        IOleObject **ppobjv);

    HRESULT (STDMETHODCALLTYPE *GetTravelLog)(
        IBrowserService2 *This,
        ITravelLog **pptl);

    HRESULT (STDMETHODCALLTYPE *ShowControlWindow)(
        IBrowserService2 *This,
        UINT id,
        BOOL fShow);

    HRESULT (STDMETHODCALLTYPE *IsControlWindowShown)(
        IBrowserService2 *This,
        UINT id,
        BOOL *pfShown);

    HRESULT (STDMETHODCALLTYPE *IEGetDisplayName)(
        IBrowserService2 *This,
        PCIDLIST_ABSOLUTE pidl,
        LPWSTR pwszName,
        UINT uFlags);

    HRESULT (STDMETHODCALLTYPE *IEParseDisplayName)(
        IBrowserService2 *This,
        UINT uiCP,
        LPCWSTR pwszPath,
        PIDLIST_ABSOLUTE *ppidlOut);

    HRESULT (STDMETHODCALLTYPE *DisplayParseError)(
        IBrowserService2 *This,
        HRESULT hres,
        LPCWSTR pwszPath);

    HRESULT (STDMETHODCALLTYPE *NavigateToPidl)(
        IBrowserService2 *This,
        PCIDLIST_ABSOLUTE pidl,
        DWORD grfHLNF);

    HRESULT (STDMETHODCALLTYPE *SetNavigateState)(
        IBrowserService2 *This,
        BNSTATE bnstate);

    HRESULT (STDMETHODCALLTYPE *GetNavigateState)(
        IBrowserService2 *This,
        BNSTATE *pbnstate);

    HRESULT (STDMETHODCALLTYPE *NotifyRedirect)(
        IBrowserService2 *This,
        IShellView *psv,
        PCIDLIST_ABSOLUTE pidl,
        BOOL *pfDidBrowse);

    HRESULT (STDMETHODCALLTYPE *UpdateWindowList)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *UpdateBackForwardState)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *SetFlags)(
        IBrowserService2 *This,
        DWORD dwFlags,
        DWORD dwFlagMask);

    HRESULT (STDMETHODCALLTYPE *GetFlags)(
        IBrowserService2 *This,
        DWORD *pdwFlags);

    HRESULT (STDMETHODCALLTYPE *CanNavigateNow)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *GetPidl)(
        IBrowserService2 *This,
        PIDLIST_ABSOLUTE *ppidl);

    HRESULT (STDMETHODCALLTYPE *SetReferrer)(
        IBrowserService2 *This,
        PCIDLIST_ABSOLUTE pidl);

    DWORD (STDMETHODCALLTYPE *GetBrowserIndex)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *GetBrowserByIndex)(
        IBrowserService2 *This,
        DWORD dwID,
        IUnknown **ppunk);

    HRESULT (STDMETHODCALLTYPE *GetHistoryObject)(
        IBrowserService2 *This,
        IOleObject **ppole,
        IStream **pstm,
        IBindCtx **ppbc);

    HRESULT (STDMETHODCALLTYPE *SetHistoryObject)(
        IBrowserService2 *This,
        IOleObject *pole,
        BOOL fIsLocalAnchor);

    HRESULT (STDMETHODCALLTYPE *CacheOLEServer)(
        IBrowserService2 *This,
        IOleObject *pole);

    HRESULT (STDMETHODCALLTYPE *GetSetCodePage)(
        IBrowserService2 *This,
        VARIANT *pvarIn,
        VARIANT *pvarOut);

    HRESULT (STDMETHODCALLTYPE *OnHttpEquiv)(
        IBrowserService2 *This,
        IShellView *psv,
        BOOL fDone,
        VARIANT *pvarargIn,
        VARIANT *pvarargOut);

    HRESULT (STDMETHODCALLTYPE *GetPalette)(
        IBrowserService2 *This,
        HPALETTE *hpal);

    HRESULT (STDMETHODCALLTYPE *RegisterWindow)(
        IBrowserService2 *This,
        BOOL fForceRegister,
        int swc);

    /*** IBrowserService2 methods ***/
    LRESULT (STDMETHODCALLTYPE *WndProcBS)(
        IBrowserService2 *This,
        HWND hwnd,
        UINT uMsg,
        WPARAM wParam,
        LPARAM lParam);

    HRESULT (STDMETHODCALLTYPE *SetAsDefFolderSettings)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *GetViewRect)(
        IBrowserService2 *This,
        RECT *prc);

    HRESULT (STDMETHODCALLTYPE *OnSize)(
        IBrowserService2 *This,
        WPARAM wParam);

    HRESULT (STDMETHODCALLTYPE *OnCreate)(
        IBrowserService2 *This,
        struct tagCREATESTRUCTW *pcs);

    LRESULT (STDMETHODCALLTYPE *OnCommand)(
        IBrowserService2 *This,
        WPARAM wParam,
        LPARAM lParam);

    HRESULT (STDMETHODCALLTYPE *OnDestroy)(
        IBrowserService2 *This);

    LRESULT (STDMETHODCALLTYPE *OnNotify)(
        IBrowserService2 *This,
        struct tagNMHDR *pnm);

    HRESULT (STDMETHODCALLTYPE *OnSetFocus)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *OnFrameWindowActivateBS)(
        IBrowserService2 *This,
        BOOL fActive);

    HRESULT (STDMETHODCALLTYPE *ReleaseShellView)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *ActivatePendingView)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *CreateViewWindow)(
        IBrowserService2 *This,
        IShellView *psvNew,
        IShellView *psvOld,
        LPRECT prcView,
        HWND *phwnd);

    HRESULT (STDMETHODCALLTYPE *CreateBrowserPropSheetExt)(
        IBrowserService2 *This,
        REFIID riid,
        void **ppv);

    HRESULT (STDMETHODCALLTYPE *GetViewWindow)(
        IBrowserService2 *This,
        HWND *phwndView);

    HRESULT (STDMETHODCALLTYPE *GetBaseBrowserData)(
        IBrowserService2 *This,
        LPCBASEBROWSERDATA *pbbd);

    LPBASEBROWSERDATA (STDMETHODCALLTYPE *PutBaseBrowserData)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *InitializeTravelLog)(
        IBrowserService2 *This,
        ITravelLog *ptl,
        DWORD dw);

    HRESULT (STDMETHODCALLTYPE *SetTopBrowser)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *Offline)(
        IBrowserService2 *This,
        int iCmd);

    HRESULT (STDMETHODCALLTYPE *AllowViewResize)(
        IBrowserService2 *This,
        BOOL f);

    HRESULT (STDMETHODCALLTYPE *SetActivateState)(
        IBrowserService2 *This,
        UINT u);

    HRESULT (STDMETHODCALLTYPE *UpdateSecureLockIcon)(
        IBrowserService2 *This,
        int eSecureLock);

    HRESULT (STDMETHODCALLTYPE *InitializeDownloadManager)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *InitializeTransitionSite)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *_Initialize)(
        IBrowserService2 *This,
        HWND hwnd,
        IUnknown *pauto);

    HRESULT (STDMETHODCALLTYPE *_CancelPendingNavigationAsync)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *_CancelPendingView)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *_MaySaveChanges)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *_PauseOrResumeView)(
        IBrowserService2 *This,
        BOOL fPaused);

    HRESULT (STDMETHODCALLTYPE *_DisableModeless)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *_NavigateToPidl)(
        IBrowserService2 *This,
        LPCITEMIDLIST pidl,
        DWORD grfHLNF,
        DWORD dwFlags);

    HRESULT (STDMETHODCALLTYPE *_TryShell2Rename)(
        IBrowserService2 *This,
        IShellView *psv,
        LPCITEMIDLIST pidlNew);

    HRESULT (STDMETHODCALLTYPE *_SwitchActivationNow)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *_ExecChildren)(
        IBrowserService2 *This,
        IUnknown *punkBar,
        BOOL fBroadcast,
        const GUID *pguidCmdGroup,
        DWORD nCmdID,
        DWORD nCmdexecopt,
        VARIANTARG *pvarargIn,
        VARIANTARG *pvarargOut);

    HRESULT (STDMETHODCALLTYPE *_SendChildren)(
        IBrowserService2 *This,
        HWND hwndBar,
        BOOL fBroadcast,
        UINT uMsg,
        WPARAM wParam,
        LPARAM lParam);

    HRESULT (STDMETHODCALLTYPE *GetFolderSetData)(
        IBrowserService2 *This,
        struct tagFolderSetData *pfsd);

    HRESULT (STDMETHODCALLTYPE *_OnFocusChange)(
        IBrowserService2 *This,
        UINT itb);

    HRESULT (STDMETHODCALLTYPE *v_ShowHideChildWindows)(
        IBrowserService2 *This,
        BOOL fChildOnly);

    UINT (STDMETHODCALLTYPE *_get_itbLastFocus)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *_put_itbLastFocus)(
        IBrowserService2 *This,
        UINT itbLastFocus);

    HRESULT (STDMETHODCALLTYPE *_UIActivateView)(
        IBrowserService2 *This,
        UINT uState);

    HRESULT (STDMETHODCALLTYPE *_GetViewBorderRect)(
        IBrowserService2 *This,
        RECT *prc);

    HRESULT (STDMETHODCALLTYPE *_UpdateViewRectSize)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *_ResizeNextBorder)(
        IBrowserService2 *This,
        UINT itb);

    HRESULT (STDMETHODCALLTYPE *_ResizeView)(
        IBrowserService2 *This);

    HRESULT (STDMETHODCALLTYPE *_GetEffectiveClientArea)(
        IBrowserService2 *This,
        LPRECT lprectBorder,
        HMONITOR hmon);

    IStream * (STDMETHODCALLTYPE *v_GetViewStream)(
        IBrowserService2 *This,
        LPCITEMIDLIST pidl,
        DWORD grfMode,
        LPCWSTR pwszName);

    LRESULT (STDMETHODCALLTYPE *ForwardViewMsg)(
        IBrowserService2 *This,
        UINT uMsg,
        WPARAM wParam,
        LPARAM lParam);

    HRESULT (STDMETHODCALLTYPE *SetAcceleratorMenu)(
        IBrowserService2 *This,
        HACCEL hacc);

    int (STDMETHODCALLTYPE *_GetToolbarCount)(
        IBrowserService2 *This);

    LPTOOLBARITEM (STDMETHODCALLTYPE *_GetToolbarItem)(
        IBrowserService2 *This,
        int itb);

    HRESULT (STDMETHODCALLTYPE *_SaveToolbars)(
        IBrowserService2 *This,
        IStream *pstm);

    HRESULT (STDMETHODCALLTYPE *_LoadToolbars)(
        IBrowserService2 *This,
        IStream *pstm);

    HRESULT (STDMETHODCALLTYPE *_CloseAndReleaseToolbars)(
        IBrowserService2 *This,
        BOOL fClose);

    HRESULT (STDMETHODCALLTYPE *v_MayGetNextToolbarFocus)(
        IBrowserService2 *This,
        LPMSG lpMsg,
        UINT itbNext,
        int citb,
        LPTOOLBARITEM *pptbi,
        HWND *phwnd);

    HRESULT (STDMETHODCALLTYPE *_ResizeNextBorderHelper)(
        IBrowserService2 *This,
        UINT itb,
        BOOL bUseHmonitor);

    UINT (STDMETHODCALLTYPE *_FindTBar)(
        IBrowserService2 *This,
        IUnknown *punkSrc);

    HRESULT (STDMETHODCALLTYPE *_SetFocus)(
        IBrowserService2 *This,
        LPTOOLBARITEM ptbi,
        HWND hwnd,
        LPMSG lpMsg);

    HRESULT (STDMETHODCALLTYPE *v_MayTranslateAccelerator)(
        IBrowserService2 *This,
        MSG *pmsg);

    HRESULT (STDMETHODCALLTYPE *_GetBorderDWHelper)(
        IBrowserService2 *This,
        IUnknown *punkSrc,
        LPRECT lprectBorder,
        BOOL bUseHmonitor);

    HRESULT (STDMETHODCALLTYPE *v_CheckZoneCrossing)(
        IBrowserService2 *This,
        LPCITEMIDLIST pidl);

    END_INTERFACE
} IBrowserService2Vtbl;

interface IBrowserService2 {
    CONST_VTBL IBrowserService2Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IBrowserService2_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IBrowserService2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IBrowserService2_Release(This) (This)->lpVtbl->Release(This)
/*** IBrowserService methods ***/
#define IBrowserService2_GetParentSite(This,ppipsite) (This)->lpVtbl->GetParentSite(This,ppipsite)
#define IBrowserService2_SetTitle(This,psv,pszName) (This)->lpVtbl->SetTitle(This,psv,pszName)
#define IBrowserService2_GetTitle(This,psv,pszName,cchName) (This)->lpVtbl->GetTitle(This,psv,pszName,cchName)
#define IBrowserService2_GetOleObject(This,ppobjv) (This)->lpVtbl->GetOleObject(This,ppobjv)
#define IBrowserService2_GetTravelLog(This,pptl) (This)->lpVtbl->GetTravelLog(This,pptl)
#define IBrowserService2_ShowControlWindow(This,id,fShow) (This)->lpVtbl->ShowControlWindow(This,id,fShow)
#define IBrowserService2_IsControlWindowShown(This,id,pfShown) (This)->lpVtbl->IsControlWindowShown(This,id,pfShown)
#define IBrowserService2_IEGetDisplayName(This,pidl,pwszName,uFlags) (This)->lpVtbl->IEGetDisplayName(This,pidl,pwszName,uFlags)
#define IBrowserService2_IEParseDisplayName(This,uiCP,pwszPath,ppidlOut) (This)->lpVtbl->IEParseDisplayName(This,uiCP,pwszPath,ppidlOut)
#define IBrowserService2_DisplayParseError(This,hres,pwszPath) (This)->lpVtbl->DisplayParseError(This,hres,pwszPath)
#define IBrowserService2_NavigateToPidl(This,pidl,grfHLNF) (This)->lpVtbl->NavigateToPidl(This,pidl,grfHLNF)
#define IBrowserService2_SetNavigateState(This,bnstate) (This)->lpVtbl->SetNavigateState(This,bnstate)
#define IBrowserService2_GetNavigateState(This,pbnstate) (This)->lpVtbl->GetNavigateState(This,pbnstate)
#define IBrowserService2_NotifyRedirect(This,psv,pidl,pfDidBrowse) (This)->lpVtbl->NotifyRedirect(This,psv,pidl,pfDidBrowse)
#define IBrowserService2_UpdateWindowList(This) (This)->lpVtbl->UpdateWindowList(This)
#define IBrowserService2_UpdateBackForwardState(This) (This)->lpVtbl->UpdateBackForwardState(This)
#define IBrowserService2_SetFlags(This,dwFlags,dwFlagMask) (This)->lpVtbl->SetFlags(This,dwFlags,dwFlagMask)
#define IBrowserService2_GetFlags(This,pdwFlags) (This)->lpVtbl->GetFlags(This,pdwFlags)
#define IBrowserService2_CanNavigateNow(This) (This)->lpVtbl->CanNavigateNow(This)
#define IBrowserService2_GetPidl(This,ppidl) (This)->lpVtbl->GetPidl(This,ppidl)
#define IBrowserService2_SetReferrer(This,pidl) (This)->lpVtbl->SetReferrer(This,pidl)
#define IBrowserService2_GetBrowserIndex(This) (This)->lpVtbl->GetBrowserIndex(This)
#define IBrowserService2_GetBrowserByIndex(This,dwID,ppunk) (This)->lpVtbl->GetBrowserByIndex(This,dwID,ppunk)
#define IBrowserService2_GetHistoryObject(This,ppole,pstm,ppbc) (This)->lpVtbl->GetHistoryObject(This,ppole,pstm,ppbc)
#define IBrowserService2_SetHistoryObject(This,pole,fIsLocalAnchor) (This)->lpVtbl->SetHistoryObject(This,pole,fIsLocalAnchor)
#define IBrowserService2_CacheOLEServer(This,pole) (This)->lpVtbl->CacheOLEServer(This,pole)
#define IBrowserService2_GetSetCodePage(This,pvarIn,pvarOut) (This)->lpVtbl->GetSetCodePage(This,pvarIn,pvarOut)
#define IBrowserService2_OnHttpEquiv(This,psv,fDone,pvarargIn,pvarargOut) (This)->lpVtbl->OnHttpEquiv(This,psv,fDone,pvarargIn,pvarargOut)
#define IBrowserService2_GetPalette(This,hpal) (This)->lpVtbl->GetPalette(This,hpal)
#define IBrowserService2_RegisterWindow(This,fForceRegister,swc) (This)->lpVtbl->RegisterWindow(This,fForceRegister,swc)
/*** IBrowserService2 methods ***/
#define IBrowserService2_WndProcBS(This,hwnd,uMsg,wParam,lParam) (This)->lpVtbl->WndProcBS(This,hwnd,uMsg,wParam,lParam)
#define IBrowserService2_SetAsDefFolderSettings(This) (This)->lpVtbl->SetAsDefFolderSettings(This)
#define IBrowserService2_GetViewRect(This,prc) (This)->lpVtbl->GetViewRect(This,prc)
#define IBrowserService2_OnSize(This,wParam) (This)->lpVtbl->OnSize(This,wParam)
#define IBrowserService2_OnCreate(This,pcs) (This)->lpVtbl->OnCreate(This,pcs)
#define IBrowserService2_OnCommand(This,wParam,lParam) (This)->lpVtbl->OnCommand(This,wParam,lParam)
#define IBrowserService2_OnDestroy(This) (This)->lpVtbl->OnDestroy(This)
#define IBrowserService2_OnNotify(This,pnm) (This)->lpVtbl->OnNotify(This,pnm)
#define IBrowserService2_OnSetFocus(This) (This)->lpVtbl->OnSetFocus(This)
#define IBrowserService2_OnFrameWindowActivateBS(This,fActive) (This)->lpVtbl->OnFrameWindowActivateBS(This,fActive)
#define IBrowserService2_ReleaseShellView(This) (This)->lpVtbl->ReleaseShellView(This)
#define IBrowserService2_ActivatePendingView(This) (This)->lpVtbl->ActivatePendingView(This)
#define IBrowserService2_CreateViewWindow(This,psvNew,psvOld,prcView,phwnd) (This)->lpVtbl->CreateViewWindow(This,psvNew,psvOld,prcView,phwnd)
#define IBrowserService2_CreateBrowserPropSheetExt(This,riid,ppv) (This)->lpVtbl->CreateBrowserPropSheetExt(This,riid,ppv)
#define IBrowserService2_GetViewWindow(This,phwndView) (This)->lpVtbl->GetViewWindow(This,phwndView)
#define IBrowserService2_GetBaseBrowserData(This,pbbd) (This)->lpVtbl->GetBaseBrowserData(This,pbbd)
#define IBrowserService2_PutBaseBrowserData(This) (This)->lpVtbl->PutBaseBrowserData(This)
#define IBrowserService2_InitializeTravelLog(This,ptl,dw) (This)->lpVtbl->InitializeTravelLog(This,ptl,dw)
#define IBrowserService2_SetTopBrowser(This) (This)->lpVtbl->SetTopBrowser(This)
#define IBrowserService2_Offline(This,iCmd) (This)->lpVtbl->Offline(This,iCmd)
#define IBrowserService2_AllowViewResize(This,f) (This)->lpVtbl->AllowViewResize(This,f)
#define IBrowserService2_SetActivateState(This,u) (This)->lpVtbl->SetActivateState(This,u)
#define IBrowserService2_UpdateSecureLockIcon(This,eSecureLock) (This)->lpVtbl->UpdateSecureLockIcon(This,eSecureLock)
#define IBrowserService2_InitializeDownloadManager(This) (This)->lpVtbl->InitializeDownloadManager(This)
#define IBrowserService2_InitializeTransitionSite(This) (This)->lpVtbl->InitializeTransitionSite(This)
#define IBrowserService2__Initialize(This,hwnd,pauto) (This)->lpVtbl->_Initialize(This,hwnd,pauto)
#define IBrowserService2__CancelPendingNavigationAsync(This) (This)->lpVtbl->_CancelPendingNavigationAsync(This)
#define IBrowserService2__CancelPendingView(This) (This)->lpVtbl->_CancelPendingView(This)
#define IBrowserService2__MaySaveChanges(This) (This)->lpVtbl->_MaySaveChanges(This)
#define IBrowserService2__PauseOrResumeView(This,fPaused) (This)->lpVtbl->_PauseOrResumeView(This,fPaused)
#define IBrowserService2__DisableModeless(This) (This)->lpVtbl->_DisableModeless(This)
#define IBrowserService2__NavigateToPidl(This,pidl,grfHLNF,dwFlags) (This)->lpVtbl->_NavigateToPidl(This,pidl,grfHLNF,dwFlags)
#define IBrowserService2__TryShell2Rename(This,psv,pidlNew) (This)->lpVtbl->_TryShell2Rename(This,psv,pidlNew)
#define IBrowserService2__SwitchActivationNow(This) (This)->lpVtbl->_SwitchActivationNow(This)
#define IBrowserService2__ExecChildren(This,punkBar,fBroadcast,pguidCmdGroup,nCmdID,nCmdexecopt,pvarargIn,pvarargOut) (This)->lpVtbl->_ExecChildren(This,punkBar,fBroadcast,pguidCmdGroup,nCmdID,nCmdexecopt,pvarargIn,pvarargOut)
#define IBrowserService2__SendChildren(This,hwndBar,fBroadcast,uMsg,wParam,lParam) (This)->lpVtbl->_SendChildren(This,hwndBar,fBroadcast,uMsg,wParam,lParam)
#define IBrowserService2_GetFolderSetData(This,pfsd) (This)->lpVtbl->GetFolderSetData(This,pfsd)
#define IBrowserService2__OnFocusChange(This,itb) (This)->lpVtbl->_OnFocusChange(This,itb)
#define IBrowserService2_v_ShowHideChildWindows(This,fChildOnly) (This)->lpVtbl->v_ShowHideChildWindows(This,fChildOnly)
#define IBrowserService2__get_itbLastFocus(This) (This)->lpVtbl->_get_itbLastFocus(This)
#define IBrowserService2__put_itbLastFocus(This,itbLastFocus) (This)->lpVtbl->_put_itbLastFocus(This,itbLastFocus)
#define IBrowserService2__UIActivateView(This,uState) (This)->lpVtbl->_UIActivateView(This,uState)
#define IBrowserService2__GetViewBorderRect(This,prc) (This)->lpVtbl->_GetViewBorderRect(This,prc)
#define IBrowserService2__UpdateViewRectSize(This) (This)->lpVtbl->_UpdateViewRectSize(This)
#define IBrowserService2__ResizeNextBorder(This,itb) (This)->lpVtbl->_ResizeNextBorder(This,itb)
#define IBrowserService2__ResizeView(This) (This)->lpVtbl->_ResizeView(This)
#define IBrowserService2__GetEffectiveClientArea(This,lprectBorder,hmon) (This)->lpVtbl->_GetEffectiveClientArea(This,lprectBorder,hmon)
#define IBrowserService2_v_GetViewStream(This,pidl,grfMode,pwszName) (This)->lpVtbl->v_GetViewStream(This,pidl,grfMode,pwszName)
#define IBrowserService2_ForwardViewMsg(This,uMsg,wParam,lParam) (This)->lpVtbl->ForwardViewMsg(This,uMsg,wParam,lParam)
#define IBrowserService2_SetAcceleratorMenu(This,hacc) (This)->lpVtbl->SetAcceleratorMenu(This,hacc)
#define IBrowserService2__GetToolbarCount(This) (This)->lpVtbl->_GetToolbarCount(This)
#define IBrowserService2__GetToolbarItem(This,itb) (This)->lpVtbl->_GetToolbarItem(This,itb)
#define IBrowserService2__SaveToolbars(This,pstm) (This)->lpVtbl->_SaveToolbars(This,pstm)
#define IBrowserService2__LoadToolbars(This,pstm) (This)->lpVtbl->_LoadToolbars(This,pstm)
#define IBrowserService2__CloseAndReleaseToolbars(This,fClose) (This)->lpVtbl->_CloseAndReleaseToolbars(This,fClose)
#define IBrowserService2_v_MayGetNextToolbarFocus(This,lpMsg,itbNext,citb,pptbi,phwnd) (This)->lpVtbl->v_MayGetNextToolbarFocus(This,lpMsg,itbNext,citb,pptbi,phwnd)
#define IBrowserService2__ResizeNextBorderHelper(This,itb,bUseHmonitor) (This)->lpVtbl->_ResizeNextBorderHelper(This,itb,bUseHmonitor)
#define IBrowserService2__FindTBar(This,punkSrc) (This)->lpVtbl->_FindTBar(This,punkSrc)
#define IBrowserService2__SetFocus(This,ptbi,hwnd,lpMsg) (This)->lpVtbl->_SetFocus(This,ptbi,hwnd,lpMsg)
#define IBrowserService2_v_MayTranslateAccelerator(This,pmsg) (This)->lpVtbl->v_MayTranslateAccelerator(This,pmsg)
#define IBrowserService2__GetBorderDWHelper(This,punkSrc,lprectBorder,bUseHmonitor) (This)->lpVtbl->_GetBorderDWHelper(This,punkSrc,lprectBorder,bUseHmonitor)
#define IBrowserService2_v_CheckZoneCrossing(This,pidl) (This)->lpVtbl->v_CheckZoneCrossing(This,pidl)
#else
/*** IUnknown methods ***/
FORCEINLINE HRESULT IBrowserService2_QueryInterface(IBrowserService2* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
FORCEINLINE ULONG IBrowserService2_AddRef(IBrowserService2* This) {
    return This->lpVtbl->AddRef(This);
}
FORCEINLINE ULONG IBrowserService2_Release(IBrowserService2* This) {
    return This->lpVtbl->Release(This);
}
/*** IBrowserService methods ***/
FORCEINLINE HRESULT IBrowserService2_GetParentSite(IBrowserService2* This,IOleInPlaceSite **ppipsite) {
    return This->lpVtbl->GetParentSite(This,ppipsite);
}
FORCEINLINE HRESULT IBrowserService2_SetTitle(IBrowserService2* This,IShellView *psv,LPCWSTR pszName) {
    return This->lpVtbl->SetTitle(This,psv,pszName);
}
FORCEINLINE HRESULT IBrowserService2_GetTitle(IBrowserService2* This,IShellView *psv,LPWSTR pszName,DWORD cchName) {
    return This->lpVtbl->GetTitle(This,psv,pszName,cchName);
}
FORCEINLINE HRESULT IBrowserService2_GetOleObject(IBrowserService2* This,IOleObject **ppobjv) {
    return This->lpVtbl->GetOleObject(This,ppobjv);
}
FORCEINLINE HRESULT IBrowserService2_GetTravelLog(IBrowserService2* This,ITravelLog **pptl) {
    return This->lpVtbl->GetTravelLog(This,pptl);
}
FORCEINLINE HRESULT IBrowserService2_ShowControlWindow(IBrowserService2* This,UINT id,BOOL fShow) {
    return This->lpVtbl->ShowControlWindow(This,id,fShow);
}
FORCEINLINE HRESULT IBrowserService2_IsControlWindowShown(IBrowserService2* This,UINT id,BOOL *pfShown) {
    return This->lpVtbl->IsControlWindowShown(This,id,pfShown);
}
FORCEINLINE HRESULT IBrowserService2_IEGetDisplayName(IBrowserService2* This,PCIDLIST_ABSOLUTE pidl,LPWSTR pwszName,UINT uFlags) {
    return This->lpVtbl->IEGetDisplayName(This,pidl,pwszName,uFlags);
}
FORCEINLINE HRESULT IBrowserService2_IEParseDisplayName(IBrowserService2* This,UINT uiCP,LPCWSTR pwszPath,PIDLIST_ABSOLUTE *ppidlOut) {
    return This->lpVtbl->IEParseDisplayName(This,uiCP,pwszPath,ppidlOut);
}
FORCEINLINE HRESULT IBrowserService2_DisplayParseError(IBrowserService2* This,HRESULT hres,LPCWSTR pwszPath) {
    return This->lpVtbl->DisplayParseError(This,hres,pwszPath);
}
FORCEINLINE HRESULT IBrowserService2_NavigateToPidl(IBrowserService2* This,PCIDLIST_ABSOLUTE pidl,DWORD grfHLNF) {
    return This->lpVtbl->NavigateToPidl(This,pidl,grfHLNF);
}
FORCEINLINE HRESULT IBrowserService2_SetNavigateState(IBrowserService2* This,BNSTATE bnstate) {
    return This->lpVtbl->SetNavigateState(This,bnstate);
}
FORCEINLINE HRESULT IBrowserService2_GetNavigateState(IBrowserService2* This,BNSTATE *pbnstate) {
    return This->lpVtbl->GetNavigateState(This,pbnstate);
}
FORCEINLINE HRESULT IBrowserService2_NotifyRedirect(IBrowserService2* This,IShellView *psv,PCIDLIST_ABSOLUTE pidl,BOOL *pfDidBrowse) {
    return This->lpVtbl->NotifyRedirect(This,psv,pidl,pfDidBrowse);
}
FORCEINLINE HRESULT IBrowserService2_UpdateWindowList(IBrowserService2* This) {
    return This->lpVtbl->UpdateWindowList(This);
}
FORCEINLINE HRESULT IBrowserService2_UpdateBackForwardState(IBrowserService2* This) {
    return This->lpVtbl->UpdateBackForwardState(This);
}
FORCEINLINE HRESULT IBrowserService2_SetFlags(IBrowserService2* This,DWORD dwFlags,DWORD dwFlagMask) {
    return This->lpVtbl->SetFlags(This,dwFlags,dwFlagMask);
}
FORCEINLINE HRESULT IBrowserService2_GetFlags(IBrowserService2* This,DWORD *pdwFlags) {
    return This->lpVtbl->GetFlags(This,pdwFlags);
}
FORCEINLINE HRESULT IBrowserService2_CanNavigateNow(IBrowserService2* This) {
    return This->lpVtbl->CanNavigateNow(This);
}
FORCEINLINE HRESULT IBrowserService2_GetPidl(IBrowserService2* This,PIDLIST_ABSOLUTE *ppidl) {
    return This->lpVtbl->GetPidl(This,ppidl);
}
FORCEINLINE HRESULT IBrowserService2_SetReferrer(IBrowserService2* This,PCIDLIST_ABSOLUTE pidl) {
    return This->lpVtbl->SetReferrer(This,pidl);
}
FORCEINLINE DWORD IBrowserService2_GetBrowserIndex(IBrowserService2* This) {
    return This->lpVtbl->GetBrowserIndex(This);
}
FORCEINLINE HRESULT IBrowserService2_GetBrowserByIndex(IBrowserService2* This,DWORD dwID,IUnknown **ppunk) {
    return This->lpVtbl->GetBrowserByIndex(This,dwID,ppunk);
}
FORCEINLINE HRESULT IBrowserService2_GetHistoryObject(IBrowserService2* This,IOleObject **ppole,IStream **pstm,IBindCtx **ppbc) {
    return This->lpVtbl->GetHistoryObject(This,ppole,pstm,ppbc);
}
FORCEINLINE HRESULT IBrowserService2_SetHistoryObject(IBrowserService2* This,IOleObject *pole,BOOL fIsLocalAnchor) {
    return This->lpVtbl->SetHistoryObject(This,pole,fIsLocalAnchor);
}
FORCEINLINE HRESULT IBrowserService2_CacheOLEServer(IBrowserService2* This,IOleObject *pole) {
    return This->lpVtbl->CacheOLEServer(This,pole);
}
FORCEINLINE HRESULT IBrowserService2_GetSetCodePage(IBrowserService2* This,VARIANT *pvarIn,VARIANT *pvarOut) {
    return This->lpVtbl->GetSetCodePage(This,pvarIn,pvarOut);
}
FORCEINLINE HRESULT IBrowserService2_OnHttpEquiv(IBrowserService2* This,IShellView *psv,BOOL fDone,VARIANT *pvarargIn,VARIANT *pvarargOut) {
    return This->lpVtbl->OnHttpEquiv(This,psv,fDone,pvarargIn,pvarargOut);
}
FORCEINLINE HRESULT IBrowserService2_GetPalette(IBrowserService2* This,HPALETTE *hpal) {
    return This->lpVtbl->GetPalette(This,hpal);
}
FORCEINLINE HRESULT IBrowserService2_RegisterWindow(IBrowserService2* This,BOOL fForceRegister,int swc) {
    return This->lpVtbl->RegisterWindow(This,fForceRegister,swc);
}
/*** IBrowserService2 methods ***/
FORCEINLINE LRESULT IBrowserService2_WndProcBS(IBrowserService2* This,HWND hwnd,UINT uMsg,WPARAM wParam,LPARAM lParam) {
    return This->lpVtbl->WndProcBS(This,hwnd,uMsg,wParam,lParam);
}
FORCEINLINE HRESULT IBrowserService2_SetAsDefFolderSettings(IBrowserService2* This) {
    return This->lpVtbl->SetAsDefFolderSettings(This);
}
FORCEINLINE HRESULT IBrowserService2_GetViewRect(IBrowserService2* This,RECT *prc) {
    return This->lpVtbl->GetViewRect(This,prc);
}
FORCEINLINE HRESULT IBrowserService2_OnSize(IBrowserService2* This,WPARAM wParam) {
    return This->lpVtbl->OnSize(This,wParam);
}
FORCEINLINE HRESULT IBrowserService2_OnCreate(IBrowserService2* This,struct tagCREATESTRUCTW *pcs) {
    return This->lpVtbl->OnCreate(This,pcs);
}
FORCEINLINE LRESULT IBrowserService2_OnCommand(IBrowserService2* This,WPARAM wParam,LPARAM lParam) {
    return This->lpVtbl->OnCommand(This,wParam,lParam);
}
FORCEINLINE HRESULT IBrowserService2_OnDestroy(IBrowserService2* This) {
    return This->lpVtbl->OnDestroy(This);
}
FORCEINLINE LRESULT IBrowserService2_OnNotify(IBrowserService2* This,struct tagNMHDR *pnm) {
    return This->lpVtbl->OnNotify(This,pnm);
}
FORCEINLINE HRESULT IBrowserService2_OnSetFocus(IBrowserService2* This) {
    return This->lpVtbl->OnSetFocus(This);
}
FORCEINLINE HRESULT IBrowserService2_OnFrameWindowActivateBS(IBrowserService2* This,BOOL fActive) {
    return This->lpVtbl->OnFrameWindowActivateBS(This,fActive);
}
FORCEINLINE HRESULT IBrowserService2_ReleaseShellView(IBrowserService2* This) {
    return This->lpVtbl->ReleaseShellView(This);
}
FORCEINLINE HRESULT IBrowserService2_ActivatePendingView(IBrowserService2* This) {
    return This->lpVtbl->ActivatePendingView(This);
}
FORCEINLINE HRESULT IBrowserService2_CreateViewWindow(IBrowserService2* This,IShellView *psvNew,IShellView *psvOld,LPRECT prcView,HWND *phwnd) {
    return This->lpVtbl->CreateViewWindow(This,psvNew,psvOld,prcView,phwnd);
}
FORCEINLINE HRESULT IBrowserService2_CreateBrowserPropSheetExt(IBrowserService2* This,REFIID riid,void **ppv) {
    return This->lpVtbl->CreateBrowserPropSheetExt(This,riid,ppv);
}
FORCEINLINE HRESULT IBrowserService2_GetViewWindow(IBrowserService2* This,HWND *phwndView) {
    return This->lpVtbl->GetViewWindow(This,phwndView);
}
FORCEINLINE HRESULT IBrowserService2_GetBaseBrowserData(IBrowserService2* This,LPCBASEBROWSERDATA *pbbd) {
    return This->lpVtbl->GetBaseBrowserData(This,pbbd);
}
FORCEINLINE LPBASEBROWSERDATA IBrowserService2_PutBaseBrowserData(IBrowserService2* This) {
    return This->lpVtbl->PutBaseBrowserData(This);
}
FORCEINLINE HRESULT IBrowserService2_InitializeTravelLog(IBrowserService2* This,ITravelLog *ptl,DWORD dw) {
    return This->lpVtbl->InitializeTravelLog(This,ptl,dw);
}
FORCEINLINE HRESULT IBrowserService2_SetTopBrowser(IBrowserService2* This) {
    return This->lpVtbl->SetTopBrowser(This);
}
FORCEINLINE HRESULT IBrowserService2_Offline(IBrowserService2* This,int iCmd) {
    return This->lpVtbl->Offline(This,iCmd);
}
FORCEINLINE HRESULT IBrowserService2_AllowViewResize(IBrowserService2* This,BOOL f) {
    return This->lpVtbl->AllowViewResize(This,f);
}
FORCEINLINE HRESULT IBrowserService2_SetActivateState(IBrowserService2* This,UINT u) {
    return This->lpVtbl->SetActivateState(This,u);
}
FORCEINLINE HRESULT IBrowserService2_UpdateSecureLockIcon(IBrowserService2* This,int eSecureLock) {
    return This->lpVtbl->UpdateSecureLockIcon(This,eSecureLock);
}
FORCEINLINE HRESULT IBrowserService2_InitializeDownloadManager(IBrowserService2* This) {
    return This->lpVtbl->InitializeDownloadManager(This);
}
FORCEINLINE HRESULT IBrowserService2_InitializeTransitionSite(IBrowserService2* This) {
    return This->lpVtbl->InitializeTransitionSite(This);
}
FORCEINLINE HRESULT IBrowserService2__Initialize(IBrowserService2* This,HWND hwnd,IUnknown *pauto) {
    return This->lpVtbl->_Initialize(This,hwnd,pauto);
}
FORCEINLINE HRESULT IBrowserService2__CancelPendingNavigationAsync(IBrowserService2* This) {
    return This->lpVtbl->_CancelPendingNavigationAsync(This);
}
FORCEINLINE HRESULT IBrowserService2__CancelPendingView(IBrowserService2* This) {
    return This->lpVtbl->_CancelPendingView(This);
}
FORCEINLINE HRESULT IBrowserService2__MaySaveChanges(IBrowserService2* This) {
    return This->lpVtbl->_MaySaveChanges(This);
}
FORCEINLINE HRESULT IBrowserService2__PauseOrResumeView(IBrowserService2* This,BOOL fPaused) {
    return This->lpVtbl->_PauseOrResumeView(This,fPaused);
}
FORCEINLINE HRESULT IBrowserService2__DisableModeless(IBrowserService2* This) {
    return This->lpVtbl->_DisableModeless(This);
}
FORCEINLINE HRESULT IBrowserService2__NavigateToPidl(IBrowserService2* This,LPCITEMIDLIST pidl,DWORD grfHLNF,DWORD dwFlags) {
    return This->lpVtbl->_NavigateToPidl(This,pidl,grfHLNF,dwFlags);
}
FORCEINLINE HRESULT IBrowserService2__TryShell2Rename(IBrowserService2* This,IShellView *psv,LPCITEMIDLIST pidlNew) {
    return This->lpVtbl->_TryShell2Rename(This,psv,pidlNew);
}
FORCEINLINE HRESULT IBrowserService2__SwitchActivationNow(IBrowserService2* This) {
    return This->lpVtbl->_SwitchActivationNow(This);
}
FORCEINLINE HRESULT IBrowserService2__ExecChildren(IBrowserService2* This,IUnknown *punkBar,BOOL fBroadcast,const GUID *pguidCmdGroup,DWORD nCmdID,DWORD nCmdexecopt,VARIANTARG *pvarargIn,VARIANTARG *pvarargOut) {
    return This->lpVtbl->_ExecChildren(This,punkBar,fBroadcast,pguidCmdGroup,nCmdID,nCmdexecopt,pvarargIn,pvarargOut);
}
FORCEINLINE HRESULT IBrowserService2__SendChildren(IBrowserService2* This,HWND hwndBar,BOOL fBroadcast,UINT uMsg,WPARAM wParam,LPARAM lParam) {
    return This->lpVtbl->_SendChildren(This,hwndBar,fBroadcast,uMsg,wParam,lParam);
}
FORCEINLINE HRESULT IBrowserService2_GetFolderSetData(IBrowserService2* This,struct tagFolderSetData *pfsd) {
    return This->lpVtbl->GetFolderSetData(This,pfsd);
}
FORCEINLINE HRESULT IBrowserService2__OnFocusChange(IBrowserService2* This,UINT itb) {
    return This->lpVtbl->_OnFocusChange(This,itb);
}
FORCEINLINE HRESULT IBrowserService2_v_ShowHideChildWindows(IBrowserService2* This,BOOL fChildOnly) {
    return This->lpVtbl->v_ShowHideChildWindows(This,fChildOnly);
}
FORCEINLINE UINT IBrowserService2__get_itbLastFocus(IBrowserService2* This) {
    return This->lpVtbl->_get_itbLastFocus(This);
}
FORCEINLINE HRESULT IBrowserService2__put_itbLastFocus(IBrowserService2* This,UINT itbLastFocus) {
    return This->lpVtbl->_put_itbLastFocus(This,itbLastFocus);
}
FORCEINLINE HRESULT IBrowserService2__UIActivateView(IBrowserService2* This,UINT uState) {
    return This->lpVtbl->_UIActivateView(This,uState);
}
FORCEINLINE HRESULT IBrowserService2__GetViewBorderRect(IBrowserService2* This,RECT *prc) {
    return This->lpVtbl->_GetViewBorderRect(This,prc);
}
FORCEINLINE HRESULT IBrowserService2__UpdateViewRectSize(IBrowserService2* This) {
    return This->lpVtbl->_UpdateViewRectSize(This);
}
FORCEINLINE HRESULT IBrowserService2__ResizeNextBorder(IBrowserService2* This,UINT itb) {
    return This->lpVtbl->_ResizeNextBorder(This,itb);
}
FORCEINLINE HRESULT IBrowserService2__ResizeView(IBrowserService2* This) {
    return This->lpVtbl->_ResizeView(This);
}
FORCEINLINE HRESULT IBrowserService2__GetEffectiveClientArea(IBrowserService2* This,LPRECT lprectBorder,HMONITOR hmon) {
    return This->lpVtbl->_GetEffectiveClientArea(This,lprectBorder,hmon);
}
FORCEINLINE IStream * IBrowserService2_v_GetViewStream(IBrowserService2* This,LPCITEMIDLIST pidl,DWORD grfMode,LPCWSTR pwszName) {
    return This->lpVtbl->v_GetViewStream(This,pidl,grfMode,pwszName);
}
FORCEINLINE LRESULT IBrowserService2_ForwardViewMsg(IBrowserService2* This,UINT uMsg,WPARAM wParam,LPARAM lParam) {
    return This->lpVtbl->ForwardViewMsg(This,uMsg,wParam,lParam);
}
FORCEINLINE HRESULT IBrowserService2_SetAcceleratorMenu(IBrowserService2* This,HACCEL hacc) {
    return This->lpVtbl->SetAcceleratorMenu(This,hacc);
}
FORCEINLINE int IBrowserService2__GetToolbarCount(IBrowserService2* This) {
    return This->lpVtbl->_GetToolbarCount(This);
}
FORCEINLINE LPTOOLBARITEM IBrowserService2__GetToolbarItem(IBrowserService2* This,int itb) {
    return This->lpVtbl->_GetToolbarItem(This,itb);
}
FORCEINLINE HRESULT IBrowserService2__SaveToolbars(IBrowserService2* This,IStream *pstm) {
    return This->lpVtbl->_SaveToolbars(This,pstm);
}
FORCEINLINE HRESULT IBrowserService2__LoadToolbars(IBrowserService2* This,IStream *pstm) {
    return This->lpVtbl->_LoadToolbars(This,pstm);
}
FORCEINLINE HRESULT IBrowserService2__CloseAndReleaseToolbars(IBrowserService2* This,BOOL fClose) {
    return This->lpVtbl->_CloseAndReleaseToolbars(This,fClose);
}
FORCEINLINE HRESULT IBrowserService2_v_MayGetNextToolbarFocus(IBrowserService2* This,LPMSG lpMsg,UINT itbNext,int citb,LPTOOLBARITEM *pptbi,HWND *phwnd) {
    return This->lpVtbl->v_MayGetNextToolbarFocus(This,lpMsg,itbNext,citb,pptbi,phwnd);
}
FORCEINLINE HRESULT IBrowserService2__ResizeNextBorderHelper(IBrowserService2* This,UINT itb,BOOL bUseHmonitor) {
    return This->lpVtbl->_ResizeNextBorderHelper(This,itb,bUseHmonitor);
}
FORCEINLINE UINT IBrowserService2__FindTBar(IBrowserService2* This,IUnknown *punkSrc) {
    return This->lpVtbl->_FindTBar(This,punkSrc);
}
FORCEINLINE HRESULT IBrowserService2__SetFocus(IBrowserService2* This,LPTOOLBARITEM ptbi,HWND hwnd,LPMSG lpMsg) {
    return This->lpVtbl->_SetFocus(This,ptbi,hwnd,lpMsg);
}
FORCEINLINE HRESULT IBrowserService2_v_MayTranslateAccelerator(IBrowserService2* This,MSG *pmsg) {
    return This->lpVtbl->v_MayTranslateAccelerator(This,pmsg);
}
FORCEINLINE HRESULT IBrowserService2__GetBorderDWHelper(IBrowserService2* This,IUnknown *punkSrc,LPRECT lprectBorder,BOOL bUseHmonitor) {
    return This->lpVtbl->_GetBorderDWHelper(This,punkSrc,lprectBorder,bUseHmonitor);
}
FORCEINLINE HRESULT IBrowserService2_v_CheckZoneCrossing(IBrowserService2* This,LPCITEMIDLIST pidl) {
    return This->lpVtbl->v_CheckZoneCrossing(This,pidl);
}
#endif
#endif

#endif

LRESULT STDMETHODCALLTYPE IBrowserService2_WndProcBS_Proxy(
    IBrowserService2* This,
    HWND hwnd,
    UINT uMsg,
    WPARAM wParam,
    LPARAM lParam);
void __RPC_STUB IBrowserService2_WndProcBS_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_SetAsDefFolderSettings_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2_SetAsDefFolderSettings_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_GetViewRect_Proxy(
    IBrowserService2* This,
    RECT *prc);
void __RPC_STUB IBrowserService2_GetViewRect_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_OnSize_Proxy(
    IBrowserService2* This,
    WPARAM wParam);
void __RPC_STUB IBrowserService2_OnSize_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_OnCreate_Proxy(
    IBrowserService2* This,
    struct tagCREATESTRUCTW *pcs);
void __RPC_STUB IBrowserService2_OnCreate_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
LRESULT STDMETHODCALLTYPE IBrowserService2_OnCommand_Proxy(
    IBrowserService2* This,
    WPARAM wParam,
    LPARAM lParam);
void __RPC_STUB IBrowserService2_OnCommand_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_OnDestroy_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2_OnDestroy_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
LRESULT STDMETHODCALLTYPE IBrowserService2_OnNotify_Proxy(
    IBrowserService2* This,
    struct tagNMHDR *pnm);
void __RPC_STUB IBrowserService2_OnNotify_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_OnSetFocus_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2_OnSetFocus_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_OnFrameWindowActivateBS_Proxy(
    IBrowserService2* This,
    BOOL fActive);
void __RPC_STUB IBrowserService2_OnFrameWindowActivateBS_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_ReleaseShellView_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2_ReleaseShellView_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_ActivatePendingView_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2_ActivatePendingView_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_CreateViewWindow_Proxy(
    IBrowserService2* This,
    IShellView *psvNew,
    IShellView *psvOld,
    LPRECT prcView,
    HWND *phwnd);
void __RPC_STUB IBrowserService2_CreateViewWindow_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_CreateBrowserPropSheetExt_Proxy(
    IBrowserService2* This,
    REFIID riid,
    void **ppv);
void __RPC_STUB IBrowserService2_CreateBrowserPropSheetExt_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_GetViewWindow_Proxy(
    IBrowserService2* This,
    HWND *phwndView);
void __RPC_STUB IBrowserService2_GetViewWindow_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_GetBaseBrowserData_Proxy(
    IBrowserService2* This,
    LPCBASEBROWSERDATA *pbbd);
void __RPC_STUB IBrowserService2_GetBaseBrowserData_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
LPBASEBROWSERDATA STDMETHODCALLTYPE IBrowserService2_PutBaseBrowserData_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2_PutBaseBrowserData_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_InitializeTravelLog_Proxy(
    IBrowserService2* This,
    ITravelLog *ptl,
    DWORD dw);
void __RPC_STUB IBrowserService2_InitializeTravelLog_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_SetTopBrowser_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2_SetTopBrowser_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_Offline_Proxy(
    IBrowserService2* This,
    int iCmd);
void __RPC_STUB IBrowserService2_Offline_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_AllowViewResize_Proxy(
    IBrowserService2* This,
    BOOL f);
void __RPC_STUB IBrowserService2_AllowViewResize_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_SetActivateState_Proxy(
    IBrowserService2* This,
    UINT u);
void __RPC_STUB IBrowserService2_SetActivateState_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_UpdateSecureLockIcon_Proxy(
    IBrowserService2* This,
    int eSecureLock);
void __RPC_STUB IBrowserService2_UpdateSecureLockIcon_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_InitializeDownloadManager_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2_InitializeDownloadManager_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_InitializeTransitionSite_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2_InitializeTransitionSite_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__Initialize_Proxy(
    IBrowserService2* This,
    HWND hwnd,
    IUnknown *pauto);
void __RPC_STUB IBrowserService2__Initialize_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__CancelPendingNavigationAsync_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2__CancelPendingNavigationAsync_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__CancelPendingView_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2__CancelPendingView_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__MaySaveChanges_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2__MaySaveChanges_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__PauseOrResumeView_Proxy(
    IBrowserService2* This,
    BOOL fPaused);
void __RPC_STUB IBrowserService2__PauseOrResumeView_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__DisableModeless_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2__DisableModeless_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__NavigateToPidl_Proxy(
    IBrowserService2* This,
    LPCITEMIDLIST pidl,
    DWORD grfHLNF,
    DWORD dwFlags);
void __RPC_STUB IBrowserService2__NavigateToPidl_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__TryShell2Rename_Proxy(
    IBrowserService2* This,
    IShellView *psv,
    LPCITEMIDLIST pidlNew);
void __RPC_STUB IBrowserService2__TryShell2Rename_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__SwitchActivationNow_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2__SwitchActivationNow_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__ExecChildren_Proxy(
    IBrowserService2* This,
    IUnknown *punkBar,
    BOOL fBroadcast,
    const GUID *pguidCmdGroup,
    DWORD nCmdID,
    DWORD nCmdexecopt,
    VARIANTARG *pvarargIn,
    VARIANTARG *pvarargOut);
void __RPC_STUB IBrowserService2__ExecChildren_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__SendChildren_Proxy(
    IBrowserService2* This,
    HWND hwndBar,
    BOOL fBroadcast,
    UINT uMsg,
    WPARAM wParam,
    LPARAM lParam);
void __RPC_STUB IBrowserService2__SendChildren_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_GetFolderSetData_Proxy(
    IBrowserService2* This,
    struct tagFolderSetData *pfsd);
void __RPC_STUB IBrowserService2_GetFolderSetData_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__OnFocusChange_Proxy(
    IBrowserService2* This,
    UINT itb);
void __RPC_STUB IBrowserService2__OnFocusChange_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_v_ShowHideChildWindows_Proxy(
    IBrowserService2* This,
    BOOL fChildOnly);
void __RPC_STUB IBrowserService2_v_ShowHideChildWindows_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
UINT STDMETHODCALLTYPE IBrowserService2__get_itbLastFocus_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2__get_itbLastFocus_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__put_itbLastFocus_Proxy(
    IBrowserService2* This,
    UINT itbLastFocus);
void __RPC_STUB IBrowserService2__put_itbLastFocus_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__UIActivateView_Proxy(
    IBrowserService2* This,
    UINT uState);
void __RPC_STUB IBrowserService2__UIActivateView_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__GetViewBorderRect_Proxy(
    IBrowserService2* This,
    RECT *prc);
void __RPC_STUB IBrowserService2__GetViewBorderRect_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__UpdateViewRectSize_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2__UpdateViewRectSize_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__ResizeNextBorder_Proxy(
    IBrowserService2* This,
    UINT itb);
void __RPC_STUB IBrowserService2__ResizeNextBorder_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__ResizeView_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2__ResizeView_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__GetEffectiveClientArea_Proxy(
    IBrowserService2* This,
    LPRECT lprectBorder,
    HMONITOR hmon);
void __RPC_STUB IBrowserService2__GetEffectiveClientArea_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
IStream * STDMETHODCALLTYPE IBrowserService2_v_GetViewStream_Proxy(
    IBrowserService2* This,
    LPCITEMIDLIST pidl,
    DWORD grfMode,
    LPCWSTR pwszName);
void __RPC_STUB IBrowserService2_v_GetViewStream_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
LRESULT STDMETHODCALLTYPE IBrowserService2_ForwardViewMsg_Proxy(
    IBrowserService2* This,
    UINT uMsg,
    WPARAM wParam,
    LPARAM lParam);
void __RPC_STUB IBrowserService2_ForwardViewMsg_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_SetAcceleratorMenu_Proxy(
    IBrowserService2* This,
    HACCEL hacc);
void __RPC_STUB IBrowserService2_SetAcceleratorMenu_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
int STDMETHODCALLTYPE IBrowserService2__GetToolbarCount_Proxy(
    IBrowserService2* This);
void __RPC_STUB IBrowserService2__GetToolbarCount_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
LPTOOLBARITEM STDMETHODCALLTYPE IBrowserService2__GetToolbarItem_Proxy(
    IBrowserService2* This,
    int itb);
void __RPC_STUB IBrowserService2__GetToolbarItem_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__SaveToolbars_Proxy(
    IBrowserService2* This,
    IStream *pstm);
void __RPC_STUB IBrowserService2__SaveToolbars_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__LoadToolbars_Proxy(
    IBrowserService2* This,
    IStream *pstm);
void __RPC_STUB IBrowserService2__LoadToolbars_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__CloseAndReleaseToolbars_Proxy(
    IBrowserService2* This,
    BOOL fClose);
void __RPC_STUB IBrowserService2__CloseAndReleaseToolbars_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_v_MayGetNextToolbarFocus_Proxy(
    IBrowserService2* This,
    LPMSG lpMsg,
    UINT itbNext,
    int citb,
    LPTOOLBARITEM *pptbi,
    HWND *phwnd);
void __RPC_STUB IBrowserService2_v_MayGetNextToolbarFocus_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__ResizeNextBorderHelper_Proxy(
    IBrowserService2* This,
    UINT itb,
    BOOL bUseHmonitor);
void __RPC_STUB IBrowserService2__ResizeNextBorderHelper_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
UINT STDMETHODCALLTYPE IBrowserService2__FindTBar_Proxy(
    IBrowserService2* This,
    IUnknown *punkSrc);
void __RPC_STUB IBrowserService2__FindTBar_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__SetFocus_Proxy(
    IBrowserService2* This,
    LPTOOLBARITEM ptbi,
    HWND hwnd,
    LPMSG lpMsg);
void __RPC_STUB IBrowserService2__SetFocus_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_v_MayTranslateAccelerator_Proxy(
    IBrowserService2* This,
    MSG *pmsg);
void __RPC_STUB IBrowserService2_v_MayTranslateAccelerator_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2__GetBorderDWHelper_Proxy(
    IBrowserService2* This,
    IUnknown *punkSrc,
    LPRECT lprectBorder,
    BOOL bUseHmonitor);
void __RPC_STUB IBrowserService2__GetBorderDWHelper_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService2_v_CheckZoneCrossing_Proxy(
    IBrowserService2* This,
    LPCITEMIDLIST pidl);
void __RPC_STUB IBrowserService2_v_CheckZoneCrossing_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);

#endif  /* __IBrowserService2_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IBrowserService3 interface
 */
#ifndef __IBrowserService3_INTERFACE_DEFINED__
#define __IBrowserService3_INTERFACE_DEFINED__

DEFINE_GUID(IID_IBrowserService3, 0x27d7ce21, 0x762d, 0x48f3, 0x86,0xf3, 0x40,0xe2,0xfd,0x37,0x49,0xc4);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("27d7ce21-762d-48f3-86f3-40e2fd3749c4")
IBrowserService3 : public IBrowserService2
{
    virtual HRESULT STDMETHODCALLTYPE _PositionViewWindow(
        HWND hwnd,
        LPRECT prc) = 0;

    virtual HRESULT STDMETHODCALLTYPE IEParseDisplayNameEx(
        UINT uiCP,
        LPCWSTR pwszPath,
        DWORD dwFlags,
        LPITEMIDLIST *ppidlOut) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IBrowserService3, 0x27d7ce21, 0x762d, 0x48f3, 0x86,0xf3, 0x40,0xe2,0xfd,0x37,0x49,0xc4)
#endif
#else
typedef struct IBrowserService3Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IBrowserService3 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IBrowserService3 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IBrowserService3 *This);

    /*** IBrowserService methods ***/
    HRESULT (STDMETHODCALLTYPE *GetParentSite)(
        IBrowserService3 *This,
        IOleInPlaceSite **ppipsite);

    HRESULT (STDMETHODCALLTYPE *SetTitle)(
        IBrowserService3 *This,
        IShellView *psv,
        LPCWSTR pszName);

    HRESULT (STDMETHODCALLTYPE *GetTitle)(
        IBrowserService3 *This,
        IShellView *psv,
        LPWSTR pszName,
        DWORD cchName);

    HRESULT (STDMETHODCALLTYPE *GetOleObject)(
        IBrowserService3 *This,
        IOleObject **ppobjv);

    HRESULT (STDMETHODCALLTYPE *GetTravelLog)(
        IBrowserService3 *This,
        ITravelLog **pptl);

    HRESULT (STDMETHODCALLTYPE *ShowControlWindow)(
        IBrowserService3 *This,
        UINT id,
        BOOL fShow);

    HRESULT (STDMETHODCALLTYPE *IsControlWindowShown)(
        IBrowserService3 *This,
        UINT id,
        BOOL *pfShown);

    HRESULT (STDMETHODCALLTYPE *IEGetDisplayName)(
        IBrowserService3 *This,
        PCIDLIST_ABSOLUTE pidl,
        LPWSTR pwszName,
        UINT uFlags);

    HRESULT (STDMETHODCALLTYPE *IEParseDisplayName)(
        IBrowserService3 *This,
        UINT uiCP,
        LPCWSTR pwszPath,
        PIDLIST_ABSOLUTE *ppidlOut);

    HRESULT (STDMETHODCALLTYPE *DisplayParseError)(
        IBrowserService3 *This,
        HRESULT hres,
        LPCWSTR pwszPath);

    HRESULT (STDMETHODCALLTYPE *NavigateToPidl)(
        IBrowserService3 *This,
        PCIDLIST_ABSOLUTE pidl,
        DWORD grfHLNF);

    HRESULT (STDMETHODCALLTYPE *SetNavigateState)(
        IBrowserService3 *This,
        BNSTATE bnstate);

    HRESULT (STDMETHODCALLTYPE *GetNavigateState)(
        IBrowserService3 *This,
        BNSTATE *pbnstate);

    HRESULT (STDMETHODCALLTYPE *NotifyRedirect)(
        IBrowserService3 *This,
        IShellView *psv,
        PCIDLIST_ABSOLUTE pidl,
        BOOL *pfDidBrowse);

    HRESULT (STDMETHODCALLTYPE *UpdateWindowList)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *UpdateBackForwardState)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *SetFlags)(
        IBrowserService3 *This,
        DWORD dwFlags,
        DWORD dwFlagMask);

    HRESULT (STDMETHODCALLTYPE *GetFlags)(
        IBrowserService3 *This,
        DWORD *pdwFlags);

    HRESULT (STDMETHODCALLTYPE *CanNavigateNow)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *GetPidl)(
        IBrowserService3 *This,
        PIDLIST_ABSOLUTE *ppidl);

    HRESULT (STDMETHODCALLTYPE *SetReferrer)(
        IBrowserService3 *This,
        PCIDLIST_ABSOLUTE pidl);

    DWORD (STDMETHODCALLTYPE *GetBrowserIndex)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *GetBrowserByIndex)(
        IBrowserService3 *This,
        DWORD dwID,
        IUnknown **ppunk);

    HRESULT (STDMETHODCALLTYPE *GetHistoryObject)(
        IBrowserService3 *This,
        IOleObject **ppole,
        IStream **pstm,
        IBindCtx **ppbc);

    HRESULT (STDMETHODCALLTYPE *SetHistoryObject)(
        IBrowserService3 *This,
        IOleObject *pole,
        BOOL fIsLocalAnchor);

    HRESULT (STDMETHODCALLTYPE *CacheOLEServer)(
        IBrowserService3 *This,
        IOleObject *pole);

    HRESULT (STDMETHODCALLTYPE *GetSetCodePage)(
        IBrowserService3 *This,
        VARIANT *pvarIn,
        VARIANT *pvarOut);

    HRESULT (STDMETHODCALLTYPE *OnHttpEquiv)(
        IBrowserService3 *This,
        IShellView *psv,
        BOOL fDone,
        VARIANT *pvarargIn,
        VARIANT *pvarargOut);

    HRESULT (STDMETHODCALLTYPE *GetPalette)(
        IBrowserService3 *This,
        HPALETTE *hpal);

    HRESULT (STDMETHODCALLTYPE *RegisterWindow)(
        IBrowserService3 *This,
        BOOL fForceRegister,
        int swc);

    /*** IBrowserService2 methods ***/
    LRESULT (STDMETHODCALLTYPE *WndProcBS)(
        IBrowserService3 *This,
        HWND hwnd,
        UINT uMsg,
        WPARAM wParam,
        LPARAM lParam);

    HRESULT (STDMETHODCALLTYPE *SetAsDefFolderSettings)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *GetViewRect)(
        IBrowserService3 *This,
        RECT *prc);

    HRESULT (STDMETHODCALLTYPE *OnSize)(
        IBrowserService3 *This,
        WPARAM wParam);

    HRESULT (STDMETHODCALLTYPE *OnCreate)(
        IBrowserService3 *This,
        struct tagCREATESTRUCTW *pcs);

    LRESULT (STDMETHODCALLTYPE *OnCommand)(
        IBrowserService3 *This,
        WPARAM wParam,
        LPARAM lParam);

    HRESULT (STDMETHODCALLTYPE *OnDestroy)(
        IBrowserService3 *This);

    LRESULT (STDMETHODCALLTYPE *OnNotify)(
        IBrowserService3 *This,
        struct tagNMHDR *pnm);

    HRESULT (STDMETHODCALLTYPE *OnSetFocus)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *OnFrameWindowActivateBS)(
        IBrowserService3 *This,
        BOOL fActive);

    HRESULT (STDMETHODCALLTYPE *ReleaseShellView)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *ActivatePendingView)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *CreateViewWindow)(
        IBrowserService3 *This,
        IShellView *psvNew,
        IShellView *psvOld,
        LPRECT prcView,
        HWND *phwnd);

    HRESULT (STDMETHODCALLTYPE *CreateBrowserPropSheetExt)(
        IBrowserService3 *This,
        REFIID riid,
        void **ppv);

    HRESULT (STDMETHODCALLTYPE *GetViewWindow)(
        IBrowserService3 *This,
        HWND *phwndView);

    HRESULT (STDMETHODCALLTYPE *GetBaseBrowserData)(
        IBrowserService3 *This,
        LPCBASEBROWSERDATA *pbbd);

    LPBASEBROWSERDATA (STDMETHODCALLTYPE *PutBaseBrowserData)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *InitializeTravelLog)(
        IBrowserService3 *This,
        ITravelLog *ptl,
        DWORD dw);

    HRESULT (STDMETHODCALLTYPE *SetTopBrowser)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *Offline)(
        IBrowserService3 *This,
        int iCmd);

    HRESULT (STDMETHODCALLTYPE *AllowViewResize)(
        IBrowserService3 *This,
        BOOL f);

    HRESULT (STDMETHODCALLTYPE *SetActivateState)(
        IBrowserService3 *This,
        UINT u);

    HRESULT (STDMETHODCALLTYPE *UpdateSecureLockIcon)(
        IBrowserService3 *This,
        int eSecureLock);

    HRESULT (STDMETHODCALLTYPE *InitializeDownloadManager)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *InitializeTransitionSite)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *_Initialize)(
        IBrowserService3 *This,
        HWND hwnd,
        IUnknown *pauto);

    HRESULT (STDMETHODCALLTYPE *_CancelPendingNavigationAsync)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *_CancelPendingView)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *_MaySaveChanges)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *_PauseOrResumeView)(
        IBrowserService3 *This,
        BOOL fPaused);

    HRESULT (STDMETHODCALLTYPE *_DisableModeless)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *_NavigateToPidl)(
        IBrowserService3 *This,
        LPCITEMIDLIST pidl,
        DWORD grfHLNF,
        DWORD dwFlags);

    HRESULT (STDMETHODCALLTYPE *_TryShell2Rename)(
        IBrowserService3 *This,
        IShellView *psv,
        LPCITEMIDLIST pidlNew);

    HRESULT (STDMETHODCALLTYPE *_SwitchActivationNow)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *_ExecChildren)(
        IBrowserService3 *This,
        IUnknown *punkBar,
        BOOL fBroadcast,
        const GUID *pguidCmdGroup,
        DWORD nCmdID,
        DWORD nCmdexecopt,
        VARIANTARG *pvarargIn,
        VARIANTARG *pvarargOut);

    HRESULT (STDMETHODCALLTYPE *_SendChildren)(
        IBrowserService3 *This,
        HWND hwndBar,
        BOOL fBroadcast,
        UINT uMsg,
        WPARAM wParam,
        LPARAM lParam);

    HRESULT (STDMETHODCALLTYPE *GetFolderSetData)(
        IBrowserService3 *This,
        struct tagFolderSetData *pfsd);

    HRESULT (STDMETHODCALLTYPE *_OnFocusChange)(
        IBrowserService3 *This,
        UINT itb);

    HRESULT (STDMETHODCALLTYPE *v_ShowHideChildWindows)(
        IBrowserService3 *This,
        BOOL fChildOnly);

    UINT (STDMETHODCALLTYPE *_get_itbLastFocus)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *_put_itbLastFocus)(
        IBrowserService3 *This,
        UINT itbLastFocus);

    HRESULT (STDMETHODCALLTYPE *_UIActivateView)(
        IBrowserService3 *This,
        UINT uState);

    HRESULT (STDMETHODCALLTYPE *_GetViewBorderRect)(
        IBrowserService3 *This,
        RECT *prc);

    HRESULT (STDMETHODCALLTYPE *_UpdateViewRectSize)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *_ResizeNextBorder)(
        IBrowserService3 *This,
        UINT itb);

    HRESULT (STDMETHODCALLTYPE *_ResizeView)(
        IBrowserService3 *This);

    HRESULT (STDMETHODCALLTYPE *_GetEffectiveClientArea)(
        IBrowserService3 *This,
        LPRECT lprectBorder,
        HMONITOR hmon);

    IStream * (STDMETHODCALLTYPE *v_GetViewStream)(
        IBrowserService3 *This,
        LPCITEMIDLIST pidl,
        DWORD grfMode,
        LPCWSTR pwszName);

    LRESULT (STDMETHODCALLTYPE *ForwardViewMsg)(
        IBrowserService3 *This,
        UINT uMsg,
        WPARAM wParam,
        LPARAM lParam);

    HRESULT (STDMETHODCALLTYPE *SetAcceleratorMenu)(
        IBrowserService3 *This,
        HACCEL hacc);

    int (STDMETHODCALLTYPE *_GetToolbarCount)(
        IBrowserService3 *This);

    LPTOOLBARITEM (STDMETHODCALLTYPE *_GetToolbarItem)(
        IBrowserService3 *This,
        int itb);

    HRESULT (STDMETHODCALLTYPE *_SaveToolbars)(
        IBrowserService3 *This,
        IStream *pstm);

    HRESULT (STDMETHODCALLTYPE *_LoadToolbars)(
        IBrowserService3 *This,
        IStream *pstm);

    HRESULT (STDMETHODCALLTYPE *_CloseAndReleaseToolbars)(
        IBrowserService3 *This,
        BOOL fClose);

    HRESULT (STDMETHODCALLTYPE *v_MayGetNextToolbarFocus)(
        IBrowserService3 *This,
        LPMSG lpMsg,
        UINT itbNext,
        int citb,
        LPTOOLBARITEM *pptbi,
        HWND *phwnd);

    HRESULT (STDMETHODCALLTYPE *_ResizeNextBorderHelper)(
        IBrowserService3 *This,
        UINT itb,
        BOOL bUseHmonitor);

    UINT (STDMETHODCALLTYPE *_FindTBar)(
        IBrowserService3 *This,
        IUnknown *punkSrc);

    HRESULT (STDMETHODCALLTYPE *_SetFocus)(
        IBrowserService3 *This,
        LPTOOLBARITEM ptbi,
        HWND hwnd,
        LPMSG lpMsg);

    HRESULT (STDMETHODCALLTYPE *v_MayTranslateAccelerator)(
        IBrowserService3 *This,
        MSG *pmsg);

    HRESULT (STDMETHODCALLTYPE *_GetBorderDWHelper)(
        IBrowserService3 *This,
        IUnknown *punkSrc,
        LPRECT lprectBorder,
        BOOL bUseHmonitor);

    HRESULT (STDMETHODCALLTYPE *v_CheckZoneCrossing)(
        IBrowserService3 *This,
        LPCITEMIDLIST pidl);

    /*** IBrowserService3 methods ***/
    HRESULT (STDMETHODCALLTYPE *_PositionViewWindow)(
        IBrowserService3 *This,
        HWND hwnd,
        LPRECT prc);

    HRESULT (STDMETHODCALLTYPE *IEParseDisplayNameEx)(
        IBrowserService3 *This,
        UINT uiCP,
        LPCWSTR pwszPath,
        DWORD dwFlags,
        LPITEMIDLIST *ppidlOut);

    END_INTERFACE
} IBrowserService3Vtbl;

interface IBrowserService3 {
    CONST_VTBL IBrowserService3Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IBrowserService3_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IBrowserService3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IBrowserService3_Release(This) (This)->lpVtbl->Release(This)
/*** IBrowserService methods ***/
#define IBrowserService3_GetParentSite(This,ppipsite) (This)->lpVtbl->GetParentSite(This,ppipsite)
#define IBrowserService3_SetTitle(This,psv,pszName) (This)->lpVtbl->SetTitle(This,psv,pszName)
#define IBrowserService3_GetTitle(This,psv,pszName,cchName) (This)->lpVtbl->GetTitle(This,psv,pszName,cchName)
#define IBrowserService3_GetOleObject(This,ppobjv) (This)->lpVtbl->GetOleObject(This,ppobjv)
#define IBrowserService3_GetTravelLog(This,pptl) (This)->lpVtbl->GetTravelLog(This,pptl)
#define IBrowserService3_ShowControlWindow(This,id,fShow) (This)->lpVtbl->ShowControlWindow(This,id,fShow)
#define IBrowserService3_IsControlWindowShown(This,id,pfShown) (This)->lpVtbl->IsControlWindowShown(This,id,pfShown)
#define IBrowserService3_IEGetDisplayName(This,pidl,pwszName,uFlags) (This)->lpVtbl->IEGetDisplayName(This,pidl,pwszName,uFlags)
#define IBrowserService3_IEParseDisplayName(This,uiCP,pwszPath,ppidlOut) (This)->lpVtbl->IEParseDisplayName(This,uiCP,pwszPath,ppidlOut)
#define IBrowserService3_DisplayParseError(This,hres,pwszPath) (This)->lpVtbl->DisplayParseError(This,hres,pwszPath)
#define IBrowserService3_NavigateToPidl(This,pidl,grfHLNF) (This)->lpVtbl->NavigateToPidl(This,pidl,grfHLNF)
#define IBrowserService3_SetNavigateState(This,bnstate) (This)->lpVtbl->SetNavigateState(This,bnstate)
#define IBrowserService3_GetNavigateState(This,pbnstate) (This)->lpVtbl->GetNavigateState(This,pbnstate)
#define IBrowserService3_NotifyRedirect(This,psv,pidl,pfDidBrowse) (This)->lpVtbl->NotifyRedirect(This,psv,pidl,pfDidBrowse)
#define IBrowserService3_UpdateWindowList(This) (This)->lpVtbl->UpdateWindowList(This)
#define IBrowserService3_UpdateBackForwardState(This) (This)->lpVtbl->UpdateBackForwardState(This)
#define IBrowserService3_SetFlags(This,dwFlags,dwFlagMask) (This)->lpVtbl->SetFlags(This,dwFlags,dwFlagMask)
#define IBrowserService3_GetFlags(This,pdwFlags) (This)->lpVtbl->GetFlags(This,pdwFlags)
#define IBrowserService3_CanNavigateNow(This) (This)->lpVtbl->CanNavigateNow(This)
#define IBrowserService3_GetPidl(This,ppidl) (This)->lpVtbl->GetPidl(This,ppidl)
#define IBrowserService3_SetReferrer(This,pidl) (This)->lpVtbl->SetReferrer(This,pidl)
#define IBrowserService3_GetBrowserIndex(This) (This)->lpVtbl->GetBrowserIndex(This)
#define IBrowserService3_GetBrowserByIndex(This,dwID,ppunk) (This)->lpVtbl->GetBrowserByIndex(This,dwID,ppunk)
#define IBrowserService3_GetHistoryObject(This,ppole,pstm,ppbc) (This)->lpVtbl->GetHistoryObject(This,ppole,pstm,ppbc)
#define IBrowserService3_SetHistoryObject(This,pole,fIsLocalAnchor) (This)->lpVtbl->SetHistoryObject(This,pole,fIsLocalAnchor)
#define IBrowserService3_CacheOLEServer(This,pole) (This)->lpVtbl->CacheOLEServer(This,pole)
#define IBrowserService3_GetSetCodePage(This,pvarIn,pvarOut) (This)->lpVtbl->GetSetCodePage(This,pvarIn,pvarOut)
#define IBrowserService3_OnHttpEquiv(This,psv,fDone,pvarargIn,pvarargOut) (This)->lpVtbl->OnHttpEquiv(This,psv,fDone,pvarargIn,pvarargOut)
#define IBrowserService3_GetPalette(This,hpal) (This)->lpVtbl->GetPalette(This,hpal)
#define IBrowserService3_RegisterWindow(This,fForceRegister,swc) (This)->lpVtbl->RegisterWindow(This,fForceRegister,swc)
/*** IBrowserService2 methods ***/
#define IBrowserService3_WndProcBS(This,hwnd,uMsg,wParam,lParam) (This)->lpVtbl->WndProcBS(This,hwnd,uMsg,wParam,lParam)
#define IBrowserService3_SetAsDefFolderSettings(This) (This)->lpVtbl->SetAsDefFolderSettings(This)
#define IBrowserService3_GetViewRect(This,prc) (This)->lpVtbl->GetViewRect(This,prc)
#define IBrowserService3_OnSize(This,wParam) (This)->lpVtbl->OnSize(This,wParam)
#define IBrowserService3_OnCreate(This,pcs) (This)->lpVtbl->OnCreate(This,pcs)
#define IBrowserService3_OnCommand(This,wParam,lParam) (This)->lpVtbl->OnCommand(This,wParam,lParam)
#define IBrowserService3_OnDestroy(This) (This)->lpVtbl->OnDestroy(This)
#define IBrowserService3_OnNotify(This,pnm) (This)->lpVtbl->OnNotify(This,pnm)
#define IBrowserService3_OnSetFocus(This) (This)->lpVtbl->OnSetFocus(This)
#define IBrowserService3_OnFrameWindowActivateBS(This,fActive) (This)->lpVtbl->OnFrameWindowActivateBS(This,fActive)
#define IBrowserService3_ReleaseShellView(This) (This)->lpVtbl->ReleaseShellView(This)
#define IBrowserService3_ActivatePendingView(This) (This)->lpVtbl->ActivatePendingView(This)
#define IBrowserService3_CreateViewWindow(This,psvNew,psvOld,prcView,phwnd) (This)->lpVtbl->CreateViewWindow(This,psvNew,psvOld,prcView,phwnd)
#define IBrowserService3_CreateBrowserPropSheetExt(This,riid,ppv) (This)->lpVtbl->CreateBrowserPropSheetExt(This,riid,ppv)
#define IBrowserService3_GetViewWindow(This,phwndView) (This)->lpVtbl->GetViewWindow(This,phwndView)
#define IBrowserService3_GetBaseBrowserData(This,pbbd) (This)->lpVtbl->GetBaseBrowserData(This,pbbd)
#define IBrowserService3_PutBaseBrowserData(This) (This)->lpVtbl->PutBaseBrowserData(This)
#define IBrowserService3_InitializeTravelLog(This,ptl,dw) (This)->lpVtbl->InitializeTravelLog(This,ptl,dw)
#define IBrowserService3_SetTopBrowser(This) (This)->lpVtbl->SetTopBrowser(This)
#define IBrowserService3_Offline(This,iCmd) (This)->lpVtbl->Offline(This,iCmd)
#define IBrowserService3_AllowViewResize(This,f) (This)->lpVtbl->AllowViewResize(This,f)
#define IBrowserService3_SetActivateState(This,u) (This)->lpVtbl->SetActivateState(This,u)
#define IBrowserService3_UpdateSecureLockIcon(This,eSecureLock) (This)->lpVtbl->UpdateSecureLockIcon(This,eSecureLock)
#define IBrowserService3_InitializeDownloadManager(This) (This)->lpVtbl->InitializeDownloadManager(This)
#define IBrowserService3_InitializeTransitionSite(This) (This)->lpVtbl->InitializeTransitionSite(This)
#define IBrowserService3__Initialize(This,hwnd,pauto) (This)->lpVtbl->_Initialize(This,hwnd,pauto)
#define IBrowserService3__CancelPendingNavigationAsync(This) (This)->lpVtbl->_CancelPendingNavigationAsync(This)
#define IBrowserService3__CancelPendingView(This) (This)->lpVtbl->_CancelPendingView(This)
#define IBrowserService3__MaySaveChanges(This) (This)->lpVtbl->_MaySaveChanges(This)
#define IBrowserService3__PauseOrResumeView(This,fPaused) (This)->lpVtbl->_PauseOrResumeView(This,fPaused)
#define IBrowserService3__DisableModeless(This) (This)->lpVtbl->_DisableModeless(This)
#define IBrowserService3__NavigateToPidl(This,pidl,grfHLNF,dwFlags) (This)->lpVtbl->_NavigateToPidl(This,pidl,grfHLNF,dwFlags)
#define IBrowserService3__TryShell2Rename(This,psv,pidlNew) (This)->lpVtbl->_TryShell2Rename(This,psv,pidlNew)
#define IBrowserService3__SwitchActivationNow(This) (This)->lpVtbl->_SwitchActivationNow(This)
#define IBrowserService3__ExecChildren(This,punkBar,fBroadcast,pguidCmdGroup,nCmdID,nCmdexecopt,pvarargIn,pvarargOut) (This)->lpVtbl->_ExecChildren(This,punkBar,fBroadcast,pguidCmdGroup,nCmdID,nCmdexecopt,pvarargIn,pvarargOut)
#define IBrowserService3__SendChildren(This,hwndBar,fBroadcast,uMsg,wParam,lParam) (This)->lpVtbl->_SendChildren(This,hwndBar,fBroadcast,uMsg,wParam,lParam)
#define IBrowserService3_GetFolderSetData(This,pfsd) (This)->lpVtbl->GetFolderSetData(This,pfsd)
#define IBrowserService3__OnFocusChange(This,itb) (This)->lpVtbl->_OnFocusChange(This,itb)
#define IBrowserService3_v_ShowHideChildWindows(This,fChildOnly) (This)->lpVtbl->v_ShowHideChildWindows(This,fChildOnly)
#define IBrowserService3__get_itbLastFocus(This) (This)->lpVtbl->_get_itbLastFocus(This)
#define IBrowserService3__put_itbLastFocus(This,itbLastFocus) (This)->lpVtbl->_put_itbLastFocus(This,itbLastFocus)
#define IBrowserService3__UIActivateView(This,uState) (This)->lpVtbl->_UIActivateView(This,uState)
#define IBrowserService3__GetViewBorderRect(This,prc) (This)->lpVtbl->_GetViewBorderRect(This,prc)
#define IBrowserService3__UpdateViewRectSize(This) (This)->lpVtbl->_UpdateViewRectSize(This)
#define IBrowserService3__ResizeNextBorder(This,itb) (This)->lpVtbl->_ResizeNextBorder(This,itb)
#define IBrowserService3__ResizeView(This) (This)->lpVtbl->_ResizeView(This)
#define IBrowserService3__GetEffectiveClientArea(This,lprectBorder,hmon) (This)->lpVtbl->_GetEffectiveClientArea(This,lprectBorder,hmon)
#define IBrowserService3_v_GetViewStream(This,pidl,grfMode,pwszName) (This)->lpVtbl->v_GetViewStream(This,pidl,grfMode,pwszName)
#define IBrowserService3_ForwardViewMsg(This,uMsg,wParam,lParam) (This)->lpVtbl->ForwardViewMsg(This,uMsg,wParam,lParam)
#define IBrowserService3_SetAcceleratorMenu(This,hacc) (This)->lpVtbl->SetAcceleratorMenu(This,hacc)
#define IBrowserService3__GetToolbarCount(This) (This)->lpVtbl->_GetToolbarCount(This)
#define IBrowserService3__GetToolbarItem(This,itb) (This)->lpVtbl->_GetToolbarItem(This,itb)
#define IBrowserService3__SaveToolbars(This,pstm) (This)->lpVtbl->_SaveToolbars(This,pstm)
#define IBrowserService3__LoadToolbars(This,pstm) (This)->lpVtbl->_LoadToolbars(This,pstm)
#define IBrowserService3__CloseAndReleaseToolbars(This,fClose) (This)->lpVtbl->_CloseAndReleaseToolbars(This,fClose)
#define IBrowserService3_v_MayGetNextToolbarFocus(This,lpMsg,itbNext,citb,pptbi,phwnd) (This)->lpVtbl->v_MayGetNextToolbarFocus(This,lpMsg,itbNext,citb,pptbi,phwnd)
#define IBrowserService3__ResizeNextBorderHelper(This,itb,bUseHmonitor) (This)->lpVtbl->_ResizeNextBorderHelper(This,itb,bUseHmonitor)
#define IBrowserService3__FindTBar(This,punkSrc) (This)->lpVtbl->_FindTBar(This,punkSrc)
#define IBrowserService3__SetFocus(This,ptbi,hwnd,lpMsg) (This)->lpVtbl->_SetFocus(This,ptbi,hwnd,lpMsg)
#define IBrowserService3_v_MayTranslateAccelerator(This,pmsg) (This)->lpVtbl->v_MayTranslateAccelerator(This,pmsg)
#define IBrowserService3__GetBorderDWHelper(This,punkSrc,lprectBorder,bUseHmonitor) (This)->lpVtbl->_GetBorderDWHelper(This,punkSrc,lprectBorder,bUseHmonitor)
#define IBrowserService3_v_CheckZoneCrossing(This,pidl) (This)->lpVtbl->v_CheckZoneCrossing(This,pidl)
/*** IBrowserService3 methods ***/
#define IBrowserService3__PositionViewWindow(This,hwnd,prc) (This)->lpVtbl->_PositionViewWindow(This,hwnd,prc)
#define IBrowserService3_IEParseDisplayNameEx(This,uiCP,pwszPath,dwFlags,ppidlOut) (This)->lpVtbl->IEParseDisplayNameEx(This,uiCP,pwszPath,dwFlags,ppidlOut)
#else
/*** IUnknown methods ***/
FORCEINLINE HRESULT IBrowserService3_QueryInterface(IBrowserService3* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
FORCEINLINE ULONG IBrowserService3_AddRef(IBrowserService3* This) {
    return This->lpVtbl->AddRef(This);
}
FORCEINLINE ULONG IBrowserService3_Release(IBrowserService3* This) {
    return This->lpVtbl->Release(This);
}
/*** IBrowserService methods ***/
FORCEINLINE HRESULT IBrowserService3_GetParentSite(IBrowserService3* This,IOleInPlaceSite **ppipsite) {
    return This->lpVtbl->GetParentSite(This,ppipsite);
}
FORCEINLINE HRESULT IBrowserService3_SetTitle(IBrowserService3* This,IShellView *psv,LPCWSTR pszName) {
    return This->lpVtbl->SetTitle(This,psv,pszName);
}
FORCEINLINE HRESULT IBrowserService3_GetTitle(IBrowserService3* This,IShellView *psv,LPWSTR pszName,DWORD cchName) {
    return This->lpVtbl->GetTitle(This,psv,pszName,cchName);
}
FORCEINLINE HRESULT IBrowserService3_GetOleObject(IBrowserService3* This,IOleObject **ppobjv) {
    return This->lpVtbl->GetOleObject(This,ppobjv);
}
FORCEINLINE HRESULT IBrowserService3_GetTravelLog(IBrowserService3* This,ITravelLog **pptl) {
    return This->lpVtbl->GetTravelLog(This,pptl);
}
FORCEINLINE HRESULT IBrowserService3_ShowControlWindow(IBrowserService3* This,UINT id,BOOL fShow) {
    return This->lpVtbl->ShowControlWindow(This,id,fShow);
}
FORCEINLINE HRESULT IBrowserService3_IsControlWindowShown(IBrowserService3* This,UINT id,BOOL *pfShown) {
    return This->lpVtbl->IsControlWindowShown(This,id,pfShown);
}
FORCEINLINE HRESULT IBrowserService3_IEGetDisplayName(IBrowserService3* This,PCIDLIST_ABSOLUTE pidl,LPWSTR pwszName,UINT uFlags) {
    return This->lpVtbl->IEGetDisplayName(This,pidl,pwszName,uFlags);
}
FORCEINLINE HRESULT IBrowserService3_IEParseDisplayName(IBrowserService3* This,UINT uiCP,LPCWSTR pwszPath,PIDLIST_ABSOLUTE *ppidlOut) {
    return This->lpVtbl->IEParseDisplayName(This,uiCP,pwszPath,ppidlOut);
}
FORCEINLINE HRESULT IBrowserService3_DisplayParseError(IBrowserService3* This,HRESULT hres,LPCWSTR pwszPath) {
    return This->lpVtbl->DisplayParseError(This,hres,pwszPath);
}
FORCEINLINE HRESULT IBrowserService3_NavigateToPidl(IBrowserService3* This,PCIDLIST_ABSOLUTE pidl,DWORD grfHLNF) {
    return This->lpVtbl->NavigateToPidl(This,pidl,grfHLNF);
}
FORCEINLINE HRESULT IBrowserService3_SetNavigateState(IBrowserService3* This,BNSTATE bnstate) {
    return This->lpVtbl->SetNavigateState(This,bnstate);
}
FORCEINLINE HRESULT IBrowserService3_GetNavigateState(IBrowserService3* This,BNSTATE *pbnstate) {
    return This->lpVtbl->GetNavigateState(This,pbnstate);
}
FORCEINLINE HRESULT IBrowserService3_NotifyRedirect(IBrowserService3* This,IShellView *psv,PCIDLIST_ABSOLUTE pidl,BOOL *pfDidBrowse) {
    return This->lpVtbl->NotifyRedirect(This,psv,pidl,pfDidBrowse);
}
FORCEINLINE HRESULT IBrowserService3_UpdateWindowList(IBrowserService3* This) {
    return This->lpVtbl->UpdateWindowList(This);
}
FORCEINLINE HRESULT IBrowserService3_UpdateBackForwardState(IBrowserService3* This) {
    return This->lpVtbl->UpdateBackForwardState(This);
}
FORCEINLINE HRESULT IBrowserService3_SetFlags(IBrowserService3* This,DWORD dwFlags,DWORD dwFlagMask) {
    return This->lpVtbl->SetFlags(This,dwFlags,dwFlagMask);
}
FORCEINLINE HRESULT IBrowserService3_GetFlags(IBrowserService3* This,DWORD *pdwFlags) {
    return This->lpVtbl->GetFlags(This,pdwFlags);
}
FORCEINLINE HRESULT IBrowserService3_CanNavigateNow(IBrowserService3* This) {
    return This->lpVtbl->CanNavigateNow(This);
}
FORCEINLINE HRESULT IBrowserService3_GetPidl(IBrowserService3* This,PIDLIST_ABSOLUTE *ppidl) {
    return This->lpVtbl->GetPidl(This,ppidl);
}
FORCEINLINE HRESULT IBrowserService3_SetReferrer(IBrowserService3* This,PCIDLIST_ABSOLUTE pidl) {
    return This->lpVtbl->SetReferrer(This,pidl);
}
FORCEINLINE DWORD IBrowserService3_GetBrowserIndex(IBrowserService3* This) {
    return This->lpVtbl->GetBrowserIndex(This);
}
FORCEINLINE HRESULT IBrowserService3_GetBrowserByIndex(IBrowserService3* This,DWORD dwID,IUnknown **ppunk) {
    return This->lpVtbl->GetBrowserByIndex(This,dwID,ppunk);
}
FORCEINLINE HRESULT IBrowserService3_GetHistoryObject(IBrowserService3* This,IOleObject **ppole,IStream **pstm,IBindCtx **ppbc) {
    return This->lpVtbl->GetHistoryObject(This,ppole,pstm,ppbc);
}
FORCEINLINE HRESULT IBrowserService3_SetHistoryObject(IBrowserService3* This,IOleObject *pole,BOOL fIsLocalAnchor) {
    return This->lpVtbl->SetHistoryObject(This,pole,fIsLocalAnchor);
}
FORCEINLINE HRESULT IBrowserService3_CacheOLEServer(IBrowserService3* This,IOleObject *pole) {
    return This->lpVtbl->CacheOLEServer(This,pole);
}
FORCEINLINE HRESULT IBrowserService3_GetSetCodePage(IBrowserService3* This,VARIANT *pvarIn,VARIANT *pvarOut) {
    return This->lpVtbl->GetSetCodePage(This,pvarIn,pvarOut);
}
FORCEINLINE HRESULT IBrowserService3_OnHttpEquiv(IBrowserService3* This,IShellView *psv,BOOL fDone,VARIANT *pvarargIn,VARIANT *pvarargOut) {
    return This->lpVtbl->OnHttpEquiv(This,psv,fDone,pvarargIn,pvarargOut);
}
FORCEINLINE HRESULT IBrowserService3_GetPalette(IBrowserService3* This,HPALETTE *hpal) {
    return This->lpVtbl->GetPalette(This,hpal);
}
FORCEINLINE HRESULT IBrowserService3_RegisterWindow(IBrowserService3* This,BOOL fForceRegister,int swc) {
    return This->lpVtbl->RegisterWindow(This,fForceRegister,swc);
}
/*** IBrowserService2 methods ***/
FORCEINLINE LRESULT IBrowserService3_WndProcBS(IBrowserService3* This,HWND hwnd,UINT uMsg,WPARAM wParam,LPARAM lParam) {
    return This->lpVtbl->WndProcBS(This,hwnd,uMsg,wParam,lParam);
}
FORCEINLINE HRESULT IBrowserService3_SetAsDefFolderSettings(IBrowserService3* This) {
    return This->lpVtbl->SetAsDefFolderSettings(This);
}
FORCEINLINE HRESULT IBrowserService3_GetViewRect(IBrowserService3* This,RECT *prc) {
    return This->lpVtbl->GetViewRect(This,prc);
}
FORCEINLINE HRESULT IBrowserService3_OnSize(IBrowserService3* This,WPARAM wParam) {
    return This->lpVtbl->OnSize(This,wParam);
}
FORCEINLINE HRESULT IBrowserService3_OnCreate(IBrowserService3* This,struct tagCREATESTRUCTW *pcs) {
    return This->lpVtbl->OnCreate(This,pcs);
}
FORCEINLINE LRESULT IBrowserService3_OnCommand(IBrowserService3* This,WPARAM wParam,LPARAM lParam) {
    return This->lpVtbl->OnCommand(This,wParam,lParam);
}
FORCEINLINE HRESULT IBrowserService3_OnDestroy(IBrowserService3* This) {
    return This->lpVtbl->OnDestroy(This);
}
FORCEINLINE LRESULT IBrowserService3_OnNotify(IBrowserService3* This,struct tagNMHDR *pnm) {
    return This->lpVtbl->OnNotify(This,pnm);
}
FORCEINLINE HRESULT IBrowserService3_OnSetFocus(IBrowserService3* This) {
    return This->lpVtbl->OnSetFocus(This);
}
FORCEINLINE HRESULT IBrowserService3_OnFrameWindowActivateBS(IBrowserService3* This,BOOL fActive) {
    return This->lpVtbl->OnFrameWindowActivateBS(This,fActive);
}
FORCEINLINE HRESULT IBrowserService3_ReleaseShellView(IBrowserService3* This) {
    return This->lpVtbl->ReleaseShellView(This);
}
FORCEINLINE HRESULT IBrowserService3_ActivatePendingView(IBrowserService3* This) {
    return This->lpVtbl->ActivatePendingView(This);
}
FORCEINLINE HRESULT IBrowserService3_CreateViewWindow(IBrowserService3* This,IShellView *psvNew,IShellView *psvOld,LPRECT prcView,HWND *phwnd) {
    return This->lpVtbl->CreateViewWindow(This,psvNew,psvOld,prcView,phwnd);
}
FORCEINLINE HRESULT IBrowserService3_CreateBrowserPropSheetExt(IBrowserService3* This,REFIID riid,void **ppv) {
    return This->lpVtbl->CreateBrowserPropSheetExt(This,riid,ppv);
}
FORCEINLINE HRESULT IBrowserService3_GetViewWindow(IBrowserService3* This,HWND *phwndView) {
    return This->lpVtbl->GetViewWindow(This,phwndView);
}
FORCEINLINE HRESULT IBrowserService3_GetBaseBrowserData(IBrowserService3* This,LPCBASEBROWSERDATA *pbbd) {
    return This->lpVtbl->GetBaseBrowserData(This,pbbd);
}
FORCEINLINE LPBASEBROWSERDATA IBrowserService3_PutBaseBrowserData(IBrowserService3* This) {
    return This->lpVtbl->PutBaseBrowserData(This);
}
FORCEINLINE HRESULT IBrowserService3_InitializeTravelLog(IBrowserService3* This,ITravelLog *ptl,DWORD dw) {
    return This->lpVtbl->InitializeTravelLog(This,ptl,dw);
}
FORCEINLINE HRESULT IBrowserService3_SetTopBrowser(IBrowserService3* This) {
    return This->lpVtbl->SetTopBrowser(This);
}
FORCEINLINE HRESULT IBrowserService3_Offline(IBrowserService3* This,int iCmd) {
    return This->lpVtbl->Offline(This,iCmd);
}
FORCEINLINE HRESULT IBrowserService3_AllowViewResize(IBrowserService3* This,BOOL f) {
    return This->lpVtbl->AllowViewResize(This,f);
}
FORCEINLINE HRESULT IBrowserService3_SetActivateState(IBrowserService3* This,UINT u) {
    return This->lpVtbl->SetActivateState(This,u);
}
FORCEINLINE HRESULT IBrowserService3_UpdateSecureLockIcon(IBrowserService3* This,int eSecureLock) {
    return This->lpVtbl->UpdateSecureLockIcon(This,eSecureLock);
}
FORCEINLINE HRESULT IBrowserService3_InitializeDownloadManager(IBrowserService3* This) {
    return This->lpVtbl->InitializeDownloadManager(This);
}
FORCEINLINE HRESULT IBrowserService3_InitializeTransitionSite(IBrowserService3* This) {
    return This->lpVtbl->InitializeTransitionSite(This);
}
FORCEINLINE HRESULT IBrowserService3__Initialize(IBrowserService3* This,HWND hwnd,IUnknown *pauto) {
    return This->lpVtbl->_Initialize(This,hwnd,pauto);
}
FORCEINLINE HRESULT IBrowserService3__CancelPendingNavigationAsync(IBrowserService3* This) {
    return This->lpVtbl->_CancelPendingNavigationAsync(This);
}
FORCEINLINE HRESULT IBrowserService3__CancelPendingView(IBrowserService3* This) {
    return This->lpVtbl->_CancelPendingView(This);
}
FORCEINLINE HRESULT IBrowserService3__MaySaveChanges(IBrowserService3* This) {
    return This->lpVtbl->_MaySaveChanges(This);
}
FORCEINLINE HRESULT IBrowserService3__PauseOrResumeView(IBrowserService3* This,BOOL fPaused) {
    return This->lpVtbl->_PauseOrResumeView(This,fPaused);
}
FORCEINLINE HRESULT IBrowserService3__DisableModeless(IBrowserService3* This) {
    return This->lpVtbl->_DisableModeless(This);
}
FORCEINLINE HRESULT IBrowserService3__NavigateToPidl(IBrowserService3* This,LPCITEMIDLIST pidl,DWORD grfHLNF,DWORD dwFlags) {
    return This->lpVtbl->_NavigateToPidl(This,pidl,grfHLNF,dwFlags);
}
FORCEINLINE HRESULT IBrowserService3__TryShell2Rename(IBrowserService3* This,IShellView *psv,LPCITEMIDLIST pidlNew) {
    return This->lpVtbl->_TryShell2Rename(This,psv,pidlNew);
}
FORCEINLINE HRESULT IBrowserService3__SwitchActivationNow(IBrowserService3* This) {
    return This->lpVtbl->_SwitchActivationNow(This);
}
FORCEINLINE HRESULT IBrowserService3__ExecChildren(IBrowserService3* This,IUnknown *punkBar,BOOL fBroadcast,const GUID *pguidCmdGroup,DWORD nCmdID,DWORD nCmdexecopt,VARIANTARG *pvarargIn,VARIANTARG *pvarargOut) {
    return This->lpVtbl->_ExecChildren(This,punkBar,fBroadcast,pguidCmdGroup,nCmdID,nCmdexecopt,pvarargIn,pvarargOut);
}
FORCEINLINE HRESULT IBrowserService3__SendChildren(IBrowserService3* This,HWND hwndBar,BOOL fBroadcast,UINT uMsg,WPARAM wParam,LPARAM lParam) {
    return This->lpVtbl->_SendChildren(This,hwndBar,fBroadcast,uMsg,wParam,lParam);
}
FORCEINLINE HRESULT IBrowserService3_GetFolderSetData(IBrowserService3* This,struct tagFolderSetData *pfsd) {
    return This->lpVtbl->GetFolderSetData(This,pfsd);
}
FORCEINLINE HRESULT IBrowserService3__OnFocusChange(IBrowserService3* This,UINT itb) {
    return This->lpVtbl->_OnFocusChange(This,itb);
}
FORCEINLINE HRESULT IBrowserService3_v_ShowHideChildWindows(IBrowserService3* This,BOOL fChildOnly) {
    return This->lpVtbl->v_ShowHideChildWindows(This,fChildOnly);
}
FORCEINLINE UINT IBrowserService3__get_itbLastFocus(IBrowserService3* This) {
    return This->lpVtbl->_get_itbLastFocus(This);
}
FORCEINLINE HRESULT IBrowserService3__put_itbLastFocus(IBrowserService3* This,UINT itbLastFocus) {
    return This->lpVtbl->_put_itbLastFocus(This,itbLastFocus);
}
FORCEINLINE HRESULT IBrowserService3__UIActivateView(IBrowserService3* This,UINT uState) {
    return This->lpVtbl->_UIActivateView(This,uState);
}
FORCEINLINE HRESULT IBrowserService3__GetViewBorderRect(IBrowserService3* This,RECT *prc) {
    return This->lpVtbl->_GetViewBorderRect(This,prc);
}
FORCEINLINE HRESULT IBrowserService3__UpdateViewRectSize(IBrowserService3* This) {
    return This->lpVtbl->_UpdateViewRectSize(This);
}
FORCEINLINE HRESULT IBrowserService3__ResizeNextBorder(IBrowserService3* This,UINT itb) {
    return This->lpVtbl->_ResizeNextBorder(This,itb);
}
FORCEINLINE HRESULT IBrowserService3__ResizeView(IBrowserService3* This) {
    return This->lpVtbl->_ResizeView(This);
}
FORCEINLINE HRESULT IBrowserService3__GetEffectiveClientArea(IBrowserService3* This,LPRECT lprectBorder,HMONITOR hmon) {
    return This->lpVtbl->_GetEffectiveClientArea(This,lprectBorder,hmon);
}
FORCEINLINE IStream * IBrowserService3_v_GetViewStream(IBrowserService3* This,LPCITEMIDLIST pidl,DWORD grfMode,LPCWSTR pwszName) {
    return This->lpVtbl->v_GetViewStream(This,pidl,grfMode,pwszName);
}
FORCEINLINE LRESULT IBrowserService3_ForwardViewMsg(IBrowserService3* This,UINT uMsg,WPARAM wParam,LPARAM lParam) {
    return This->lpVtbl->ForwardViewMsg(This,uMsg,wParam,lParam);
}
FORCEINLINE HRESULT IBrowserService3_SetAcceleratorMenu(IBrowserService3* This,HACCEL hacc) {
    return This->lpVtbl->SetAcceleratorMenu(This,hacc);
}
FORCEINLINE int IBrowserService3__GetToolbarCount(IBrowserService3* This) {
    return This->lpVtbl->_GetToolbarCount(This);
}
FORCEINLINE LPTOOLBARITEM IBrowserService3__GetToolbarItem(IBrowserService3* This,int itb) {
    return This->lpVtbl->_GetToolbarItem(This,itb);
}
FORCEINLINE HRESULT IBrowserService3__SaveToolbars(IBrowserService3* This,IStream *pstm) {
    return This->lpVtbl->_SaveToolbars(This,pstm);
}
FORCEINLINE HRESULT IBrowserService3__LoadToolbars(IBrowserService3* This,IStream *pstm) {
    return This->lpVtbl->_LoadToolbars(This,pstm);
}
FORCEINLINE HRESULT IBrowserService3__CloseAndReleaseToolbars(IBrowserService3* This,BOOL fClose) {
    return This->lpVtbl->_CloseAndReleaseToolbars(This,fClose);
}
FORCEINLINE HRESULT IBrowserService3_v_MayGetNextToolbarFocus(IBrowserService3* This,LPMSG lpMsg,UINT itbNext,int citb,LPTOOLBARITEM *pptbi,HWND *phwnd) {
    return This->lpVtbl->v_MayGetNextToolbarFocus(This,lpMsg,itbNext,citb,pptbi,phwnd);
}
FORCEINLINE HRESULT IBrowserService3__ResizeNextBorderHelper(IBrowserService3* This,UINT itb,BOOL bUseHmonitor) {
    return This->lpVtbl->_ResizeNextBorderHelper(This,itb,bUseHmonitor);
}
FORCEINLINE UINT IBrowserService3__FindTBar(IBrowserService3* This,IUnknown *punkSrc) {
    return This->lpVtbl->_FindTBar(This,punkSrc);
}
FORCEINLINE HRESULT IBrowserService3__SetFocus(IBrowserService3* This,LPTOOLBARITEM ptbi,HWND hwnd,LPMSG lpMsg) {
    return This->lpVtbl->_SetFocus(This,ptbi,hwnd,lpMsg);
}
FORCEINLINE HRESULT IBrowserService3_v_MayTranslateAccelerator(IBrowserService3* This,MSG *pmsg) {
    return This->lpVtbl->v_MayTranslateAccelerator(This,pmsg);
}
FORCEINLINE HRESULT IBrowserService3__GetBorderDWHelper(IBrowserService3* This,IUnknown *punkSrc,LPRECT lprectBorder,BOOL bUseHmonitor) {
    return This->lpVtbl->_GetBorderDWHelper(This,punkSrc,lprectBorder,bUseHmonitor);
}
FORCEINLINE HRESULT IBrowserService3_v_CheckZoneCrossing(IBrowserService3* This,LPCITEMIDLIST pidl) {
    return This->lpVtbl->v_CheckZoneCrossing(This,pidl);
}
/*** IBrowserService3 methods ***/
FORCEINLINE HRESULT IBrowserService3__PositionViewWindow(IBrowserService3* This,HWND hwnd,LPRECT prc) {
    return This->lpVtbl->_PositionViewWindow(This,hwnd,prc);
}
FORCEINLINE HRESULT IBrowserService3_IEParseDisplayNameEx(IBrowserService3* This,UINT uiCP,LPCWSTR pwszPath,DWORD dwFlags,LPITEMIDLIST *ppidlOut) {
    return This->lpVtbl->IEParseDisplayNameEx(This,uiCP,pwszPath,dwFlags,ppidlOut);
}
#endif
#endif

#endif

HRESULT STDMETHODCALLTYPE IBrowserService3__PositionViewWindow_Proxy(
    IBrowserService3* This,
    HWND hwnd,
    LPRECT prc);
void __RPC_STUB IBrowserService3__PositionViewWindow_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService3_IEParseDisplayNameEx_Proxy(
    IBrowserService3* This,
    UINT uiCP,
    LPCWSTR pwszPath,
    DWORD dwFlags,
    LPITEMIDLIST *ppidlOut);
void __RPC_STUB IBrowserService3_IEParseDisplayNameEx_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);

#endif  /* __IBrowserService3_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IBrowserService4 interface
 */
#ifndef __IBrowserService4_INTERFACE_DEFINED__
#define __IBrowserService4_INTERFACE_DEFINED__

DEFINE_GUID(IID_IBrowserService4, 0x639f1bff, 0xe135, 0x4096, 0xab,0xd8, 0xe0,0xf5,0x04,0xd6,0x49,0xa4);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("639f1bff-e135-4096-abd8-e0f504d649a4")
IBrowserService4 : public IBrowserService3
{
    virtual HRESULT STDMETHODCALLTYPE ActivateView(
        BOOL fPendingView) = 0;

    virtual HRESULT STDMETHODCALLTYPE SaveViewState(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE _ResizeAllBorders(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IBrowserService4, 0x639f1bff, 0xe135, 0x4096, 0xab,0xd8, 0xe0,0xf5,0x04,0xd6,0x49,0xa4)
#endif
#else
typedef struct IBrowserService4Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IBrowserService4 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IBrowserService4 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IBrowserService4 *This);

    /*** IBrowserService methods ***/
    HRESULT (STDMETHODCALLTYPE *GetParentSite)(
        IBrowserService4 *This,
        IOleInPlaceSite **ppipsite);

    HRESULT (STDMETHODCALLTYPE *SetTitle)(
        IBrowserService4 *This,
        IShellView *psv,
        LPCWSTR pszName);

    HRESULT (STDMETHODCALLTYPE *GetTitle)(
        IBrowserService4 *This,
        IShellView *psv,
        LPWSTR pszName,
        DWORD cchName);

    HRESULT (STDMETHODCALLTYPE *GetOleObject)(
        IBrowserService4 *This,
        IOleObject **ppobjv);

    HRESULT (STDMETHODCALLTYPE *GetTravelLog)(
        IBrowserService4 *This,
        ITravelLog **pptl);

    HRESULT (STDMETHODCALLTYPE *ShowControlWindow)(
        IBrowserService4 *This,
        UINT id,
        BOOL fShow);

    HRESULT (STDMETHODCALLTYPE *IsControlWindowShown)(
        IBrowserService4 *This,
        UINT id,
        BOOL *pfShown);

    HRESULT (STDMETHODCALLTYPE *IEGetDisplayName)(
        IBrowserService4 *This,
        PCIDLIST_ABSOLUTE pidl,
        LPWSTR pwszName,
        UINT uFlags);

    HRESULT (STDMETHODCALLTYPE *IEParseDisplayName)(
        IBrowserService4 *This,
        UINT uiCP,
        LPCWSTR pwszPath,
        PIDLIST_ABSOLUTE *ppidlOut);

    HRESULT (STDMETHODCALLTYPE *DisplayParseError)(
        IBrowserService4 *This,
        HRESULT hres,
        LPCWSTR pwszPath);

    HRESULT (STDMETHODCALLTYPE *NavigateToPidl)(
        IBrowserService4 *This,
        PCIDLIST_ABSOLUTE pidl,
        DWORD grfHLNF);

    HRESULT (STDMETHODCALLTYPE *SetNavigateState)(
        IBrowserService4 *This,
        BNSTATE bnstate);

    HRESULT (STDMETHODCALLTYPE *GetNavigateState)(
        IBrowserService4 *This,
        BNSTATE *pbnstate);

    HRESULT (STDMETHODCALLTYPE *NotifyRedirect)(
        IBrowserService4 *This,
        IShellView *psv,
        PCIDLIST_ABSOLUTE pidl,
        BOOL *pfDidBrowse);

    HRESULT (STDMETHODCALLTYPE *UpdateWindowList)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *UpdateBackForwardState)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *SetFlags)(
        IBrowserService4 *This,
        DWORD dwFlags,
        DWORD dwFlagMask);

    HRESULT (STDMETHODCALLTYPE *GetFlags)(
        IBrowserService4 *This,
        DWORD *pdwFlags);

    HRESULT (STDMETHODCALLTYPE *CanNavigateNow)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *GetPidl)(
        IBrowserService4 *This,
        PIDLIST_ABSOLUTE *ppidl);

    HRESULT (STDMETHODCALLTYPE *SetReferrer)(
        IBrowserService4 *This,
        PCIDLIST_ABSOLUTE pidl);

    DWORD (STDMETHODCALLTYPE *GetBrowserIndex)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *GetBrowserByIndex)(
        IBrowserService4 *This,
        DWORD dwID,
        IUnknown **ppunk);

    HRESULT (STDMETHODCALLTYPE *GetHistoryObject)(
        IBrowserService4 *This,
        IOleObject **ppole,
        IStream **pstm,
        IBindCtx **ppbc);

    HRESULT (STDMETHODCALLTYPE *SetHistoryObject)(
        IBrowserService4 *This,
        IOleObject *pole,
        BOOL fIsLocalAnchor);

    HRESULT (STDMETHODCALLTYPE *CacheOLEServer)(
        IBrowserService4 *This,
        IOleObject *pole);

    HRESULT (STDMETHODCALLTYPE *GetSetCodePage)(
        IBrowserService4 *This,
        VARIANT *pvarIn,
        VARIANT *pvarOut);

    HRESULT (STDMETHODCALLTYPE *OnHttpEquiv)(
        IBrowserService4 *This,
        IShellView *psv,
        BOOL fDone,
        VARIANT *pvarargIn,
        VARIANT *pvarargOut);

    HRESULT (STDMETHODCALLTYPE *GetPalette)(
        IBrowserService4 *This,
        HPALETTE *hpal);

    HRESULT (STDMETHODCALLTYPE *RegisterWindow)(
        IBrowserService4 *This,
        BOOL fForceRegister,
        int swc);

    /*** IBrowserService2 methods ***/
    LRESULT (STDMETHODCALLTYPE *WndProcBS)(
        IBrowserService4 *This,
        HWND hwnd,
        UINT uMsg,
        WPARAM wParam,
        LPARAM lParam);

    HRESULT (STDMETHODCALLTYPE *SetAsDefFolderSettings)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *GetViewRect)(
        IBrowserService4 *This,
        RECT *prc);

    HRESULT (STDMETHODCALLTYPE *OnSize)(
        IBrowserService4 *This,
        WPARAM wParam);

    HRESULT (STDMETHODCALLTYPE *OnCreate)(
        IBrowserService4 *This,
        struct tagCREATESTRUCTW *pcs);

    LRESULT (STDMETHODCALLTYPE *OnCommand)(
        IBrowserService4 *This,
        WPARAM wParam,
        LPARAM lParam);

    HRESULT (STDMETHODCALLTYPE *OnDestroy)(
        IBrowserService4 *This);

    LRESULT (STDMETHODCALLTYPE *OnNotify)(
        IBrowserService4 *This,
        struct tagNMHDR *pnm);

    HRESULT (STDMETHODCALLTYPE *OnSetFocus)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *OnFrameWindowActivateBS)(
        IBrowserService4 *This,
        BOOL fActive);

    HRESULT (STDMETHODCALLTYPE *ReleaseShellView)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *ActivatePendingView)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *CreateViewWindow)(
        IBrowserService4 *This,
        IShellView *psvNew,
        IShellView *psvOld,
        LPRECT prcView,
        HWND *phwnd);

    HRESULT (STDMETHODCALLTYPE *CreateBrowserPropSheetExt)(
        IBrowserService4 *This,
        REFIID riid,
        void **ppv);

    HRESULT (STDMETHODCALLTYPE *GetViewWindow)(
        IBrowserService4 *This,
        HWND *phwndView);

    HRESULT (STDMETHODCALLTYPE *GetBaseBrowserData)(
        IBrowserService4 *This,
        LPCBASEBROWSERDATA *pbbd);

    LPBASEBROWSERDATA (STDMETHODCALLTYPE *PutBaseBrowserData)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *InitializeTravelLog)(
        IBrowserService4 *This,
        ITravelLog *ptl,
        DWORD dw);

    HRESULT (STDMETHODCALLTYPE *SetTopBrowser)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *Offline)(
        IBrowserService4 *This,
        int iCmd);

    HRESULT (STDMETHODCALLTYPE *AllowViewResize)(
        IBrowserService4 *This,
        BOOL f);

    HRESULT (STDMETHODCALLTYPE *SetActivateState)(
        IBrowserService4 *This,
        UINT u);

    HRESULT (STDMETHODCALLTYPE *UpdateSecureLockIcon)(
        IBrowserService4 *This,
        int eSecureLock);

    HRESULT (STDMETHODCALLTYPE *InitializeDownloadManager)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *InitializeTransitionSite)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *_Initialize)(
        IBrowserService4 *This,
        HWND hwnd,
        IUnknown *pauto);

    HRESULT (STDMETHODCALLTYPE *_CancelPendingNavigationAsync)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *_CancelPendingView)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *_MaySaveChanges)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *_PauseOrResumeView)(
        IBrowserService4 *This,
        BOOL fPaused);

    HRESULT (STDMETHODCALLTYPE *_DisableModeless)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *_NavigateToPidl)(
        IBrowserService4 *This,
        LPCITEMIDLIST pidl,
        DWORD grfHLNF,
        DWORD dwFlags);

    HRESULT (STDMETHODCALLTYPE *_TryShell2Rename)(
        IBrowserService4 *This,
        IShellView *psv,
        LPCITEMIDLIST pidlNew);

    HRESULT (STDMETHODCALLTYPE *_SwitchActivationNow)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *_ExecChildren)(
        IBrowserService4 *This,
        IUnknown *punkBar,
        BOOL fBroadcast,
        const GUID *pguidCmdGroup,
        DWORD nCmdID,
        DWORD nCmdexecopt,
        VARIANTARG *pvarargIn,
        VARIANTARG *pvarargOut);

    HRESULT (STDMETHODCALLTYPE *_SendChildren)(
        IBrowserService4 *This,
        HWND hwndBar,
        BOOL fBroadcast,
        UINT uMsg,
        WPARAM wParam,
        LPARAM lParam);

    HRESULT (STDMETHODCALLTYPE *GetFolderSetData)(
        IBrowserService4 *This,
        struct tagFolderSetData *pfsd);

    HRESULT (STDMETHODCALLTYPE *_OnFocusChange)(
        IBrowserService4 *This,
        UINT itb);

    HRESULT (STDMETHODCALLTYPE *v_ShowHideChildWindows)(
        IBrowserService4 *This,
        BOOL fChildOnly);

    UINT (STDMETHODCALLTYPE *_get_itbLastFocus)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *_put_itbLastFocus)(
        IBrowserService4 *This,
        UINT itbLastFocus);

    HRESULT (STDMETHODCALLTYPE *_UIActivateView)(
        IBrowserService4 *This,
        UINT uState);

    HRESULT (STDMETHODCALLTYPE *_GetViewBorderRect)(
        IBrowserService4 *This,
        RECT *prc);

    HRESULT (STDMETHODCALLTYPE *_UpdateViewRectSize)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *_ResizeNextBorder)(
        IBrowserService4 *This,
        UINT itb);

    HRESULT (STDMETHODCALLTYPE *_ResizeView)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *_GetEffectiveClientArea)(
        IBrowserService4 *This,
        LPRECT lprectBorder,
        HMONITOR hmon);

    IStream * (STDMETHODCALLTYPE *v_GetViewStream)(
        IBrowserService4 *This,
        LPCITEMIDLIST pidl,
        DWORD grfMode,
        LPCWSTR pwszName);

    LRESULT (STDMETHODCALLTYPE *ForwardViewMsg)(
        IBrowserService4 *This,
        UINT uMsg,
        WPARAM wParam,
        LPARAM lParam);

    HRESULT (STDMETHODCALLTYPE *SetAcceleratorMenu)(
        IBrowserService4 *This,
        HACCEL hacc);

    int (STDMETHODCALLTYPE *_GetToolbarCount)(
        IBrowserService4 *This);

    LPTOOLBARITEM (STDMETHODCALLTYPE *_GetToolbarItem)(
        IBrowserService4 *This,
        int itb);

    HRESULT (STDMETHODCALLTYPE *_SaveToolbars)(
        IBrowserService4 *This,
        IStream *pstm);

    HRESULT (STDMETHODCALLTYPE *_LoadToolbars)(
        IBrowserService4 *This,
        IStream *pstm);

    HRESULT (STDMETHODCALLTYPE *_CloseAndReleaseToolbars)(
        IBrowserService4 *This,
        BOOL fClose);

    HRESULT (STDMETHODCALLTYPE *v_MayGetNextToolbarFocus)(
        IBrowserService4 *This,
        LPMSG lpMsg,
        UINT itbNext,
        int citb,
        LPTOOLBARITEM *pptbi,
        HWND *phwnd);

    HRESULT (STDMETHODCALLTYPE *_ResizeNextBorderHelper)(
        IBrowserService4 *This,
        UINT itb,
        BOOL bUseHmonitor);

    UINT (STDMETHODCALLTYPE *_FindTBar)(
        IBrowserService4 *This,
        IUnknown *punkSrc);

    HRESULT (STDMETHODCALLTYPE *_SetFocus)(
        IBrowserService4 *This,
        LPTOOLBARITEM ptbi,
        HWND hwnd,
        LPMSG lpMsg);

    HRESULT (STDMETHODCALLTYPE *v_MayTranslateAccelerator)(
        IBrowserService4 *This,
        MSG *pmsg);

    HRESULT (STDMETHODCALLTYPE *_GetBorderDWHelper)(
        IBrowserService4 *This,
        IUnknown *punkSrc,
        LPRECT lprectBorder,
        BOOL bUseHmonitor);

    HRESULT (STDMETHODCALLTYPE *v_CheckZoneCrossing)(
        IBrowserService4 *This,
        LPCITEMIDLIST pidl);

    /*** IBrowserService3 methods ***/
    HRESULT (STDMETHODCALLTYPE *_PositionViewWindow)(
        IBrowserService4 *This,
        HWND hwnd,
        LPRECT prc);

    HRESULT (STDMETHODCALLTYPE *IEParseDisplayNameEx)(
        IBrowserService4 *This,
        UINT uiCP,
        LPCWSTR pwszPath,
        DWORD dwFlags,
        LPITEMIDLIST *ppidlOut);

    /*** IBrowserService4 methods ***/
    HRESULT (STDMETHODCALLTYPE *ActivateView)(
        IBrowserService4 *This,
        BOOL fPendingView);

    HRESULT (STDMETHODCALLTYPE *SaveViewState)(
        IBrowserService4 *This);

    HRESULT (STDMETHODCALLTYPE *_ResizeAllBorders)(
        IBrowserService4 *This);

    END_INTERFACE
} IBrowserService4Vtbl;

interface IBrowserService4 {
    CONST_VTBL IBrowserService4Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IBrowserService4_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IBrowserService4_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IBrowserService4_Release(This) (This)->lpVtbl->Release(This)
/*** IBrowserService methods ***/
#define IBrowserService4_GetParentSite(This,ppipsite) (This)->lpVtbl->GetParentSite(This,ppipsite)
#define IBrowserService4_SetTitle(This,psv,pszName) (This)->lpVtbl->SetTitle(This,psv,pszName)
#define IBrowserService4_GetTitle(This,psv,pszName,cchName) (This)->lpVtbl->GetTitle(This,psv,pszName,cchName)
#define IBrowserService4_GetOleObject(This,ppobjv) (This)->lpVtbl->GetOleObject(This,ppobjv)
#define IBrowserService4_GetTravelLog(This,pptl) (This)->lpVtbl->GetTravelLog(This,pptl)
#define IBrowserService4_ShowControlWindow(This,id,fShow) (This)->lpVtbl->ShowControlWindow(This,id,fShow)
#define IBrowserService4_IsControlWindowShown(This,id,pfShown) (This)->lpVtbl->IsControlWindowShown(This,id,pfShown)
#define IBrowserService4_IEGetDisplayName(This,pidl,pwszName,uFlags) (This)->lpVtbl->IEGetDisplayName(This,pidl,pwszName,uFlags)
#define IBrowserService4_IEParseDisplayName(This,uiCP,pwszPath,ppidlOut) (This)->lpVtbl->IEParseDisplayName(This,uiCP,pwszPath,ppidlOut)
#define IBrowserService4_DisplayParseError(This,hres,pwszPath) (This)->lpVtbl->DisplayParseError(This,hres,pwszPath)
#define IBrowserService4_NavigateToPidl(This,pidl,grfHLNF) (This)->lpVtbl->NavigateToPidl(This,pidl,grfHLNF)
#define IBrowserService4_SetNavigateState(This,bnstate) (This)->lpVtbl->SetNavigateState(This,bnstate)
#define IBrowserService4_GetNavigateState(This,pbnstate) (This)->lpVtbl->GetNavigateState(This,pbnstate)
#define IBrowserService4_NotifyRedirect(This,psv,pidl,pfDidBrowse) (This)->lpVtbl->NotifyRedirect(This,psv,pidl,pfDidBrowse)
#define IBrowserService4_UpdateWindowList(This) (This)->lpVtbl->UpdateWindowList(This)
#define IBrowserService4_UpdateBackForwardState(This) (This)->lpVtbl->UpdateBackForwardState(This)
#define IBrowserService4_SetFlags(This,dwFlags,dwFlagMask) (This)->lpVtbl->SetFlags(This,dwFlags,dwFlagMask)
#define IBrowserService4_GetFlags(This,pdwFlags) (This)->lpVtbl->GetFlags(This,pdwFlags)
#define IBrowserService4_CanNavigateNow(This) (This)->lpVtbl->CanNavigateNow(This)
#define IBrowserService4_GetPidl(This,ppidl) (This)->lpVtbl->GetPidl(This,ppidl)
#define IBrowserService4_SetReferrer(This,pidl) (This)->lpVtbl->SetReferrer(This,pidl)
#define IBrowserService4_GetBrowserIndex(This) (This)->lpVtbl->GetBrowserIndex(This)
#define IBrowserService4_GetBrowserByIndex(This,dwID,ppunk) (This)->lpVtbl->GetBrowserByIndex(This,dwID,ppunk)
#define IBrowserService4_GetHistoryObject(This,ppole,pstm,ppbc) (This)->lpVtbl->GetHistoryObject(This,ppole,pstm,ppbc)
#define IBrowserService4_SetHistoryObject(This,pole,fIsLocalAnchor) (This)->lpVtbl->SetHistoryObject(This,pole,fIsLocalAnchor)
#define IBrowserService4_CacheOLEServer(This,pole) (This)->lpVtbl->CacheOLEServer(This,pole)
#define IBrowserService4_GetSetCodePage(This,pvarIn,pvarOut) (This)->lpVtbl->GetSetCodePage(This,pvarIn,pvarOut)
#define IBrowserService4_OnHttpEquiv(This,psv,fDone,pvarargIn,pvarargOut) (This)->lpVtbl->OnHttpEquiv(This,psv,fDone,pvarargIn,pvarargOut)
#define IBrowserService4_GetPalette(This,hpal) (This)->lpVtbl->GetPalette(This,hpal)
#define IBrowserService4_RegisterWindow(This,fForceRegister,swc) (This)->lpVtbl->RegisterWindow(This,fForceRegister,swc)
/*** IBrowserService2 methods ***/
#define IBrowserService4_WndProcBS(This,hwnd,uMsg,wParam,lParam) (This)->lpVtbl->WndProcBS(This,hwnd,uMsg,wParam,lParam)
#define IBrowserService4_SetAsDefFolderSettings(This) (This)->lpVtbl->SetAsDefFolderSettings(This)
#define IBrowserService4_GetViewRect(This,prc) (This)->lpVtbl->GetViewRect(This,prc)
#define IBrowserService4_OnSize(This,wParam) (This)->lpVtbl->OnSize(This,wParam)
#define IBrowserService4_OnCreate(This,pcs) (This)->lpVtbl->OnCreate(This,pcs)
#define IBrowserService4_OnCommand(This,wParam,lParam) (This)->lpVtbl->OnCommand(This,wParam,lParam)
#define IBrowserService4_OnDestroy(This) (This)->lpVtbl->OnDestroy(This)
#define IBrowserService4_OnNotify(This,pnm) (This)->lpVtbl->OnNotify(This,pnm)
#define IBrowserService4_OnSetFocus(This) (This)->lpVtbl->OnSetFocus(This)
#define IBrowserService4_OnFrameWindowActivateBS(This,fActive) (This)->lpVtbl->OnFrameWindowActivateBS(This,fActive)
#define IBrowserService4_ReleaseShellView(This) (This)->lpVtbl->ReleaseShellView(This)
#define IBrowserService4_ActivatePendingView(This) (This)->lpVtbl->ActivatePendingView(This)
#define IBrowserService4_CreateViewWindow(This,psvNew,psvOld,prcView,phwnd) (This)->lpVtbl->CreateViewWindow(This,psvNew,psvOld,prcView,phwnd)
#define IBrowserService4_CreateBrowserPropSheetExt(This,riid,ppv) (This)->lpVtbl->CreateBrowserPropSheetExt(This,riid,ppv)
#define IBrowserService4_GetViewWindow(This,phwndView) (This)->lpVtbl->GetViewWindow(This,phwndView)
#define IBrowserService4_GetBaseBrowserData(This,pbbd) (This)->lpVtbl->GetBaseBrowserData(This,pbbd)
#define IBrowserService4_PutBaseBrowserData(This) (This)->lpVtbl->PutBaseBrowserData(This)
#define IBrowserService4_InitializeTravelLog(This,ptl,dw) (This)->lpVtbl->InitializeTravelLog(This,ptl,dw)
#define IBrowserService4_SetTopBrowser(This) (This)->lpVtbl->SetTopBrowser(This)
#define IBrowserService4_Offline(This,iCmd) (This)->lpVtbl->Offline(This,iCmd)
#define IBrowserService4_AllowViewResize(This,f) (This)->lpVtbl->AllowViewResize(This,f)
#define IBrowserService4_SetActivateState(This,u) (This)->lpVtbl->SetActivateState(This,u)
#define IBrowserService4_UpdateSecureLockIcon(This,eSecureLock) (This)->lpVtbl->UpdateSecureLockIcon(This,eSecureLock)
#define IBrowserService4_InitializeDownloadManager(This) (This)->lpVtbl->InitializeDownloadManager(This)
#define IBrowserService4_InitializeTransitionSite(This) (This)->lpVtbl->InitializeTransitionSite(This)
#define IBrowserService4__Initialize(This,hwnd,pauto) (This)->lpVtbl->_Initialize(This,hwnd,pauto)
#define IBrowserService4__CancelPendingNavigationAsync(This) (This)->lpVtbl->_CancelPendingNavigationAsync(This)
#define IBrowserService4__CancelPendingView(This) (This)->lpVtbl->_CancelPendingView(This)
#define IBrowserService4__MaySaveChanges(This) (This)->lpVtbl->_MaySaveChanges(This)
#define IBrowserService4__PauseOrResumeView(This,fPaused) (This)->lpVtbl->_PauseOrResumeView(This,fPaused)
#define IBrowserService4__DisableModeless(This) (This)->lpVtbl->_DisableModeless(This)
#define IBrowserService4__NavigateToPidl(This,pidl,grfHLNF,dwFlags) (This)->lpVtbl->_NavigateToPidl(This,pidl,grfHLNF,dwFlags)
#define IBrowserService4__TryShell2Rename(This,psv,pidlNew) (This)->lpVtbl->_TryShell2Rename(This,psv,pidlNew)
#define IBrowserService4__SwitchActivationNow(This) (This)->lpVtbl->_SwitchActivationNow(This)
#define IBrowserService4__ExecChildren(This,punkBar,fBroadcast,pguidCmdGroup,nCmdID,nCmdexecopt,pvarargIn,pvarargOut) (This)->lpVtbl->_ExecChildren(This,punkBar,fBroadcast,pguidCmdGroup,nCmdID,nCmdexecopt,pvarargIn,pvarargOut)
#define IBrowserService4__SendChildren(This,hwndBar,fBroadcast,uMsg,wParam,lParam) (This)->lpVtbl->_SendChildren(This,hwndBar,fBroadcast,uMsg,wParam,lParam)
#define IBrowserService4_GetFolderSetData(This,pfsd) (This)->lpVtbl->GetFolderSetData(This,pfsd)
#define IBrowserService4__OnFocusChange(This,itb) (This)->lpVtbl->_OnFocusChange(This,itb)
#define IBrowserService4_v_ShowHideChildWindows(This,fChildOnly) (This)->lpVtbl->v_ShowHideChildWindows(This,fChildOnly)
#define IBrowserService4__get_itbLastFocus(This) (This)->lpVtbl->_get_itbLastFocus(This)
#define IBrowserService4__put_itbLastFocus(This,itbLastFocus) (This)->lpVtbl->_put_itbLastFocus(This,itbLastFocus)
#define IBrowserService4__UIActivateView(This,uState) (This)->lpVtbl->_UIActivateView(This,uState)
#define IBrowserService4__GetViewBorderRect(This,prc) (This)->lpVtbl->_GetViewBorderRect(This,prc)
#define IBrowserService4__UpdateViewRectSize(This) (This)->lpVtbl->_UpdateViewRectSize(This)
#define IBrowserService4__ResizeNextBorder(This,itb) (This)->lpVtbl->_ResizeNextBorder(This,itb)
#define IBrowserService4__ResizeView(This) (This)->lpVtbl->_ResizeView(This)
#define IBrowserService4__GetEffectiveClientArea(This,lprectBorder,hmon) (This)->lpVtbl->_GetEffectiveClientArea(This,lprectBorder,hmon)
#define IBrowserService4_v_GetViewStream(This,pidl,grfMode,pwszName) (This)->lpVtbl->v_GetViewStream(This,pidl,grfMode,pwszName)
#define IBrowserService4_ForwardViewMsg(This,uMsg,wParam,lParam) (This)->lpVtbl->ForwardViewMsg(This,uMsg,wParam,lParam)
#define IBrowserService4_SetAcceleratorMenu(This,hacc) (This)->lpVtbl->SetAcceleratorMenu(This,hacc)
#define IBrowserService4__GetToolbarCount(This) (This)->lpVtbl->_GetToolbarCount(This)
#define IBrowserService4__GetToolbarItem(This,itb) (This)->lpVtbl->_GetToolbarItem(This,itb)
#define IBrowserService4__SaveToolbars(This,pstm) (This)->lpVtbl->_SaveToolbars(This,pstm)
#define IBrowserService4__LoadToolbars(This,pstm) (This)->lpVtbl->_LoadToolbars(This,pstm)
#define IBrowserService4__CloseAndReleaseToolbars(This,fClose) (This)->lpVtbl->_CloseAndReleaseToolbars(This,fClose)
#define IBrowserService4_v_MayGetNextToolbarFocus(This,lpMsg,itbNext,citb,pptbi,phwnd) (This)->lpVtbl->v_MayGetNextToolbarFocus(This,lpMsg,itbNext,citb,pptbi,phwnd)
#define IBrowserService4__ResizeNextBorderHelper(This,itb,bUseHmonitor) (This)->lpVtbl->_ResizeNextBorderHelper(This,itb,bUseHmonitor)
#define IBrowserService4__FindTBar(This,punkSrc) (This)->lpVtbl->_FindTBar(This,punkSrc)
#define IBrowserService4__SetFocus(This,ptbi,hwnd,lpMsg) (This)->lpVtbl->_SetFocus(This,ptbi,hwnd,lpMsg)
#define IBrowserService4_v_MayTranslateAccelerator(This,pmsg) (This)->lpVtbl->v_MayTranslateAccelerator(This,pmsg)
#define IBrowserService4__GetBorderDWHelper(This,punkSrc,lprectBorder,bUseHmonitor) (This)->lpVtbl->_GetBorderDWHelper(This,punkSrc,lprectBorder,bUseHmonitor)
#define IBrowserService4_v_CheckZoneCrossing(This,pidl) (This)->lpVtbl->v_CheckZoneCrossing(This,pidl)
/*** IBrowserService3 methods ***/
#define IBrowserService4__PositionViewWindow(This,hwnd,prc) (This)->lpVtbl->_PositionViewWindow(This,hwnd,prc)
#define IBrowserService4_IEParseDisplayNameEx(This,uiCP,pwszPath,dwFlags,ppidlOut) (This)->lpVtbl->IEParseDisplayNameEx(This,uiCP,pwszPath,dwFlags,ppidlOut)
/*** IBrowserService4 methods ***/
#define IBrowserService4_ActivateView(This,fPendingView) (This)->lpVtbl->ActivateView(This,fPendingView)
#define IBrowserService4_SaveViewState(This) (This)->lpVtbl->SaveViewState(This)
#define IBrowserService4__ResizeAllBorders(This) (This)->lpVtbl->_ResizeAllBorders(This)
#else
/*** IUnknown methods ***/
FORCEINLINE HRESULT IBrowserService4_QueryInterface(IBrowserService4* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
FORCEINLINE ULONG IBrowserService4_AddRef(IBrowserService4* This) {
    return This->lpVtbl->AddRef(This);
}
FORCEINLINE ULONG IBrowserService4_Release(IBrowserService4* This) {
    return This->lpVtbl->Release(This);
}
/*** IBrowserService methods ***/
FORCEINLINE HRESULT IBrowserService4_GetParentSite(IBrowserService4* This,IOleInPlaceSite **ppipsite) {
    return This->lpVtbl->GetParentSite(This,ppipsite);
}
FORCEINLINE HRESULT IBrowserService4_SetTitle(IBrowserService4* This,IShellView *psv,LPCWSTR pszName) {
    return This->lpVtbl->SetTitle(This,psv,pszName);
}
FORCEINLINE HRESULT IBrowserService4_GetTitle(IBrowserService4* This,IShellView *psv,LPWSTR pszName,DWORD cchName) {
    return This->lpVtbl->GetTitle(This,psv,pszName,cchName);
}
FORCEINLINE HRESULT IBrowserService4_GetOleObject(IBrowserService4* This,IOleObject **ppobjv) {
    return This->lpVtbl->GetOleObject(This,ppobjv);
}
FORCEINLINE HRESULT IBrowserService4_GetTravelLog(IBrowserService4* This,ITravelLog **pptl) {
    return This->lpVtbl->GetTravelLog(This,pptl);
}
FORCEINLINE HRESULT IBrowserService4_ShowControlWindow(IBrowserService4* This,UINT id,BOOL fShow) {
    return This->lpVtbl->ShowControlWindow(This,id,fShow);
}
FORCEINLINE HRESULT IBrowserService4_IsControlWindowShown(IBrowserService4* This,UINT id,BOOL *pfShown) {
    return This->lpVtbl->IsControlWindowShown(This,id,pfShown);
}
FORCEINLINE HRESULT IBrowserService4_IEGetDisplayName(IBrowserService4* This,PCIDLIST_ABSOLUTE pidl,LPWSTR pwszName,UINT uFlags) {
    return This->lpVtbl->IEGetDisplayName(This,pidl,pwszName,uFlags);
}
FORCEINLINE HRESULT IBrowserService4_IEParseDisplayName(IBrowserService4* This,UINT uiCP,LPCWSTR pwszPath,PIDLIST_ABSOLUTE *ppidlOut) {
    return This->lpVtbl->IEParseDisplayName(This,uiCP,pwszPath,ppidlOut);
}
FORCEINLINE HRESULT IBrowserService4_DisplayParseError(IBrowserService4* This,HRESULT hres,LPCWSTR pwszPath) {
    return This->lpVtbl->DisplayParseError(This,hres,pwszPath);
}
FORCEINLINE HRESULT IBrowserService4_NavigateToPidl(IBrowserService4* This,PCIDLIST_ABSOLUTE pidl,DWORD grfHLNF) {
    return This->lpVtbl->NavigateToPidl(This,pidl,grfHLNF);
}
FORCEINLINE HRESULT IBrowserService4_SetNavigateState(IBrowserService4* This,BNSTATE bnstate) {
    return This->lpVtbl->SetNavigateState(This,bnstate);
}
FORCEINLINE HRESULT IBrowserService4_GetNavigateState(IBrowserService4* This,BNSTATE *pbnstate) {
    return This->lpVtbl->GetNavigateState(This,pbnstate);
}
FORCEINLINE HRESULT IBrowserService4_NotifyRedirect(IBrowserService4* This,IShellView *psv,PCIDLIST_ABSOLUTE pidl,BOOL *pfDidBrowse) {
    return This->lpVtbl->NotifyRedirect(This,psv,pidl,pfDidBrowse);
}
FORCEINLINE HRESULT IBrowserService4_UpdateWindowList(IBrowserService4* This) {
    return This->lpVtbl->UpdateWindowList(This);
}
FORCEINLINE HRESULT IBrowserService4_UpdateBackForwardState(IBrowserService4* This) {
    return This->lpVtbl->UpdateBackForwardState(This);
}
FORCEINLINE HRESULT IBrowserService4_SetFlags(IBrowserService4* This,DWORD dwFlags,DWORD dwFlagMask) {
    return This->lpVtbl->SetFlags(This,dwFlags,dwFlagMask);
}
FORCEINLINE HRESULT IBrowserService4_GetFlags(IBrowserService4* This,DWORD *pdwFlags) {
    return This->lpVtbl->GetFlags(This,pdwFlags);
}
FORCEINLINE HRESULT IBrowserService4_CanNavigateNow(IBrowserService4* This) {
    return This->lpVtbl->CanNavigateNow(This);
}
FORCEINLINE HRESULT IBrowserService4_GetPidl(IBrowserService4* This,PIDLIST_ABSOLUTE *ppidl) {
    return This->lpVtbl->GetPidl(This,ppidl);
}
FORCEINLINE HRESULT IBrowserService4_SetReferrer(IBrowserService4* This,PCIDLIST_ABSOLUTE pidl) {
    return This->lpVtbl->SetReferrer(This,pidl);
}
FORCEINLINE DWORD IBrowserService4_GetBrowserIndex(IBrowserService4* This) {
    return This->lpVtbl->GetBrowserIndex(This);
}
FORCEINLINE HRESULT IBrowserService4_GetBrowserByIndex(IBrowserService4* This,DWORD dwID,IUnknown **ppunk) {
    return This->lpVtbl->GetBrowserByIndex(This,dwID,ppunk);
}
FORCEINLINE HRESULT IBrowserService4_GetHistoryObject(IBrowserService4* This,IOleObject **ppole,IStream **pstm,IBindCtx **ppbc) {
    return This->lpVtbl->GetHistoryObject(This,ppole,pstm,ppbc);
}
FORCEINLINE HRESULT IBrowserService4_SetHistoryObject(IBrowserService4* This,IOleObject *pole,BOOL fIsLocalAnchor) {
    return This->lpVtbl->SetHistoryObject(This,pole,fIsLocalAnchor);
}
FORCEINLINE HRESULT IBrowserService4_CacheOLEServer(IBrowserService4* This,IOleObject *pole) {
    return This->lpVtbl->CacheOLEServer(This,pole);
}
FORCEINLINE HRESULT IBrowserService4_GetSetCodePage(IBrowserService4* This,VARIANT *pvarIn,VARIANT *pvarOut) {
    return This->lpVtbl->GetSetCodePage(This,pvarIn,pvarOut);
}
FORCEINLINE HRESULT IBrowserService4_OnHttpEquiv(IBrowserService4* This,IShellView *psv,BOOL fDone,VARIANT *pvarargIn,VARIANT *pvarargOut) {
    return This->lpVtbl->OnHttpEquiv(This,psv,fDone,pvarargIn,pvarargOut);
}
FORCEINLINE HRESULT IBrowserService4_GetPalette(IBrowserService4* This,HPALETTE *hpal) {
    return This->lpVtbl->GetPalette(This,hpal);
}
FORCEINLINE HRESULT IBrowserService4_RegisterWindow(IBrowserService4* This,BOOL fForceRegister,int swc) {
    return This->lpVtbl->RegisterWindow(This,fForceRegister,swc);
}
/*** IBrowserService2 methods ***/
FORCEINLINE LRESULT IBrowserService4_WndProcBS(IBrowserService4* This,HWND hwnd,UINT uMsg,WPARAM wParam,LPARAM lParam) {
    return This->lpVtbl->WndProcBS(This,hwnd,uMsg,wParam,lParam);
}
FORCEINLINE HRESULT IBrowserService4_SetAsDefFolderSettings(IBrowserService4* This) {
    return This->lpVtbl->SetAsDefFolderSettings(This);
}
FORCEINLINE HRESULT IBrowserService4_GetViewRect(IBrowserService4* This,RECT *prc) {
    return This->lpVtbl->GetViewRect(This,prc);
}
FORCEINLINE HRESULT IBrowserService4_OnSize(IBrowserService4* This,WPARAM wParam) {
    return This->lpVtbl->OnSize(This,wParam);
}
FORCEINLINE HRESULT IBrowserService4_OnCreate(IBrowserService4* This,struct tagCREATESTRUCTW *pcs) {
    return This->lpVtbl->OnCreate(This,pcs);
}
FORCEINLINE LRESULT IBrowserService4_OnCommand(IBrowserService4* This,WPARAM wParam,LPARAM lParam) {
    return This->lpVtbl->OnCommand(This,wParam,lParam);
}
FORCEINLINE HRESULT IBrowserService4_OnDestroy(IBrowserService4* This) {
    return This->lpVtbl->OnDestroy(This);
}
FORCEINLINE LRESULT IBrowserService4_OnNotify(IBrowserService4* This,struct tagNMHDR *pnm) {
    return This->lpVtbl->OnNotify(This,pnm);
}
FORCEINLINE HRESULT IBrowserService4_OnSetFocus(IBrowserService4* This) {
    return This->lpVtbl->OnSetFocus(This);
}
FORCEINLINE HRESULT IBrowserService4_OnFrameWindowActivateBS(IBrowserService4* This,BOOL fActive) {
    return This->lpVtbl->OnFrameWindowActivateBS(This,fActive);
}
FORCEINLINE HRESULT IBrowserService4_ReleaseShellView(IBrowserService4* This) {
    return This->lpVtbl->ReleaseShellView(This);
}
FORCEINLINE HRESULT IBrowserService4_ActivatePendingView(IBrowserService4* This) {
    return This->lpVtbl->ActivatePendingView(This);
}
FORCEINLINE HRESULT IBrowserService4_CreateViewWindow(IBrowserService4* This,IShellView *psvNew,IShellView *psvOld,LPRECT prcView,HWND *phwnd) {
    return This->lpVtbl->CreateViewWindow(This,psvNew,psvOld,prcView,phwnd);
}
FORCEINLINE HRESULT IBrowserService4_CreateBrowserPropSheetExt(IBrowserService4* This,REFIID riid,void **ppv) {
    return This->lpVtbl->CreateBrowserPropSheetExt(This,riid,ppv);
}
FORCEINLINE HRESULT IBrowserService4_GetViewWindow(IBrowserService4* This,HWND *phwndView) {
    return This->lpVtbl->GetViewWindow(This,phwndView);
}
FORCEINLINE HRESULT IBrowserService4_GetBaseBrowserData(IBrowserService4* This,LPCBASEBROWSERDATA *pbbd) {
    return This->lpVtbl->GetBaseBrowserData(This,pbbd);
}
FORCEINLINE LPBASEBROWSERDATA IBrowserService4_PutBaseBrowserData(IBrowserService4* This) {
    return This->lpVtbl->PutBaseBrowserData(This);
}
FORCEINLINE HRESULT IBrowserService4_InitializeTravelLog(IBrowserService4* This,ITravelLog *ptl,DWORD dw) {
    return This->lpVtbl->InitializeTravelLog(This,ptl,dw);
}
FORCEINLINE HRESULT IBrowserService4_SetTopBrowser(IBrowserService4* This) {
    return This->lpVtbl->SetTopBrowser(This);
}
FORCEINLINE HRESULT IBrowserService4_Offline(IBrowserService4* This,int iCmd) {
    return This->lpVtbl->Offline(This,iCmd);
}
FORCEINLINE HRESULT IBrowserService4_AllowViewResize(IBrowserService4* This,BOOL f) {
    return This->lpVtbl->AllowViewResize(This,f);
}
FORCEINLINE HRESULT IBrowserService4_SetActivateState(IBrowserService4* This,UINT u) {
    return This->lpVtbl->SetActivateState(This,u);
}
FORCEINLINE HRESULT IBrowserService4_UpdateSecureLockIcon(IBrowserService4* This,int eSecureLock) {
    return This->lpVtbl->UpdateSecureLockIcon(This,eSecureLock);
}
FORCEINLINE HRESULT IBrowserService4_InitializeDownloadManager(IBrowserService4* This) {
    return This->lpVtbl->InitializeDownloadManager(This);
}
FORCEINLINE HRESULT IBrowserService4_InitializeTransitionSite(IBrowserService4* This) {
    return This->lpVtbl->InitializeTransitionSite(This);
}
FORCEINLINE HRESULT IBrowserService4__Initialize(IBrowserService4* This,HWND hwnd,IUnknown *pauto) {
    return This->lpVtbl->_Initialize(This,hwnd,pauto);
}
FORCEINLINE HRESULT IBrowserService4__CancelPendingNavigationAsync(IBrowserService4* This) {
    return This->lpVtbl->_CancelPendingNavigationAsync(This);
}
FORCEINLINE HRESULT IBrowserService4__CancelPendingView(IBrowserService4* This) {
    return This->lpVtbl->_CancelPendingView(This);
}
FORCEINLINE HRESULT IBrowserService4__MaySaveChanges(IBrowserService4* This) {
    return This->lpVtbl->_MaySaveChanges(This);
}
FORCEINLINE HRESULT IBrowserService4__PauseOrResumeView(IBrowserService4* This,BOOL fPaused) {
    return This->lpVtbl->_PauseOrResumeView(This,fPaused);
}
FORCEINLINE HRESULT IBrowserService4__DisableModeless(IBrowserService4* This) {
    return This->lpVtbl->_DisableModeless(This);
}
FORCEINLINE HRESULT IBrowserService4__NavigateToPidl(IBrowserService4* This,LPCITEMIDLIST pidl,DWORD grfHLNF,DWORD dwFlags) {
    return This->lpVtbl->_NavigateToPidl(This,pidl,grfHLNF,dwFlags);
}
FORCEINLINE HRESULT IBrowserService4__TryShell2Rename(IBrowserService4* This,IShellView *psv,LPCITEMIDLIST pidlNew) {
    return This->lpVtbl->_TryShell2Rename(This,psv,pidlNew);
}
FORCEINLINE HRESULT IBrowserService4__SwitchActivationNow(IBrowserService4* This) {
    return This->lpVtbl->_SwitchActivationNow(This);
}
FORCEINLINE HRESULT IBrowserService4__ExecChildren(IBrowserService4* This,IUnknown *punkBar,BOOL fBroadcast,const GUID *pguidCmdGroup,DWORD nCmdID,DWORD nCmdexecopt,VARIANTARG *pvarargIn,VARIANTARG *pvarargOut) {
    return This->lpVtbl->_ExecChildren(This,punkBar,fBroadcast,pguidCmdGroup,nCmdID,nCmdexecopt,pvarargIn,pvarargOut);
}
FORCEINLINE HRESULT IBrowserService4__SendChildren(IBrowserService4* This,HWND hwndBar,BOOL fBroadcast,UINT uMsg,WPARAM wParam,LPARAM lParam) {
    return This->lpVtbl->_SendChildren(This,hwndBar,fBroadcast,uMsg,wParam,lParam);
}
FORCEINLINE HRESULT IBrowserService4_GetFolderSetData(IBrowserService4* This,struct tagFolderSetData *pfsd) {
    return This->lpVtbl->GetFolderSetData(This,pfsd);
}
FORCEINLINE HRESULT IBrowserService4__OnFocusChange(IBrowserService4* This,UINT itb) {
    return This->lpVtbl->_OnFocusChange(This,itb);
}
FORCEINLINE HRESULT IBrowserService4_v_ShowHideChildWindows(IBrowserService4* This,BOOL fChildOnly) {
    return This->lpVtbl->v_ShowHideChildWindows(This,fChildOnly);
}
FORCEINLINE UINT IBrowserService4__get_itbLastFocus(IBrowserService4* This) {
    return This->lpVtbl->_get_itbLastFocus(This);
}
FORCEINLINE HRESULT IBrowserService4__put_itbLastFocus(IBrowserService4* This,UINT itbLastFocus) {
    return This->lpVtbl->_put_itbLastFocus(This,itbLastFocus);
}
FORCEINLINE HRESULT IBrowserService4__UIActivateView(IBrowserService4* This,UINT uState) {
    return This->lpVtbl->_UIActivateView(This,uState);
}
FORCEINLINE HRESULT IBrowserService4__GetViewBorderRect(IBrowserService4* This,RECT *prc) {
    return This->lpVtbl->_GetViewBorderRect(This,prc);
}
FORCEINLINE HRESULT IBrowserService4__UpdateViewRectSize(IBrowserService4* This) {
    return This->lpVtbl->_UpdateViewRectSize(This);
}
FORCEINLINE HRESULT IBrowserService4__ResizeNextBorder(IBrowserService4* This,UINT itb) {
    return This->lpVtbl->_ResizeNextBorder(This,itb);
}
FORCEINLINE HRESULT IBrowserService4__ResizeView(IBrowserService4* This) {
    return This->lpVtbl->_ResizeView(This);
}
FORCEINLINE HRESULT IBrowserService4__GetEffectiveClientArea(IBrowserService4* This,LPRECT lprectBorder,HMONITOR hmon) {
    return This->lpVtbl->_GetEffectiveClientArea(This,lprectBorder,hmon);
}
FORCEINLINE IStream * IBrowserService4_v_GetViewStream(IBrowserService4* This,LPCITEMIDLIST pidl,DWORD grfMode,LPCWSTR pwszName) {
    return This->lpVtbl->v_GetViewStream(This,pidl,grfMode,pwszName);
}
FORCEINLINE LRESULT IBrowserService4_ForwardViewMsg(IBrowserService4* This,UINT uMsg,WPARAM wParam,LPARAM lParam) {
    return This->lpVtbl->ForwardViewMsg(This,uMsg,wParam,lParam);
}
FORCEINLINE HRESULT IBrowserService4_SetAcceleratorMenu(IBrowserService4* This,HACCEL hacc) {
    return This->lpVtbl->SetAcceleratorMenu(This,hacc);
}
FORCEINLINE int IBrowserService4__GetToolbarCount(IBrowserService4* This) {
    return This->lpVtbl->_GetToolbarCount(This);
}
FORCEINLINE LPTOOLBARITEM IBrowserService4__GetToolbarItem(IBrowserService4* This,int itb) {
    return This->lpVtbl->_GetToolbarItem(This,itb);
}
FORCEINLINE HRESULT IBrowserService4__SaveToolbars(IBrowserService4* This,IStream *pstm) {
    return This->lpVtbl->_SaveToolbars(This,pstm);
}
FORCEINLINE HRESULT IBrowserService4__LoadToolbars(IBrowserService4* This,IStream *pstm) {
    return This->lpVtbl->_LoadToolbars(This,pstm);
}
FORCEINLINE HRESULT IBrowserService4__CloseAndReleaseToolbars(IBrowserService4* This,BOOL fClose) {
    return This->lpVtbl->_CloseAndReleaseToolbars(This,fClose);
}
FORCEINLINE HRESULT IBrowserService4_v_MayGetNextToolbarFocus(IBrowserService4* This,LPMSG lpMsg,UINT itbNext,int citb,LPTOOLBARITEM *pptbi,HWND *phwnd) {
    return This->lpVtbl->v_MayGetNextToolbarFocus(This,lpMsg,itbNext,citb,pptbi,phwnd);
}
FORCEINLINE HRESULT IBrowserService4__ResizeNextBorderHelper(IBrowserService4* This,UINT itb,BOOL bUseHmonitor) {
    return This->lpVtbl->_ResizeNextBorderHelper(This,itb,bUseHmonitor);
}
FORCEINLINE UINT IBrowserService4__FindTBar(IBrowserService4* This,IUnknown *punkSrc) {
    return This->lpVtbl->_FindTBar(This,punkSrc);
}
FORCEINLINE HRESULT IBrowserService4__SetFocus(IBrowserService4* This,LPTOOLBARITEM ptbi,HWND hwnd,LPMSG lpMsg) {
    return This->lpVtbl->_SetFocus(This,ptbi,hwnd,lpMsg);
}
FORCEINLINE HRESULT IBrowserService4_v_MayTranslateAccelerator(IBrowserService4* This,MSG *pmsg) {
    return This->lpVtbl->v_MayTranslateAccelerator(This,pmsg);
}
FORCEINLINE HRESULT IBrowserService4__GetBorderDWHelper(IBrowserService4* This,IUnknown *punkSrc,LPRECT lprectBorder,BOOL bUseHmonitor) {
    return This->lpVtbl->_GetBorderDWHelper(This,punkSrc,lprectBorder,bUseHmonitor);
}
FORCEINLINE HRESULT IBrowserService4_v_CheckZoneCrossing(IBrowserService4* This,LPCITEMIDLIST pidl) {
    return This->lpVtbl->v_CheckZoneCrossing(This,pidl);
}
/*** IBrowserService3 methods ***/
FORCEINLINE HRESULT IBrowserService4__PositionViewWindow(IBrowserService4* This,HWND hwnd,LPRECT prc) {
    return This->lpVtbl->_PositionViewWindow(This,hwnd,prc);
}
FORCEINLINE HRESULT IBrowserService4_IEParseDisplayNameEx(IBrowserService4* This,UINT uiCP,LPCWSTR pwszPath,DWORD dwFlags,LPITEMIDLIST *ppidlOut) {
    return This->lpVtbl->IEParseDisplayNameEx(This,uiCP,pwszPath,dwFlags,ppidlOut);
}
/*** IBrowserService4 methods ***/
FORCEINLINE HRESULT IBrowserService4_ActivateView(IBrowserService4* This,BOOL fPendingView) {
    return This->lpVtbl->ActivateView(This,fPendingView);
}
FORCEINLINE HRESULT IBrowserService4_SaveViewState(IBrowserService4* This) {
    return This->lpVtbl->SaveViewState(This);
}
FORCEINLINE HRESULT IBrowserService4__ResizeAllBorders(IBrowserService4* This) {
    return This->lpVtbl->_ResizeAllBorders(This);
}
#endif
#endif

#endif

HRESULT STDMETHODCALLTYPE IBrowserService4_ActivateView_Proxy(
    IBrowserService4* This,
    BOOL fPendingView);
void __RPC_STUB IBrowserService4_ActivateView_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService4_SaveViewState_Proxy(
    IBrowserService4* This);
void __RPC_STUB IBrowserService4_SaveViewState_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IBrowserService4__ResizeAllBorders_Proxy(
    IBrowserService4* This);
void __RPC_STUB IBrowserService4__ResizeAllBorders_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);

#endif  /* __IBrowserService4_INTERFACE_DEFINED__ */

/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __shdeprecated_h__ */
