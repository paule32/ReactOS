/*** Autogenerated by WIDL <undefined version> from /home/jens/winos/reactos/dll/win32/avifil32/avifil32.idl - Do not edit ***/

#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#ifdef __REACTOS__
#define WIN32_LEAN_AND_MEAN
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __avifil32_p_h__
#define __avifil32_p_h__

/* Forward declarations */

#ifndef __IAVIStream_FWD_DEFINED__
#define __IAVIStream_FWD_DEFINED__
typedef interface IAVIStream IAVIStream;
#ifdef __cplusplus
interface IAVIStream;
#endif /* __cplusplus */
#endif

#ifndef __IAVIFile_FWD_DEFINED__
#define __IAVIFile_FWD_DEFINED__
typedef interface IAVIFile IAVIFile;
#ifdef __cplusplus
interface IAVIFile;
#endif /* __cplusplus */
#endif

#ifndef __PSFactoryBuffer_FWD_DEFINED__
#define __PSFactoryBuffer_FWD_DEFINED__
#ifdef __cplusplus
typedef class PSFactoryBuffer PSFactoryBuffer;
#else
typedef struct PSFactoryBuffer PSFactoryBuffer;
#endif /* defined __cplusplus */
#endif /* defined __PSFactoryBuffer_FWD_DEFINED__ */

#ifndef __AVIFile_FWD_DEFINED__
#define __AVIFile_FWD_DEFINED__
#ifdef __cplusplus
typedef class AVIFile AVIFile;
#else
typedef struct AVIFile AVIFile;
#endif /* defined __cplusplus */
#endif /* defined __AVIFile_FWD_DEFINED__ */

#ifndef __ICMStream_FWD_DEFINED__
#define __ICMStream_FWD_DEFINED__
#ifdef __cplusplus
typedef class ICMStream ICMStream;
#else
typedef struct ICMStream ICMStream;
#endif /* defined __cplusplus */
#endif /* defined __ICMStream_FWD_DEFINED__ */

#ifndef __WAVFile_FWD_DEFINED__
#define __WAVFile_FWD_DEFINED__
#ifdef __cplusplus
typedef class WAVFile WAVFile;
#else
typedef struct WAVFile WAVFile;
#endif /* defined __cplusplus */
#endif /* defined __WAVFile_FWD_DEFINED__ */

#ifndef __ACMStream_FWD_DEFINED__
#define __ACMStream_FWD_DEFINED__
#ifdef __cplusplus
typedef class ACMStream ACMStream;
#else
typedef struct ACMStream ACMStream;
#endif /* defined __cplusplus */
#endif /* defined __ACMStream_FWD_DEFINED__ */

/* Headers for imported files */

#include <wtypes.h>
#include <unknwn.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef struct _AVISTREAMINFOW {
    DWORD fccType;
    DWORD fccHandler;
    DWORD dwFlags;
    DWORD dwCaps;
    WORD wPriority;
    WORD wLanguage;
    DWORD dwScale;
    DWORD dwRate;
    DWORD dwStart;
    DWORD dwLength;
    DWORD dwInitialFrames;
    DWORD dwSuggestedBufferSize;
    DWORD dwQuality;
    DWORD dwSampleSize;
    RECT rcFrame;
    DWORD dwEditCount;
    DWORD dwFormatChangeCount;
    WCHAR szName[64];
} AVISTREAMINFOW;
/*****************************************************************************
 * IAVIStream interface
 */
#ifndef __IAVIStream_INTERFACE_DEFINED__
#define __IAVIStream_INTERFACE_DEFINED__

DEFINE_GUID(IID_IAVIStream, 0x00020021, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("00020021-0000-0000-c000-000000000046")
IAVIStream : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE Create(
        LPARAM lParam1,
        LPARAM lParam2) = 0;

    virtual HRESULT STDMETHODCALLTYPE Info(
        AVISTREAMINFOW *psi,
        LONG lSize) = 0;

    virtual LONG STDMETHODCALLTYPE FindSample(
        LONG lPos,
        LONG lFlags) = 0;

    virtual HRESULT STDMETHODCALLTYPE ReadFormat(
        LONG lPos,
        char *lpFormat,
        LONG *lpcbFormat) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetFormat(
        LONG lPos,
        char *lpFormat,
        LONG cbFormat) = 0;

    virtual HRESULT STDMETHODCALLTYPE Read(
        LONG lStart,
        LONG lSamples,
        char *lpBuffer,
        LONG cbBuffer,
        LONG *plBytes,
        LONG *plSamples) = 0;

    virtual HRESULT STDMETHODCALLTYPE Write(
        LONG lStart,
        LONG lSamples,
        char *lpBuffer,
        LONG cbBuffer,
        DWORD dwFlags,
        LONG *plSampWritten,
        LONG *plBytesWritten) = 0;

    virtual HRESULT STDMETHODCALLTYPE Delete(
        LONG lStart,
        LONG lSamples) = 0;

    virtual HRESULT STDMETHODCALLTYPE ReadData(
        DWORD fcc,
        char *lpBuffer,
        LONG *lpcbBuffer) = 0;

    virtual HRESULT STDMETHODCALLTYPE WriteData(
        DWORD fcc,
        char *lpBuffer,
        LONG cbBuffer) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetInfo(
        AVISTREAMINFOW *plInfo,
        LONG cbInfo) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IAVIStream, 0x00020021, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct IAVIStreamVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IAVIStream *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IAVIStream *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IAVIStream *This);

    /*** IAVIStream methods ***/
    HRESULT (STDMETHODCALLTYPE *Create)(
        IAVIStream *This,
        LPARAM lParam1,
        LPARAM lParam2);

    HRESULT (STDMETHODCALLTYPE *Info)(
        IAVIStream *This,
        AVISTREAMINFOW *psi,
        LONG lSize);

    LONG (STDMETHODCALLTYPE *FindSample)(
        IAVIStream *This,
        LONG lPos,
        LONG lFlags);

    HRESULT (STDMETHODCALLTYPE *ReadFormat)(
        IAVIStream *This,
        LONG lPos,
        char *lpFormat,
        LONG *lpcbFormat);

    HRESULT (STDMETHODCALLTYPE *SetFormat)(
        IAVIStream *This,
        LONG lPos,
        char *lpFormat,
        LONG cbFormat);

    HRESULT (STDMETHODCALLTYPE *Read)(
        IAVIStream *This,
        LONG lStart,
        LONG lSamples,
        char *lpBuffer,
        LONG cbBuffer,
        LONG *plBytes,
        LONG *plSamples);

    HRESULT (STDMETHODCALLTYPE *Write)(
        IAVIStream *This,
        LONG lStart,
        LONG lSamples,
        char *lpBuffer,
        LONG cbBuffer,
        DWORD dwFlags,
        LONG *plSampWritten,
        LONG *plBytesWritten);

    HRESULT (STDMETHODCALLTYPE *Delete)(
        IAVIStream *This,
        LONG lStart,
        LONG lSamples);

    HRESULT (STDMETHODCALLTYPE *ReadData)(
        IAVIStream *This,
        DWORD fcc,
        char *lpBuffer,
        LONG *lpcbBuffer);

    HRESULT (STDMETHODCALLTYPE *WriteData)(
        IAVIStream *This,
        DWORD fcc,
        char *lpBuffer,
        LONG cbBuffer);

    HRESULT (STDMETHODCALLTYPE *SetInfo)(
        IAVIStream *This,
        AVISTREAMINFOW *plInfo,
        LONG cbInfo);

    END_INTERFACE
} IAVIStreamVtbl;

interface IAVIStream {
    CONST_VTBL IAVIStreamVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IAVIStream_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IAVIStream_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IAVIStream_Release(This) (This)->lpVtbl->Release(This)
/*** IAVIStream methods ***/
#define IAVIStream_Create(This,lParam1,lParam2) (This)->lpVtbl->Create(This,lParam1,lParam2)
#define IAVIStream_Info(This,psi,lSize) (This)->lpVtbl->Info(This,psi,lSize)
#define IAVIStream_FindSample(This,lPos,lFlags) (This)->lpVtbl->FindSample(This,lPos,lFlags)
#define IAVIStream_ReadFormat(This,lPos,lpFormat,lpcbFormat) (This)->lpVtbl->ReadFormat(This,lPos,lpFormat,lpcbFormat)
#define IAVIStream_SetFormat(This,lPos,lpFormat,cbFormat) (This)->lpVtbl->SetFormat(This,lPos,lpFormat,cbFormat)
#define IAVIStream_Read(This,lStart,lSamples,lpBuffer,cbBuffer,plBytes,plSamples) (This)->lpVtbl->Read(This,lStart,lSamples,lpBuffer,cbBuffer,plBytes,plSamples)
#define IAVIStream_Write(This,lStart,lSamples,lpBuffer,cbBuffer,dwFlags,plSampWritten,plBytesWritten) (This)->lpVtbl->Write(This,lStart,lSamples,lpBuffer,cbBuffer,dwFlags,plSampWritten,plBytesWritten)
#define IAVIStream_Delete(This,lStart,lSamples) (This)->lpVtbl->Delete(This,lStart,lSamples)
#define IAVIStream_ReadData(This,fcc,lpBuffer,lpcbBuffer) (This)->lpVtbl->ReadData(This,fcc,lpBuffer,lpcbBuffer)
#define IAVIStream_WriteData(This,fcc,lpBuffer,cbBuffer) (This)->lpVtbl->WriteData(This,fcc,lpBuffer,cbBuffer)
#define IAVIStream_SetInfo(This,plInfo,cbInfo) (This)->lpVtbl->SetInfo(This,plInfo,cbInfo)
#else
/*** IUnknown methods ***/
FORCEINLINE HRESULT IAVIStream_QueryInterface(IAVIStream* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
FORCEINLINE ULONG IAVIStream_AddRef(IAVIStream* This) {
    return This->lpVtbl->AddRef(This);
}
FORCEINLINE ULONG IAVIStream_Release(IAVIStream* This) {
    return This->lpVtbl->Release(This);
}
/*** IAVIStream methods ***/
FORCEINLINE HRESULT IAVIStream_Create(IAVIStream* This,LPARAM lParam1,LPARAM lParam2) {
    return This->lpVtbl->Create(This,lParam1,lParam2);
}
FORCEINLINE HRESULT IAVIStream_Info(IAVIStream* This,AVISTREAMINFOW *psi,LONG lSize) {
    return This->lpVtbl->Info(This,psi,lSize);
}
FORCEINLINE LONG IAVIStream_FindSample(IAVIStream* This,LONG lPos,LONG lFlags) {
    return This->lpVtbl->FindSample(This,lPos,lFlags);
}
FORCEINLINE HRESULT IAVIStream_ReadFormat(IAVIStream* This,LONG lPos,char *lpFormat,LONG *lpcbFormat) {
    return This->lpVtbl->ReadFormat(This,lPos,lpFormat,lpcbFormat);
}
FORCEINLINE HRESULT IAVIStream_SetFormat(IAVIStream* This,LONG lPos,char *lpFormat,LONG cbFormat) {
    return This->lpVtbl->SetFormat(This,lPos,lpFormat,cbFormat);
}
FORCEINLINE HRESULT IAVIStream_Read(IAVIStream* This,LONG lStart,LONG lSamples,char *lpBuffer,LONG cbBuffer,LONG *plBytes,LONG *plSamples) {
    return This->lpVtbl->Read(This,lStart,lSamples,lpBuffer,cbBuffer,plBytes,plSamples);
}
FORCEINLINE HRESULT IAVIStream_Write(IAVIStream* This,LONG lStart,LONG lSamples,char *lpBuffer,LONG cbBuffer,DWORD dwFlags,LONG *plSampWritten,LONG *plBytesWritten) {
    return This->lpVtbl->Write(This,lStart,lSamples,lpBuffer,cbBuffer,dwFlags,plSampWritten,plBytesWritten);
}
FORCEINLINE HRESULT IAVIStream_Delete(IAVIStream* This,LONG lStart,LONG lSamples) {
    return This->lpVtbl->Delete(This,lStart,lSamples);
}
FORCEINLINE HRESULT IAVIStream_ReadData(IAVIStream* This,DWORD fcc,char *lpBuffer,LONG *lpcbBuffer) {
    return This->lpVtbl->ReadData(This,fcc,lpBuffer,lpcbBuffer);
}
FORCEINLINE HRESULT IAVIStream_WriteData(IAVIStream* This,DWORD fcc,char *lpBuffer,LONG cbBuffer) {
    return This->lpVtbl->WriteData(This,fcc,lpBuffer,cbBuffer);
}
FORCEINLINE HRESULT IAVIStream_SetInfo(IAVIStream* This,AVISTREAMINFOW *plInfo,LONG cbInfo) {
    return This->lpVtbl->SetInfo(This,plInfo,cbInfo);
}
#endif
#endif

#endif

HRESULT STDMETHODCALLTYPE IAVIStream_Create_Proxy(
    IAVIStream* This,
    LPARAM lParam1,
    LPARAM lParam2);
void __RPC_STUB IAVIStream_Create_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IAVIStream_Info_Proxy(
    IAVIStream* This,
    AVISTREAMINFOW *psi,
    LONG lSize);
void __RPC_STUB IAVIStream_Info_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
LONG STDMETHODCALLTYPE IAVIStream_FindSample_Proxy(
    IAVIStream* This,
    LONG lPos,
    LONG lFlags);
void __RPC_STUB IAVIStream_FindSample_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IAVIStream_ReadFormat_Proxy(
    IAVIStream* This,
    LONG lPos,
    char *lpFormat,
    LONG *lpcbFormat);
void __RPC_STUB IAVIStream_ReadFormat_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IAVIStream_SetFormat_Proxy(
    IAVIStream* This,
    LONG lPos,
    char *lpFormat,
    LONG cbFormat);
void __RPC_STUB IAVIStream_SetFormat_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IAVIStream_Read_Proxy(
    IAVIStream* This,
    LONG lStart,
    LONG lSamples,
    char *lpBuffer,
    LONG cbBuffer,
    LONG *plBytes,
    LONG *plSamples);
void __RPC_STUB IAVIStream_Read_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IAVIStream_Write_Proxy(
    IAVIStream* This,
    LONG lStart,
    LONG lSamples,
    char *lpBuffer,
    LONG cbBuffer,
    DWORD dwFlags,
    LONG *plSampWritten,
    LONG *plBytesWritten);
void __RPC_STUB IAVIStream_Write_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IAVIStream_Delete_Proxy(
    IAVIStream* This,
    LONG lStart,
    LONG lSamples);
void __RPC_STUB IAVIStream_Delete_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IAVIStream_ReadData_Proxy(
    IAVIStream* This,
    DWORD fcc,
    char *lpBuffer,
    LONG *lpcbBuffer);
void __RPC_STUB IAVIStream_ReadData_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IAVIStream_WriteData_Proxy(
    IAVIStream* This,
    DWORD fcc,
    char *lpBuffer,
    LONG cbBuffer);
void __RPC_STUB IAVIStream_WriteData_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IAVIStream_SetInfo_Proxy(
    IAVIStream* This,
    AVISTREAMINFOW *plInfo,
    LONG cbInfo);
void __RPC_STUB IAVIStream_SetInfo_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);

#endif  /* __IAVIStream_INTERFACE_DEFINED__ */

typedef struct _AVIFILEINFOW {
    DWORD dwMaxBytesPerSec;
    DWORD dwFlags;
    DWORD dwCaps;
    DWORD dwStreams;
    DWORD dwSuggestedBufferSize;
    DWORD dwWidth;
    DWORD dwHeight;
    DWORD dwScale;
    DWORD dwRate;
    DWORD dwLength;
    DWORD dwEditCount;
    WCHAR szFileType[64];
} AVIFILEINFOW;
/*****************************************************************************
 * IAVIFile interface
 */
#ifndef __IAVIFile_INTERFACE_DEFINED__
#define __IAVIFile_INTERFACE_DEFINED__

DEFINE_GUID(IID_IAVIFile, 0x00020020, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("00020020-0000-0000-c000-000000000046")
IAVIFile : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE Info(
        AVIFILEINFOW *pfi,
        LONG lSize) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetStream(
        IAVIStream **ppStream,
        DWORD fccType,
        LONG lParam) = 0;

    virtual HRESULT STDMETHODCALLTYPE CreateStream(
        IAVIStream **ppStream,
        AVISTREAMINFOW *psi) = 0;

    virtual HRESULT STDMETHODCALLTYPE WriteData(
        DWORD fcc,
        char *lpBuffer,
        LONG cbBuffer) = 0;

    virtual HRESULT STDMETHODCALLTYPE ReadData(
        DWORD fcc,
        char *lpBuffer,
        LONG *lpcbBuffer) = 0;

    virtual HRESULT STDMETHODCALLTYPE EndRecord(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE DeleteStream(
        DWORD fccType,
        LONG lParam) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IAVIFile, 0x00020020, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#else
typedef struct IAVIFileVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IAVIFile *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IAVIFile *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IAVIFile *This);

    /*** IAVIFile methods ***/
    HRESULT (STDMETHODCALLTYPE *Info)(
        IAVIFile *This,
        AVIFILEINFOW *pfi,
        LONG lSize);

    HRESULT (STDMETHODCALLTYPE *GetStream)(
        IAVIFile *This,
        IAVIStream **ppStream,
        DWORD fccType,
        LONG lParam);

    HRESULT (STDMETHODCALLTYPE *CreateStream)(
        IAVIFile *This,
        IAVIStream **ppStream,
        AVISTREAMINFOW *psi);

    HRESULT (STDMETHODCALLTYPE *WriteData)(
        IAVIFile *This,
        DWORD fcc,
        char *lpBuffer,
        LONG cbBuffer);

    HRESULT (STDMETHODCALLTYPE *ReadData)(
        IAVIFile *This,
        DWORD fcc,
        char *lpBuffer,
        LONG *lpcbBuffer);

    HRESULT (STDMETHODCALLTYPE *EndRecord)(
        IAVIFile *This);

    HRESULT (STDMETHODCALLTYPE *DeleteStream)(
        IAVIFile *This,
        DWORD fccType,
        LONG lParam);

    END_INTERFACE
} IAVIFileVtbl;

interface IAVIFile {
    CONST_VTBL IAVIFileVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IAVIFile_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IAVIFile_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IAVIFile_Release(This) (This)->lpVtbl->Release(This)
/*** IAVIFile methods ***/
#define IAVIFile_Info(This,pfi,lSize) (This)->lpVtbl->Info(This,pfi,lSize)
#define IAVIFile_GetStream(This,ppStream,fccType,lParam) (This)->lpVtbl->GetStream(This,ppStream,fccType,lParam)
#define IAVIFile_CreateStream(This,ppStream,psi) (This)->lpVtbl->CreateStream(This,ppStream,psi)
#define IAVIFile_WriteData(This,fcc,lpBuffer,cbBuffer) (This)->lpVtbl->WriteData(This,fcc,lpBuffer,cbBuffer)
#define IAVIFile_ReadData(This,fcc,lpBuffer,lpcbBuffer) (This)->lpVtbl->ReadData(This,fcc,lpBuffer,lpcbBuffer)
#define IAVIFile_EndRecord(This) (This)->lpVtbl->EndRecord(This)
#define IAVIFile_DeleteStream(This,fccType,lParam) (This)->lpVtbl->DeleteStream(This,fccType,lParam)
#else
/*** IUnknown methods ***/
FORCEINLINE HRESULT IAVIFile_QueryInterface(IAVIFile* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
FORCEINLINE ULONG IAVIFile_AddRef(IAVIFile* This) {
    return This->lpVtbl->AddRef(This);
}
FORCEINLINE ULONG IAVIFile_Release(IAVIFile* This) {
    return This->lpVtbl->Release(This);
}
/*** IAVIFile methods ***/
FORCEINLINE HRESULT IAVIFile_Info(IAVIFile* This,AVIFILEINFOW *pfi,LONG lSize) {
    return This->lpVtbl->Info(This,pfi,lSize);
}
FORCEINLINE HRESULT IAVIFile_GetStream(IAVIFile* This,IAVIStream **ppStream,DWORD fccType,LONG lParam) {
    return This->lpVtbl->GetStream(This,ppStream,fccType,lParam);
}
FORCEINLINE HRESULT IAVIFile_CreateStream(IAVIFile* This,IAVIStream **ppStream,AVISTREAMINFOW *psi) {
    return This->lpVtbl->CreateStream(This,ppStream,psi);
}
FORCEINLINE HRESULT IAVIFile_WriteData(IAVIFile* This,DWORD fcc,char *lpBuffer,LONG cbBuffer) {
    return This->lpVtbl->WriteData(This,fcc,lpBuffer,cbBuffer);
}
FORCEINLINE HRESULT IAVIFile_ReadData(IAVIFile* This,DWORD fcc,char *lpBuffer,LONG *lpcbBuffer) {
    return This->lpVtbl->ReadData(This,fcc,lpBuffer,lpcbBuffer);
}
FORCEINLINE HRESULT IAVIFile_EndRecord(IAVIFile* This) {
    return This->lpVtbl->EndRecord(This);
}
FORCEINLINE HRESULT IAVIFile_DeleteStream(IAVIFile* This,DWORD fccType,LONG lParam) {
    return This->lpVtbl->DeleteStream(This,fccType,lParam);
}
#endif
#endif

#endif

HRESULT STDMETHODCALLTYPE IAVIFile_Info_Proxy(
    IAVIFile* This,
    AVIFILEINFOW *pfi,
    LONG lSize);
void __RPC_STUB IAVIFile_Info_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IAVIFile_GetStream_Proxy(
    IAVIFile* This,
    IAVIStream **ppStream,
    DWORD fccType,
    LONG lParam);
void __RPC_STUB IAVIFile_GetStream_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IAVIFile_CreateStream_Proxy(
    IAVIFile* This,
    IAVIStream **ppStream,
    AVISTREAMINFOW *psi);
void __RPC_STUB IAVIFile_CreateStream_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IAVIFile_WriteData_Proxy(
    IAVIFile* This,
    DWORD fcc,
    char *lpBuffer,
    LONG cbBuffer);
void __RPC_STUB IAVIFile_WriteData_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IAVIFile_ReadData_Proxy(
    IAVIFile* This,
    DWORD fcc,
    char *lpBuffer,
    LONG *lpcbBuffer);
void __RPC_STUB IAVIFile_ReadData_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IAVIFile_EndRecord_Proxy(
    IAVIFile* This);
void __RPC_STUB IAVIFile_EndRecord_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE IAVIFile_DeleteStream_Proxy(
    IAVIFile* This,
    DWORD fccType,
    LONG lParam);
void __RPC_STUB IAVIFile_DeleteStream_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);

#endif  /* __IAVIFile_INTERFACE_DEFINED__ */

/*****************************************************************************
 * PSFactoryBuffer coclass
 */

DEFINE_GUID(CLSID_PSFactoryBuffer, 0x0002000d, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class DECLSPEC_UUID("0002000d-0000-0000-c000-000000000046") PSFactoryBuffer;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(PSFactoryBuffer, 0x0002000d, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#endif

/*****************************************************************************
 * AVIFile coclass
 */

DEFINE_GUID(CLSID_AVIFile, 0x00020000, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class DECLSPEC_UUID("00020000-0000-0000-c000-000000000046") AVIFile;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(AVIFile, 0x00020000, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#endif

/*****************************************************************************
 * ICMStream coclass
 */

DEFINE_GUID(CLSID_ICMStream, 0x00020001, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class DECLSPEC_UUID("00020001-0000-0000-c000-000000000046") ICMStream;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ICMStream, 0x00020001, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#endif

/*****************************************************************************
 * WAVFile coclass
 */

DEFINE_GUID(CLSID_WAVFile, 0x00020003, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class DECLSPEC_UUID("00020003-0000-0000-c000-000000000046") WAVFile;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(WAVFile, 0x00020003, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#endif

/*****************************************************************************
 * ACMStream coclass
 */

DEFINE_GUID(CLSID_ACMStream, 0x0002000f, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class DECLSPEC_UUID("0002000f-0000-0000-c000-000000000046") ACMStream;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ACMStream, 0x0002000f, 0x0000, 0x0000, 0xc0,0x00, 0x00,0x00,0x00,0x00,0x00,0x46)
#endif
#endif

/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __avifil32_p_h__ */
