/*** Autogenerated by WIDL <undefined version> from /home/jens/winos/reactos/sdk/include/reactos/idl/sam.idl - Do not edit ***/

#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#ifdef __REACTOS__
#define WIN32_LEAN_AND_MEAN
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __sam_c_h__
#define __sam_c_h__

/* Forward declarations */

/* Headers for imported files */


#ifdef __cplusplus
extern "C" {
#endif

#ifndef _DTYP_IDL
#define _DTYP_IDL
#ifndef _WINDEF_H
typedef int BOOL;
typedef int *PBOOL;
typedef int *LPBOOL;
typedef unsigned char BYTE;
typedef unsigned char *PBYTE;
typedef unsigned char *LPBYTE;
typedef ULONG DWORD;
typedef ULONG *PDWORD;
typedef ULONG *LPDWORD;
#endif
#ifndef _BASETSD_H_
typedef unsigned int DWORD32;
typedef UINT64 DWORD64;
#endif
#ifndef _WINDEF_H
typedef int INT;
typedef int *LPINT;
#endif
#ifndef _BASETSD_H_
typedef signed char INT8;
typedef signed short INT16;
typedef signed int INT32;
typedef INT64 INT64;
#endif
#ifndef _BASETSD_H_
typedef signed int LONG32;
typedef INT64 LONG64;
#endif
typedef UINT64 QWORD;
#ifndef _WINNT_
typedef short SHORT;
#endif
typedef INT64 TIME;
#ifndef _WINNT_
typedef char CHAR;
typedef char *PCHAR;
typedef unsigned char UCHAR;
typedef unsigned char *PUCHAR;
#endif
#ifndef _WINDEF_H
typedef unsigned int UINT;
#endif
#ifndef _BASETSD_H_
typedef unsigned char UINT8;
typedef unsigned short UINT16;
typedef unsigned int UINT32;
typedef UINT64 UINT64;
#endif
#ifndef _WINNT_
typedef ULONG ULONG;
typedef ULONG *PULONG;
#endif
#ifndef _BASETSD_H_
typedef unsigned int ULONG32;
typedef UINT64 ULONG64;
#endif
#ifndef _WINNT_
typedef UINT64 ULONGLONG;
typedef unsigned short USHORT;
#endif
#ifndef _WINDEF_H
typedef unsigned short WORD;
typedef unsigned short *PWORD;
typedef unsigned short *LPWORD;
#endif
#ifndef _WINNT_
typedef LONG LONG;
typedef LONG *PLONG;
#endif
#ifndef _WINDEF_H
typedef LONG *LPLONG;
#endif
#ifndef _WINNT_
typedef INT64 LONGLONG;
#endif
#ifndef _WINDEF_H
typedef float FLOAT;
#endif
#ifndef __wtypes_h__
typedef double DOUBLE;
#endif
#ifndef _WINNT_
typedef BYTE BOOLEAN;
typedef BYTE *PBOOLEAN;
#endif
#ifndef _BASETSD_H_
typedef LONG LONG_PTR;
typedef ULONG ULONG_PTR;
typedef ULONG_PTR SIZE_T;
typedef ULONG_PTR DWORD_PTR;
#endif
typedef DWORD NET_API_STATUS;
#ifndef _WINNT_
typedef ULONGLONG DWORDLONG;
typedef ULONGLONG *PDWORDLONG;
#endif
typedef DWORD HCALL;
#ifndef _WINNT_
typedef void *HANDLE;
typedef void *PVOID;
#endif
#ifndef __WINE_RPCDCE_H
typedef void *RPC_BINDING_HANDLE;
#endif
typedef void *PCONTEXT_HANDLE;
typedef PCONTEXT_HANDLE *PPCONTEXT_HANDLE;
#ifndef _WINNT_
typedef wchar_t WCHAR;
typedef wchar_t *PWCHAR;
#if 0
typedef wchar_t UNICODE;
#endif
typedef const char *LPCSTR;
typedef const wchar_t *LPCWSTR;
typedef char *PSTR;
typedef char *LPSTR;
typedef wchar_t *LPWSTR;
typedef wchar_t *PWSTR;
#endif
typedef const wchar_t *LMCSTR;
typedef WCHAR *LMSTR;
#ifndef __wtypes_h__
typedef WCHAR *BSTR;
#endif
#if 0
typedef LPCSTR LPCTSTR;
typedef LPSTR LPTSTR;
typedef CHAR TCHAR;
#endif
#if 0
typedef struct _FILETIME {
    DWORD dwLowDateTime;
    DWORD dwHighDateTime;
} FILETIME;
typedef struct _FILETIME *PFILETIME;
typedef struct _FILETIME *LPFILETIME;
typedef struct _GUID {
    DWORD Data1;
    WORD Data2;
    WORD Data3;
    BYTE Data4[8];
} GUID;
typedef struct _GUID UUID;
typedef struct _GUID *PGUID;
typedef struct _LARGE_INTEGER {
    LONGLONG QuadPart;
} LARGE_INTEGER;
typedef struct _LARGE_INTEGER *PLARGE_INTEGER;
typedef DWORD LCID;
#endif
typedef struct _RPC_UNICODE_STRING {
    USHORT Length;
    USHORT MaximumLength;
    LPWSTR Buffer;
} RPC_UNICODE_STRING;
typedef struct _RPC_UNICODE_STRING *PRPC_UNICODE_STRING;
#if 0
typedef struct _SYSTEMTIME {
    WORD wYear;
    WORD wMonth;
    WORD wDayOfWeek;
    WORD wDay;
    WORD wHour;
    WORD wMinute;
    WORD wSecond;
    WORD wMilliseconds;
} SYSTEMTIME;
typedef struct _SYSTEMTIME *PSYSTEMTIME;
typedef struct _UINT128 {
    UINT64 lower;
    UINT64 upper;
} UINT128;
typedef struct _UINT128 *PUINT128;
typedef struct _ULARGE_INTEGER {
    ULONGLONG QuadPart;
} ULARGE_INTEGER;
typedef struct _ULARGE_INTEGER *PULARGE_INTEGER;
#endif
#if 0
typedef struct _SID_IDENTIFIER_AUTHORITY {
    BYTE Value[6];
} SID_IDENTIFIER_AUTHORITY;
typedef struct _SID {
    BYTE Revision;
    BYTE SubAuthorityCount;
    SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
    DWORD SubAuthority[1];
} SID;
typedef struct _SID *PSID;
typedef struct _ACCESS_MASK {
    DWORD ACCESS_MASK;
} ACCESS_MASK;
typedef struct _ACCESS_MASK *PACCESS_MASK;
typedef struct _ACE_HEADER {
    UCHAR AceType;
    UCHAR AceFlags;
    USHORT AceSize;
} ACE_HEADER;
typedef struct _ACE_HEADER *PACE_HEADER;
typedef struct _ACCESS_ALLOWED_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} ACCESS_ALLOWED_ACE;
typedef struct _ACCESS_ALLOWED_ACE *PACCESS_ALLOWED_ACE;
typedef struct _ACCESS_ALLOWED_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
} ACCESS_ALLOWED_OBJECT_ACE;
typedef struct _ACCESS_ALLOWED_OBJECT_ACE *PACCESS_ALLOWED_OBJECT_ACE;
typedef struct _ACCESS_DENIED_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} ACCESS_DENIED_ACE;
typedef struct _ACCESS_DENIED_ACE *PACCESS_DENIED_ACE;
typedef struct _ACCESS_ALLOWED_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} ACCESS_ALLOWED_CALLBACK_ACE;
typedef struct _ACCESS_ALLOWED_CALLBACK_ACE *PACCESS_ALLOWED_CALLBACK_ACE;
typedef struct _ACCESS_DENIED_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} ACCESS_DENIED_CALLBACK_ACE;
typedef struct _ACCESS_DENIED_CALLBACK_ACE *PACCESS_DENIED_CALLBACK_ACE;
typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
} ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;
typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE;
typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
} ACCESS_DENIED_CALLBACK_OBJECT_ACE;
typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE *PACCESS_DENIED_CALLBACK_OBJECT_ACE;
typedef struct _SYSTEM_AUDIT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} SYSTEM_AUDIT_ACE;
typedef struct _SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE;
typedef struct _SYSTEM_AUDIT_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} SYSTEM_AUDIT_CALLBACK_ACE;
typedef struct _SYSTEM_AUDIT_CALLBACK_ACE *PSYSTEM_AUDIT_CALLBACK_ACE;
typedef struct _SYSTEM_MANDATORY_LABEL_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} SYSTEM_MANDATORY_LABEL_ACE;
typedef struct _SYSTEM_MANDATORY_LABEL_ACE *PSYSTEM_MANDATORY_LABEL_ACE;
typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
} SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;
typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE;
typedef struct _ACL {
    UCHAR AclRevision;
    UCHAR Sbz1;
    USHORT AclSize;
    USHORT AceCount;
    USHORT Sbz2;
} ACL;
typedef struct _ACL *PACL;
typedef struct _SECURITY_DESCRIPTOR {
    UCHAR Revision;
    UCHAR Sbz1;
    USHORT Control;
    ULONG Owner;
    ULONG Group;
    ULONG Sacl;
    ULONG Dacl;
} SECURITY_DESCRIPTOR;
typedef struct _SECURITY_DESCRIPTOR *PSECURITY_DESCRIPTOR;
typedef DWORD SECURITY_INFORMATION;
typedef DWORD *PSECURITY_INFORMATION;
#endif
typedef struct _RPC_SID {
    UCHAR Revision;
    UCHAR SubAuthorityCount;
    SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
    DWORD SubAuthority[1];
} RPC_SID;
typedef struct _RPC_SID *PRPC_SID;
#endif /* _DTYP_IDL */
#ifndef _NTDEF_
typedef LONG NTSTATUS;
#endif
typedef struct _RPC_STRING {
    unsigned short Length;
    unsigned short MaximumLength;
    char *Buffer;
} RPC_STRING;
typedef struct _RPC_STRING *PRPC_STRING;
typedef struct _OLD_LARGE_INTEGER {
    ULONG LowPart;
    LONG HighPart;
} OLD_LARGE_INTEGER;
typedef struct _OLD_LARGE_INTEGER *POLD_LARGE_INTEGER;
typedef wchar_t *PSAMPR_SERVER_NAME;
typedef void *SAMPR_HANDLE;
typedef struct _ENCRYPTED_LM_OWF_PASSWORD {
    char data[16];
} LM_OWF_PASSWORD;
typedef struct _ENCRYPTED_LM_OWF_PASSWORD *PLM_OWF_PASSWORD;
typedef struct _ENCRYPTED_LM_OWF_PASSWORD NT_OWF_PASSWORD;
typedef struct _ENCRYPTED_LM_OWF_PASSWORD *PNT_OWF_PASSWORD;
typedef struct _ENCRYPTED_LM_OWF_PASSWORD ENCRYPTED_LM_OWF_PASSWORD;
typedef struct _ENCRYPTED_LM_OWF_PASSWORD *PENCRYPTED_LM_OWF_PASSWORD;
typedef struct _ENCRYPTED_LM_OWF_PASSWORD ENCRYPTED_NT_OWF_PASSWORD;
typedef struct _ENCRYPTED_LM_OWF_PASSWORD *PENCRYPTED_NT_OWF_PASSWORD;
typedef struct _SAMPR_ULONG_ARRAY {
    ULONG Count;
    ULONG *Element;
} SAMPR_ULONG_ARRAY;
typedef struct _SAMPR_ULONG_ARRAY *PSAMPR_ULONG_ARRAY;
typedef struct _SAMPR_SID_INFORMATION {
    PRPC_SID SidPointer;
} SAMPR_SID_INFORMATION;
typedef struct _SAMPR_SID_INFORMATION *PSAMPR_SID_INFORMATION;
typedef struct _SAMPR_PSID_ARRAY {
    ULONG Count;
    PSAMPR_SID_INFORMATION Sids;
} SAMPR_PSID_ARRAY;
typedef struct _SAMPR_PSID_ARRAY *PSAMPR_PSID_ARRAY;
typedef struct _SAMPR_PSID_ARRAY_OUT {
    ULONG Count;
    PSAMPR_SID_INFORMATION Sids;
} SAMPR_PSID_ARRAY_OUT;
typedef struct _SAMPR_PSID_ARRAY_OUT *PSAMPR_PSID_ARRAY_OUT;
typedef struct _SAMPR_RETURNED_USTRING_ARRAY {
    ULONG Count;
    PRPC_UNICODE_STRING Element;
} SAMPR_RETURNED_USTRING_ARRAY;
typedef struct _SAMPR_RETURNED_USTRING_ARRAY *PSAMPR_RETURNED_USTRING_ARRAY;
#ifndef _WINNT_
typedef enum _SID_NAME_USE {
    SidTypeUser = 1,
    SidTypeGroup = 2,
    SidTypeDomain = 3,
    SidTypeAlias = 4,
    SidTypeWellKnownGroup = 5,
    SidTypeDeletedAccount = 6,
    SidTypeInvalid = 7,
    SidTypeUnknown = 8
} SID_NAME_USE;
typedef enum _SID_NAME_USE *PSID_NAME_USE;
#endif
typedef struct RPC_SHORT_BLOB {
    unsigned short Length;
    unsigned short MaximumLength;
    unsigned short *Buffer;
} RPC_SHORT_BLOB;
typedef struct RPC_SHORT_BLOB *PRPC_SHORT_BLOB;
typedef struct _SAMPR_RID_ENUMERATION {
    ULONG RelativeId;
    RPC_UNICODE_STRING Name;
} SAMPR_RID_ENUMERATION;
typedef struct _SAMPR_RID_ENUMERATION *PSAMPR_RID_ENUMERATION;
typedef struct _SAMPR_ENUMERATION_BUFFER {
    ULONG EntriesRead;
    PSAMPR_RID_ENUMERATION Buffer;
} SAMPR_ENUMERATION_BUFFER;
typedef struct _SAMPR_ENUMERATION_BUFFER *PSAMPR_ENUMERATION_BUFFER;
typedef struct _SAMPR_SR_SECURITY_DESCRIPTOR {
    ULONG Length;
    unsigned char *SecurityDescriptor;
} SAMPR_SR_SECURITY_DESCRIPTOR;
typedef struct _SAMPR_SR_SECURITY_DESCRIPTOR *PSAMPR_SR_SECURITY_DESCRIPTOR;
#ifndef _NTSAM_
typedef struct _GROUP_MEMBERSHIP {
    ULONG RelativeId;
    ULONG Attributes;
} GROUP_MEMBERSHIP;
typedef struct _GROUP_MEMBERSHIP *PGROUP_MEMBERSHIP;
#endif
typedef struct _SAMPR_GET_GROUPS_BUFFER {
    ULONG MembershipCount;
    PGROUP_MEMBERSHIP Groups;
} SAMPR_GET_GROUPS_BUFFER;
typedef struct _SAMPR_GET_GROUPS_BUFFER *PSAMPR_GET_GROUPS_BUFFER;
typedef struct _SAMPR_GET_MEMBERS_BUFFER {
    ULONG MemberCount;
    ULONG *Members;
    ULONG *Attributes;
} SAMPR_GET_MEMBERS_BUFFER;
typedef struct _SAMPR_GET_MEMBERS_BUFFER *PSAMPR_GET_MEMBERS_BUFFER;
typedef struct _SAMPR_REVISION_INFO_V1 {
    ULONG Revision;
    ULONG SupportedFeatures;
} SAMPR_REVISION_INFO_V1;
typedef struct _SAMPR_REVISION_INFO_V1 *PSAMPR_REVISION_INFO_V1;
typedef union __WIDL_sam_generated_name_00000000 {
    SAMPR_REVISION_INFO_V1 V1;
} SAMPR_REVISION_INFO;
typedef union __WIDL_sam_generated_name_00000000 *PSAMPR_REVISION_INFO;
typedef struct _USER_DOMAIN_PASSWORD_INFORMATION {
    unsigned short MinPasswordLength;
    ULONG PasswordProperties;
} USER_DOMAIN_PASSWORD_INFORMATION;
typedef struct _USER_DOMAIN_PASSWORD_INFORMATION *PUSER_DOMAIN_PASSWORD_INFORMATION;
#ifndef _NTSAM_
typedef enum _DOMAIN_SERVER_ENABLE_STATE {
    DomainServerEnabled = 1,
    DomainServerDisabled = 2
} DOMAIN_SERVER_ENABLE_STATE;
typedef enum _DOMAIN_SERVER_ENABLE_STATE *PDOMAIN_SERVER_ENABLE_STATE;
typedef struct _DOMAIN_STATE_INFORMATION {
    DOMAIN_SERVER_ENABLE_STATE DomainServerState;
} DOMAIN_STATE_INFORMATION;
typedef struct _DOMAIN_STATE_INFORMATION *PDOMAIN_STATE_INFORMATION;
#endif
#ifndef _NTSAM_
typedef enum _DOMAIN_SERVER_ROLE {
    DomainServerRoleBackup = 2,
    DomainServerRolePrimary = 3
} DOMAIN_SERVER_ROLE;
typedef enum _DOMAIN_SERVER_ROLE *PDOMAIN_SERVER_ROLE;
#endif
#if !defined(_NTSECAPI_H) && !defined(_NTSAM_)
typedef struct _DOMAIN_PASSWORD_INFORMATION {
    USHORT MinPasswordLength;
    USHORT PasswordHistoryLength;
    ULONG PasswordProperties;
    OLD_LARGE_INTEGER MaxPasswordAge;
    OLD_LARGE_INTEGER MinPasswordAge;
} DOMAIN_PASSWORD_INFORMATION;
typedef struct _DOMAIN_PASSWORD_INFORMATION *PDOMAIN_PASSWORD_INFORMATION;
#endif
#ifndef _NTSAM_
typedef struct _DOMAIN_LOGOFF_INFORMATION {
    OLD_LARGE_INTEGER ForceLogoff;
} DOMAIN_LOGOFF_INFORMATION;
typedef struct _DOMAIN_LOGOFF_INFORMATION *PDOMAIN_LOGOFF_INFORMATION;
typedef struct _DOMAIN_SERVER_ROLE_INFORMATION {
    DOMAIN_SERVER_ROLE DomainServerRole;
} DOMAIN_SERVER_ROLE_INFORMATION;
typedef struct _DOMAIN_SERVER_ROLE_INFORMATION *PDOMAIN_SERVER_ROLE_INFORMATION;
typedef struct _DOMAIN_MODIFIED_INFORMATION {
    OLD_LARGE_INTEGER DomainModifiedCount;
    OLD_LARGE_INTEGER CreationTime;
} DOMAIN_MODIFIED_INFORMATION;
typedef struct _DOMAIN_MODIFIED_INFORMATION *PDOMAIN_MODIFIED_INFORMATION;
typedef struct _DOMAIN_MODIFIED_INFORMATION2 {
    OLD_LARGE_INTEGER DomainModifiedCount;
    OLD_LARGE_INTEGER CreationTime;
    OLD_LARGE_INTEGER ModifiedCountAtLastPromotion;
} DOMAIN_MODIFIED_INFORMATION2;
typedef struct _DOMAIN_MODIFIED_INFORMATION2 *PDOMAIN_MODIFIED_INFORMATION2;
#endif
#include <pshpack4.h>
typedef struct _SAMPR_DOMAIN_GENERAL_INFORMATION {
    OLD_LARGE_INTEGER ForceLogoff;
    RPC_UNICODE_STRING OemInformation;
    RPC_UNICODE_STRING DomainName;
    RPC_UNICODE_STRING ReplicaSourceNodeName;
    OLD_LARGE_INTEGER DomainModifiedCount;
    ULONG DomainServerState;
    ULONG DomainServerRole;
    unsigned char UasCompatibilityRequired;
    ULONG UserCount;
    ULONG GroupCount;
    ULONG AliasCount;
} SAMPR_DOMAIN_GENERAL_INFORMATION;
typedef struct _SAMPR_DOMAIN_GENERAL_INFORMATION *PSAMPR_DOMAIN_GENERAL_INFORMATION;
typedef struct _SAMPR_DOMAIN_GENERAL_INFORMATION2 {
    SAMPR_DOMAIN_GENERAL_INFORMATION I1;
    LARGE_INTEGER LockoutDuration;
    LARGE_INTEGER LockoutObservationWindow;
    unsigned short LockoutThreshold;
} SAMPR_DOMAIN_GENERAL_INFORMATION2;
typedef struct _SAMPR_DOMAIN_GENERAL_INFORMATION2 *PSAMPR_DOMAIN_GENERAL_INFORMATION2;
#include <poppack.h>
typedef struct _SAMPR_DOMAIN_OEM_INFORMATION {
    RPC_UNICODE_STRING OemInformation;
} SAMPR_DOMAIN_OEM_INFORMATION;
typedef struct _SAMPR_DOMAIN_OEM_INFORMATION *PSAMPR_DOMAIN_OEM_INFORMATION;
typedef struct _SAMPR_DOMAIN_NAME_INFORMATION {
    RPC_UNICODE_STRING DomainName;
} SAMPR_DOMAIN_NAME_INFORMATION;
typedef struct _SAMPR_DOMAIN_NAME_INFORMATION *PSAMPR_DOMAIN_NAME_INFORMATION;
typedef struct SAMPR_DOMAIN_REPLICATION_INFORMATION {
    RPC_UNICODE_STRING ReplicaSourceNodeName;
} SAMPR_DOMAIN_REPLICATION_INFORMATION;
typedef struct SAMPR_DOMAIN_REPLICATION_INFORMATION *PSAMPR_DOMAIN_REPLICATION_INFORMATION;
typedef struct _SAMPR_DOMAIN_LOCKOUT_INFORMATION {
    LARGE_INTEGER LockoutDuration;
    LARGE_INTEGER LockoutObservationWindow;
    unsigned short LockoutThreshold;
} SAMPR_DOMAIN_LOCKOUT_INFORMATION;
typedef struct _SAMPR_DOMAIN_LOCKOUT_INFORMATION *PSAMPR_DOMAIN_LOCKOUT_INFORMATION;
#ifndef _NTSAM_
typedef enum _DOMAIN_INFORMATION_CLASS {
    DomainPasswordInformation = 1,
    DomainGeneralInformation = 2,
    DomainLogoffInformation = 3,
    DomainOemInformation = 4,
    DomainNameInformation = 5,
    DomainReplicationInformation = 6,
    DomainServerRoleInformation = 7,
    DomainModifiedInformation = 8,
    DomainStateInformation = 9,
    DomainGeneralInformation2 = 11,
    DomainLockoutInformation = 12,
    DomainModifiedInformation2 = 13
} DOMAIN_INFORMATION_CLASS;
#endif
typedef union _SAMPR_DOMAIN_INFO_BUFFER {
    DOMAIN_PASSWORD_INFORMATION Password;
    SAMPR_DOMAIN_GENERAL_INFORMATION General;
    DOMAIN_LOGOFF_INFORMATION Logoff;
    SAMPR_DOMAIN_OEM_INFORMATION Oem;
    SAMPR_DOMAIN_NAME_INFORMATION Name;
    DOMAIN_SERVER_ROLE_INFORMATION Role;
    SAMPR_DOMAIN_REPLICATION_INFORMATION Replication;
    DOMAIN_MODIFIED_INFORMATION Modified;
    DOMAIN_STATE_INFORMATION State;
    SAMPR_DOMAIN_GENERAL_INFORMATION2 General2;
    SAMPR_DOMAIN_LOCKOUT_INFORMATION Lockout;
    DOMAIN_MODIFIED_INFORMATION2 Modified2;
} SAMPR_DOMAIN_INFO_BUFFER;
typedef union _SAMPR_DOMAIN_INFO_BUFFER *PSAMPR_DOMAIN_INFO_BUFFER;
#ifndef _NTSAM_
typedef enum _DOMAIN_DISPLAY_INFORMATION {
    DomainDisplayUser = 1,
    DomainDisplayMachine = 2,
    DomainDisplayGroup = 3,
    DomainDisplayOemUser = 4,
    DomainDisplayOemGroup = 5,
    DomainDisplayServer = 6
} DOMAIN_DISPLAY_INFORMATION;
typedef enum _DOMAIN_DISPLAY_INFORMATION *PDOMAIN_DISPLAY_INFORMATION;
#endif
typedef struct _SAMPR_DOMAIN_DISPLAY_USER {
    ULONG Index;
    ULONG Rid;
    ULONG AccountControl;
    RPC_UNICODE_STRING AccountName;
    RPC_UNICODE_STRING AdminComment;
    RPC_UNICODE_STRING FullName;
} SAMPR_DOMAIN_DISPLAY_USER;
typedef struct _SAMPR_DOMAIN_DISPLAY_USER *PSAMPR_DOMAIN_DISPLAY_USER;
typedef struct _SAMPR_DOMAIN_DISPLAY_MACHINE {
    ULONG Index;
    ULONG Rid;
    ULONG AccountControl;
    RPC_UNICODE_STRING AccountName;
    RPC_UNICODE_STRING AdminComment;
} SAMPR_DOMAIN_DISPLAY_MACHINE;
typedef struct _SAMPR_DOMAIN_DISPLAY_MACHINE *PSAMPR_DOMAIN_DISPLAY_MACHINE;
typedef struct _SAMPR_DOMAIN_DISPLAY_GROUP {
    ULONG Index;
    ULONG Rid;
    ULONG Attributes;
    RPC_UNICODE_STRING AccountName;
    RPC_UNICODE_STRING AdminComment;
} SAMPR_DOMAIN_DISPLAY_GROUP;
typedef struct _SAMPR_DOMAIN_DISPLAY_GROUP *PSAMPR_DOMAIN_DISPLAY_GROUP;
typedef struct _SAMPR_DOMAIN_DISPLAY_OEM_USER {
    ULONG Index;
    RPC_STRING OemAccountName;
} SAMPR_DOMAIN_DISPLAY_OEM_USER;
typedef struct _SAMPR_DOMAIN_DISPLAY_OEM_USER *PSAMPR_DOMAIN_DISPLAY_OEM_USER;
typedef struct _SAMPR_DOMAIN_DISPLAY_OEM_GROUP {
    ULONG Index;
    RPC_STRING OemAccountName;
} SAMPR_DOMAIN_DISPLAY_OEM_GROUP;
typedef struct _SAMPR_DOMAIN_DISPLAY_OEM_GROUP *PSAMPR_DOMAIN_DISPLAY_OEM_GROUP;
typedef struct _SAMPR_DOMAIN_DISPLAY_USER_BUFFER {
    ULONG EntriesRead;
    PSAMPR_DOMAIN_DISPLAY_USER Buffer;
} SAMPR_DOMAIN_DISPLAY_USER_BUFFER;
typedef struct _SAMPR_DOMAIN_DISPLAY_USER_BUFFER *PSAMPR_DOMAIN_DISPLAY_USER_BUFFER;
typedef struct _SAMPR_DOMAIN_DISPLAY_MACHINE_BUFFER {
    ULONG EntriesRead;
    PSAMPR_DOMAIN_DISPLAY_MACHINE Buffer;
} SAMPR_DOMAIN_DISPLAY_MACHINE_BUFFER;
typedef struct _SAMPR_DOMAIN_DISPLAY_MACHINE_BUFFER *PSAMPR_DOMAIN_DISPLAY_MACHINE_BUFFER;
typedef struct _SAMPR_DOMAIN_DISPLAY_GROUP_BUFFER {
    ULONG EntriesRead;
    PSAMPR_DOMAIN_DISPLAY_GROUP Buffer;
} SAMPR_DOMAIN_DISPLAY_GROUP_BUFFER;
typedef struct _SAMPR_DOMAIN_DISPLAY_GROUP_BUFFER *PSAMPR_DOMAIN_DISPLAY_GROUP_BUFFER;
typedef struct _SAMPR_DOMAIN_DISPLAY_OEM_USER_BUFFER {
    ULONG EntriesRead;
    PSAMPR_DOMAIN_DISPLAY_OEM_USER Buffer;
} SAMPR_DOMAIN_DISPLAY_OEM_USER_BUFFER;
typedef struct _SAMPR_DOMAIN_DISPLAY_OEM_USER_BUFFER *PSAMPR_DOMAIN_DISPLAY_OEM_USER_BUFFER;
typedef struct _SAMPR_DOMAIN_DISPLAY_OEM_GROUP_BUFFER {
    ULONG EntriesRead;
    PSAMPR_DOMAIN_DISPLAY_OEM_GROUP Buffer;
} SAMPR_DOMAIN_DISPLAY_OEM_GROUP_BUFFER;
typedef struct _SAMPR_DOMAIN_DISPLAY_OEM_GROUP_BUFFER *PSAMPR_DOMAIN_DISPLAY_OEM_GROUP_BUFFER;
typedef union _SAMPR_DISPLAY_INFO_BUFFER {
    SAMPR_DOMAIN_DISPLAY_USER_BUFFER UserInformation;
    SAMPR_DOMAIN_DISPLAY_MACHINE_BUFFER MachineInformation;
    SAMPR_DOMAIN_DISPLAY_GROUP_BUFFER GroupInformation;
    SAMPR_DOMAIN_DISPLAY_OEM_USER_BUFFER OemUserInformation;
    SAMPR_DOMAIN_DISPLAY_OEM_GROUP_BUFFER OemGroupInformation;
} SAMPR_DISPLAY_INFO_BUFFER;
typedef union _SAMPR_DISPLAY_INFO_BUFFER *PSAMPR_DISPLAY_INFO_BUFFER;
typedef struct _SAMPR_GROUP_ATTRIBUTE_INFORMATION {
    ULONG Attributes;
} SAMPR_GROUP_ATTRIBUTE_INFORMATION;
typedef struct _SAMPR_GROUP_ATTRIBUTE_INFORMATION *PSAMPR_GROUP_ATTRIBUTE_INFORMATION;
typedef struct _SAMPR_GROUP_GENERAL_INFORMATION {
    RPC_UNICODE_STRING Name;
    ULONG Attributes;
    ULONG MemberCount;
    RPC_UNICODE_STRING AdminComment;
} SAMPR_GROUP_GENERAL_INFORMATION;
typedef struct _SAMPR_GROUP_GENERAL_INFORMATION *PSAMPR_GROUP_GENERAL_INFORMATION;
typedef struct _SAMPR_GROUP_NAME_INFORMATION {
    RPC_UNICODE_STRING Name;
} SAMPR_GROUP_NAME_INFORMATION;
typedef struct _SAMPR_GROUP_NAME_INFORMATION *PSAMPR_GROUP_NAME_INFORMATION;
typedef struct _SAMPR_GROUP_ADM_COMMENT_INFORMATION {
    RPC_UNICODE_STRING AdminComment;
} SAMPR_GROUP_ADM_COMMENT_INFORMATION;
typedef struct _SAMPR_GROUP_ADM_COMMENT_INFORMATION *PSAMPR_GROUP_ADM_COMMENT_INFORMATION;
#ifndef _NTSAM_
typedef enum _GROUP_INFORMATION_CLASS {
    GroupGeneralInformation = 1,
    GroupNameInformation = 2,
    GroupAttributeInformation = 3,
    GroupAdminCommentInformation = 4,
    GroupReplicationInformation = 5
} GROUP_INFORMATION_CLASS;
#endif
typedef union _SAMPR_GROUP_INFO_BUFFER {
    SAMPR_GROUP_GENERAL_INFORMATION General;
    SAMPR_GROUP_NAME_INFORMATION Name;
    SAMPR_GROUP_ATTRIBUTE_INFORMATION Attribute;
    SAMPR_GROUP_ADM_COMMENT_INFORMATION AdminComment;
    SAMPR_GROUP_GENERAL_INFORMATION DoNotUse;
} SAMPR_GROUP_INFO_BUFFER;
typedef union _SAMPR_GROUP_INFO_BUFFER *PSAMPR_GROUP_INFO_BUFFER;
typedef struct _SAMPR_ALIAS_GENERAL_INFORMATION {
    RPC_UNICODE_STRING Name;
    ULONG MemberCount;
    RPC_UNICODE_STRING AdminComment;
} SAMPR_ALIAS_GENERAL_INFORMATION;
typedef struct _SAMPR_ALIAS_GENERAL_INFORMATION *PSAMPR_ALIAS_GENERAL_INFORMATION;
typedef struct _SAMPR_ALIAS_NAME_INFORMATION {
    RPC_UNICODE_STRING Name;
} SAMPR_ALIAS_NAME_INFORMATION;
typedef struct _SAMPR_ALIAS_NAME_INFORMATION *PSAMPR_ALIAS_NAME_INFORMATION;
typedef struct _SAMPR_ALIAS_ADM_COMMENT_INFORMATION {
    RPC_UNICODE_STRING AdminComment;
} SAMPR_ALIAS_ADM_COMMENT_INFORMATION;
typedef struct _SAMPR_ALIAS_ADM_COMMENT_INFORMATION *PSAMPR_ALIAS_ADM_COMMENT_INFORMATION;
#ifndef _NTSAM_
typedef enum _ALIAS_INFORMATION_CLASS {
    AliasGeneralInformation = 1,
    AliasNameInformation = 2,
    AliasAdminCommentInformation = 3
} ALIAS_INFORMATION_CLASS;
#endif
typedef union _SAMPR_ALIAS_INFO_BUFFER {
    SAMPR_ALIAS_GENERAL_INFORMATION General;
    SAMPR_ALIAS_NAME_INFORMATION Name;
    SAMPR_ALIAS_ADM_COMMENT_INFORMATION AdminComment;
} SAMPR_ALIAS_INFO_BUFFER;
typedef union _SAMPR_ALIAS_INFO_BUFFER *PSAMPR_ALIAS_INFO_BUFFER;
typedef struct _SAMPR_ENCRYPTED_USER_PASSWORD {
    unsigned char Buffer[516];
} SAMPR_ENCRYPTED_USER_PASSWORD;
typedef struct _SAMPR_ENCRYPTED_USER_PASSWORD *PSAMPR_ENCRYPTED_USER_PASSWORD;
typedef struct _SAMPR_ENCRYPTED_USER_PASSWORD_NEW {
    unsigned char Buffer[532];
} SAMPR_ENCRYPTED_USER_PASSWORD_NEW;
typedef struct _SAMPR_ENCRYPTED_USER_PASSWORD_NEW *PSAMPR_ENCRYPTED_USER_PASSWORD_NEW;
#ifndef _NTSAM_
typedef struct _USER_PRIMARY_GROUP_INFORMATION {
    ULONG PrimaryGroupId;
} USER_PRIMARY_GROUP_INFORMATION;
typedef struct _USER_PRIMARY_GROUP_INFORMATION *PUSER_PRIMARY_GROUP_INFORMATION;
typedef struct _USER_CONTROL_INFORMATION {
    ULONG UserAccountControl;
} USER_CONTROL_INFORMATION;
typedef struct _USER_CONTROL_INFORMATION *PUSER_CONTROL_INFORMATION;
typedef struct _USER_EXPIRES_INFORMATION {
    OLD_LARGE_INTEGER AccountExpires;
} USER_EXPIRES_INFORMATION;
typedef struct _USER_EXPIRES_INFORMATION *PUSER_EXPIRES_INFORMATION;
#endif
typedef struct _SAMPR_LOGON_HOURS {
    unsigned short UnitsPerWeek;
    unsigned char *LogonHours;
} SAMPR_LOGON_HOURS;
typedef struct _SAMPR_LOGON_HOURS *PSAMPR_LOGON_HOURS;
typedef struct _SAMPR_USER_ALL_INFORMATION {
    OLD_LARGE_INTEGER LastLogon;
    OLD_LARGE_INTEGER LastLogoff;
    OLD_LARGE_INTEGER PasswordLastSet;
    OLD_LARGE_INTEGER AccountExpires;
    OLD_LARGE_INTEGER PasswordCanChange;
    OLD_LARGE_INTEGER PasswordMustChange;
    RPC_UNICODE_STRING UserName;
    RPC_UNICODE_STRING FullName;
    RPC_UNICODE_STRING HomeDirectory;
    RPC_UNICODE_STRING HomeDirectoryDrive;
    RPC_UNICODE_STRING ScriptPath;
    RPC_UNICODE_STRING ProfilePath;
    RPC_UNICODE_STRING AdminComment;
    RPC_UNICODE_STRING WorkStations;
    RPC_UNICODE_STRING UserComment;
    RPC_UNICODE_STRING Parameters;
    RPC_SHORT_BLOB LmOwfPassword;
    RPC_SHORT_BLOB NtOwfPassword;
    RPC_UNICODE_STRING PrivateData;
    SAMPR_SR_SECURITY_DESCRIPTOR SecurityDescriptor;
    ULONG UserId;
    ULONG PrimaryGroupId;
    ULONG UserAccountControl;
    ULONG WhichFields;
    SAMPR_LOGON_HOURS LogonHours;
    unsigned short BadPasswordCount;
    unsigned short LogonCount;
    unsigned short CountryCode;
    unsigned short CodePage;
    unsigned char LmPasswordPresent;
    unsigned char NtPasswordPresent;
    unsigned char PasswordExpired;
    unsigned char PrivateDataSensitive;
} SAMPR_USER_ALL_INFORMATION;
typedef struct _SAMPR_USER_ALL_INFORMATION *PSAMPR_USER_ALL_INFORMATION;
typedef struct _SAMPR_USER_GENERAL_INFORMATION {
    RPC_UNICODE_STRING UserName;
    RPC_UNICODE_STRING FullName;
    ULONG PrimaryGroupId;
    RPC_UNICODE_STRING AdminComment;
    RPC_UNICODE_STRING UserComment;
} SAMPR_USER_GENERAL_INFORMATION;
typedef struct _SAMPR_USER_GENERAL_INFORMATION *PSAMPR_USER_GENERAL_INFORMATION;
typedef struct _SAMPR_USER_PREFERENCES_INFORMATION {
    RPC_UNICODE_STRING UserComment;
    RPC_UNICODE_STRING Reserved1;
    unsigned short CountryCode;
    unsigned short CodePage;
} SAMPR_USER_PREFERENCES_INFORMATION;
typedef struct _SAMPR_USER_PREFERENCES_INFORMATION *PSAMPR_USER_PREFERENCES_INFORMATION;
typedef struct _SAMPR_USER_PARAMETERS_INFORMATION {
    RPC_UNICODE_STRING Parameters;
} SAMPR_USER_PARAMETERS_INFORMATION;
typedef struct _SAMPR_USER_PARAMETERS_INFORMATION *PSAMPR_USER_PARAMETERS_INFORMATION;
typedef struct _SAMPR_USER_LOGON_INFORMATION {
    RPC_UNICODE_STRING UserName;
    RPC_UNICODE_STRING FullName;
    ULONG UserId;
    ULONG PrimaryGroupId;
    RPC_UNICODE_STRING HomeDirectory;
    RPC_UNICODE_STRING HomeDirectoryDrive;
    RPC_UNICODE_STRING ScriptPath;
    RPC_UNICODE_STRING ProfilePath;
    RPC_UNICODE_STRING WorkStations;
    OLD_LARGE_INTEGER LastLogon;
    OLD_LARGE_INTEGER LastLogoff;
    OLD_LARGE_INTEGER PasswordLastSet;
    OLD_LARGE_INTEGER PasswordCanChange;
    OLD_LARGE_INTEGER PasswordMustChange;
    SAMPR_LOGON_HOURS LogonHours;
    unsigned short BadPasswordCount;
    unsigned short LogonCount;
    ULONG UserAccountControl;
} SAMPR_USER_LOGON_INFORMATION;
typedef struct _SAMPR_USER_LOGON_INFORMATION *PSAMPR_USER_LOGON_INFORMATION;
typedef struct _SAMPR_USER_ACCOUNT_INFORMATION {
    RPC_UNICODE_STRING UserName;
    RPC_UNICODE_STRING FullName;
    ULONG UserId;
    ULONG PrimaryGroupId;
    RPC_UNICODE_STRING HomeDirectory;
    RPC_UNICODE_STRING HomeDirectoryDrive;
    RPC_UNICODE_STRING ScriptPath;
    RPC_UNICODE_STRING ProfilePath;
    RPC_UNICODE_STRING AdminComment;
    RPC_UNICODE_STRING WorkStations;
    OLD_LARGE_INTEGER LastLogon;
    OLD_LARGE_INTEGER LastLogoff;
    SAMPR_LOGON_HOURS LogonHours;
    unsigned short BadPasswordCount;
    unsigned short LogonCount;
    OLD_LARGE_INTEGER PasswordLastSet;
    OLD_LARGE_INTEGER AccountExpires;
    ULONG UserAccountControl;
} SAMPR_USER_ACCOUNT_INFORMATION;
typedef struct _SAMPR_USER_ACCOUNT_INFORMATION *PSAMPR_USER_ACCOUNT_INFORMATION;
typedef struct _SAMPR_USER_A_NAME_INFORMATION {
    RPC_UNICODE_STRING UserName;
} SAMPR_USER_A_NAME_INFORMATION;
typedef struct _SAMPR_USER_A_NAME_INFORMATION *PSAMPR_USER_A_NAME_INFORMATION;
typedef struct _SAMPR_USER_F_NAME_INFORMATION {
    RPC_UNICODE_STRING FullName;
} SAMPR_USER_F_NAME_INFORMATION;
typedef struct _SAMPR_USER_F_NAME_INFORMATION *PSAMPR_USER_F_NAME_INFORMATION;
typedef struct _SAMPR_USER_NAME_INFORMATION {
    RPC_UNICODE_STRING UserName;
    RPC_UNICODE_STRING FullName;
} SAMPR_USER_NAME_INFORMATION;
typedef struct _SAMPR_USER_NAME_INFORMATION *PSAMPR_USER_NAME_INFORMATION;
typedef struct _SAMPR_USER_HOME_INFORMATION {
    RPC_UNICODE_STRING HomeDirectory;
    RPC_UNICODE_STRING HomeDirectoryDrive;
} SAMPR_USER_HOME_INFORMATION;
typedef struct _SAMPR_USER_HOME_INFORMATION *PSAMPR_USER_HOME_INFORMATION;
typedef struct _SAMPR_USER_SCRIPT_INFORMATION {
    RPC_UNICODE_STRING ScriptPath;
} SAMPR_USER_SCRIPT_INFORMATION;
typedef struct _SAMPR_USER_SCRIPT_INFORMATION *PSAMPR_USER_SCRIPT_INFORMATION;
typedef struct _SAMPR_USER_PROFILE_INFORMATION {
    RPC_UNICODE_STRING ProfilePath;
} SAMPR_USER_PROFILE_INFORMATION;
typedef struct _SAMPR_USER_PROFILE_INFORMATION *PSAMPR_USER_PROFILE_INFORMATION;
typedef struct _SAMPR_USER_ADMIN_COMMENT_INFORMATION {
    RPC_UNICODE_STRING AdminComment;
} SAMPR_USER_ADMIN_COMMENT_INFORMATION;
typedef struct _SAMPR_USER_ADMIN_COMMENT_INFORMATION *PSAMPR_USER_ADMIN_COMMENT_INFORMATION;
typedef struct _SAMPR_USER_WORKSTATIONS_INFORMATION {
    RPC_UNICODE_STRING WorkStations;
} SAMPR_USER_WORKSTATIONS_INFORMATION;
typedef struct _SAMPR_USER_WORKSTATIONS_INFORMATION *PSAMPR_USER_WORKSTATIONS_INFORMATION;
typedef struct _SAMPR_USER_SET_PASSWORD_INFORMATION {
    RPC_UNICODE_STRING Password;
    BOOLEAN PasswordExpired;
} SAMPR_USER_SET_PASSWORD_INFORMATION;
typedef struct _SAMPR_USER_SET_PASSWORD_INFORMATION *PSAMPR_USER_SET_PASSWORD_INFORMATION;
typedef struct _SAMPR_USER_LOGON_HOURS_INFORMATION {
    SAMPR_LOGON_HOURS LogonHours;
} SAMPR_USER_LOGON_HOURS_INFORMATION;
typedef struct _SAMPR_USER_LOGON_HOURS_INFORMATION *PSAMPR_USER_LOGON_HOURS_INFORMATION;
typedef struct _SAMPR_USER_INTERNAL1_INFORMATION {
    ENCRYPTED_NT_OWF_PASSWORD EncryptedNtOwfPassword;
    ENCRYPTED_LM_OWF_PASSWORD EncryptedLmOwfPassword;
    BOOLEAN NtPasswordPresent;
    BOOLEAN LmPasswordPresent;
    BOOLEAN PasswordExpired;
} SAMPR_USER_INTERNAL1_INFORMATION;
typedef struct _SAMPR_USER_INTERNAL1_INFORMATION *PSAMPR_USER_INTERNAL1_INFORMATION;
typedef struct _SAMPR_USER_INTERNAL4_INFORMATION {
    SAMPR_USER_ALL_INFORMATION I1;
    SAMPR_ENCRYPTED_USER_PASSWORD UserPassword;
} SAMPR_USER_INTERNAL4_INFORMATION;
typedef struct _SAMPR_USER_INTERNAL4_INFORMATION *PSAMPR_USER_INTERNAL4_INFORMATION;
typedef struct _SAMPR_USER_INTERNAL4_INFORMATION_NEW {
    SAMPR_USER_ALL_INFORMATION I1;
    SAMPR_ENCRYPTED_USER_PASSWORD_NEW UserPassword;
} SAMPR_USER_INTERNAL4_INFORMATION_NEW;
typedef struct _SAMPR_USER_INTERNAL4_INFORMATION_NEW *PSAMPR_USER_INTERNAL4_INFORMATION_NEW;
typedef struct _SAMPR_USER_INTERNAL5_INFORMATION {
    SAMPR_ENCRYPTED_USER_PASSWORD UserPassword;
    BOOLEAN PasswordExpired;
} SAMPR_USER_INTERNAL5_INFORMATION;
typedef struct _SAMPR_USER_INTERNAL5_INFORMATION *PSAMPR_USER_INTERNAL5_INFORMATION;
typedef struct _SAMPR_USER_INTERNAL5_INFORMATION_NEW {
    SAMPR_ENCRYPTED_USER_PASSWORD_NEW UserPassword;
    BOOLEAN PasswordExpired;
} SAMPR_USER_INTERNAL5_INFORMATION_NEW;
typedef struct _SAMPR_USER_INTERNAL5_INFORMATION_NEW *PSAMPR_USER_INTERNAL5_INFORMATION_NEW;
#ifndef _NTSAM_
typedef enum _USER_INFORMATION_CLASS {
    UserGeneralInformation = 1,
    UserPreferencesInformation = 2,
    UserLogonInformation = 3,
    UserLogonHoursInformation = 4,
    UserAccountInformation = 5,
    UserNameInformation = 6,
    UserAccountNameInformation = 7,
    UserFullNameInformation = 8,
    UserPrimaryGroupInformation = 9,
    UserHomeInformation = 10,
    UserScriptInformation = 11,
    UserProfileInformation = 12,
    UserAdminCommentInformation = 13,
    UserWorkStationsInformation = 14,
    UserSetPasswordInformation = 15,
    UserControlInformation = 16,
    UserExpiresInformation = 17,
    UserInternal1Information = 18,
    UserInternal2Information = 19,
    UserParametersInformation = 20,
    UserAllInformation = 21,
    UserInternal3Information = 22,
    UserInternal4Information = 23,
    UserInternal5Information = 24,
    UserInternal4InformationNew = 25,
    UserInternal5InformationNew = 26,
    UserInternal6Information = 27,
    UserExtendedInformation = 28,
    UserLogonUIInformation = 29
} USER_INFORMATION_CLASS;
typedef enum _USER_INFORMATION_CLASS *PUSER_INFORMATION_CLASS;
#endif
typedef union _SAMPR_USER_INFO_BUFFER {
    SAMPR_USER_GENERAL_INFORMATION General;
    SAMPR_USER_PREFERENCES_INFORMATION Preferences;
    SAMPR_USER_LOGON_INFORMATION Logon;
    SAMPR_USER_LOGON_HOURS_INFORMATION LogonHours;
    SAMPR_USER_ACCOUNT_INFORMATION Account;
    SAMPR_USER_NAME_INFORMATION Name;
    SAMPR_USER_A_NAME_INFORMATION AccountName;
    SAMPR_USER_F_NAME_INFORMATION FullName;
    USER_PRIMARY_GROUP_INFORMATION PrimaryGroup;
    SAMPR_USER_HOME_INFORMATION Home;
    SAMPR_USER_SCRIPT_INFORMATION Script;
    SAMPR_USER_PROFILE_INFORMATION Profile;
    SAMPR_USER_ADMIN_COMMENT_INFORMATION AdminComment;
    SAMPR_USER_WORKSTATIONS_INFORMATION WorkStations;
    SAMPR_USER_SET_PASSWORD_INFORMATION SetPassword;
    USER_CONTROL_INFORMATION Control;
    USER_EXPIRES_INFORMATION Expires;
    SAMPR_USER_INTERNAL1_INFORMATION Internal1;
    SAMPR_USER_PARAMETERS_INFORMATION Parameters;
    SAMPR_USER_ALL_INFORMATION All;
    SAMPR_USER_INTERNAL4_INFORMATION Internal4;
    SAMPR_USER_INTERNAL5_INFORMATION Internal5;
    SAMPR_USER_INTERNAL4_INFORMATION_NEW Internal4New;
    SAMPR_USER_INTERNAL5_INFORMATION_NEW Internal5New;
} SAMPR_USER_INFO_BUFFER;
typedef union _SAMPR_USER_INFO_BUFFER *PSAMPR_USER_INFO_BUFFER;
typedef enum _PASSWORD_POLICY_VALIDATION_TYPE {
    SamValidateAuthentication = 1,
    SamValidatePasswordChange = 2,
    SamValidatePasswordReset = 3
} PASSWORD_POLICY_VALIDATION_TYPE;
typedef struct _SAM_VALIDATE_PASSWORD_HASH {
    ULONG Length;
    unsigned char *Hash;
} SAM_VALIDATE_PASSWORD_HASH;
typedef struct _SAM_VALIDATE_PASSWORD_HASH *PSAM_VALIDATE_PASSWORD_HASH;
typedef struct _SAM_VALIDATE_PERSISTED_FIELDS {
    ULONG PresentFields;
    LARGE_INTEGER PasswordLastSet;
    LARGE_INTEGER BadPasswordTime;
    LARGE_INTEGER LockoutTime;
    ULONG BadPasswordCount;
    ULONG PasswordHistoryLength;
    PSAM_VALIDATE_PASSWORD_HASH PasswordHistory;
} SAM_VALIDATE_PERSISTED_FIELDS;
typedef struct _SAM_VALIDATE_PERSISTED_FIELDS *PSAM_VALIDATE_PERSISTED_FIELDS;
typedef enum _SAM_VALIDATE_VALIDATION_STATUS {
    SamValidateSuccess = 0,
    SamValidatePasswordMustChange = 1,
    SamValidateAccountLockedOut = 2,
    SamValidatePasswordExpired = 3,
    SamValidatePasswordIncorrect = 4,
    SamValidatePasswordIsInHistory = 5,
    SamValidatePasswordTooShort = 6,
    SamValidatePasswordTooLong = 7,
    SamValidatePasswordNotComplexEnough = 8,
    SamValidatePasswordTooRecent = 9,
    SamValidatePasswordFilterError = 10
} SAM_VALIDATE_VALIDATION_STATUS;
typedef enum _SAM_VALIDATE_VALIDATION_STATUS *PSAM_VALIDATE_VALIDATION_STATUS;
typedef struct _SAM_VALIDATE_STANDARD_OUTPUT_ARG {
    SAM_VALIDATE_PERSISTED_FIELDS ChangedPersistedFields;
    SAM_VALIDATE_VALIDATION_STATUS ValidationStatus;
} SAM_VALIDATE_STANDARD_OUTPUT_ARG;
typedef struct _SAM_VALIDATE_STANDARD_OUTPUT_ARG *PSAM_VALIDATE_STANDARD_OUTPUT_ARG;
typedef struct _SAM_VALIDATE_AUTHENTICATION_INPUT_ARG {
    SAM_VALIDATE_PERSISTED_FIELDS InputPersistedFields;
    unsigned char PasswordMatched;
} SAM_VALIDATE_AUTHENTICATION_INPUT_ARG;
typedef struct _SAM_VALIDATE_AUTHENTICATION_INPUT_ARG *PSAM_VALIDATE_AUTHENTICATION_INPUT_ARG;
typedef struct _SAM_VALIDATE_PASSWORD_CHANGE_INPUT_ARG {
    SAM_VALIDATE_PERSISTED_FIELDS InputPersistedFields;
    RPC_UNICODE_STRING ClearPassword;
    RPC_UNICODE_STRING UserAccountName;
    SAM_VALIDATE_PASSWORD_HASH HashedPassword;
    unsigned char PasswordMatch;
} SAM_VALIDATE_PASSWORD_CHANGE_INPUT_ARG;
typedef struct _SAM_VALIDATE_PASSWORD_CHANGE_INPUT_ARG *PSAM_VALIDATE_PASSWORD_CHANGE_INPUT_ARG;
typedef struct _SAM_VALIDATE_PASSWORD_RESET_INPUT_ARG {
    SAM_VALIDATE_PERSISTED_FIELDS InputPersistedFields;
    RPC_UNICODE_STRING ClearPassword;
    RPC_UNICODE_STRING UserAccountName;
    SAM_VALIDATE_PASSWORD_HASH HashedPassword;
    unsigned char PasswordMustChangeAtNextLogon;
    unsigned char ClearLockout;
} SAM_VALIDATE_PASSWORD_RESET_INPUT_ARG;
typedef struct _SAM_VALIDATE_PASSWORD_RESET_INPUT_ARG *PSAM_VALIDATE_PASSWORD_RESET_INPUT_ARG;
typedef union _SAM_VALIDATE_INPUT_ARG {
    SAM_VALIDATE_AUTHENTICATION_INPUT_ARG ValidateAuthenticationInput;
    SAM_VALIDATE_PASSWORD_CHANGE_INPUT_ARG ValidatePasswordChangeInput;
    SAM_VALIDATE_PASSWORD_RESET_INPUT_ARG ValidatePasswordResetInput;
} SAM_VALIDATE_INPUT_ARG;
typedef union _SAM_VALIDATE_INPUT_ARG *PSAM_VALIDATE_INPUT_ARG;
typedef union _SAM_VALIDATE_OUTPUT_ARG {
    SAM_VALIDATE_STANDARD_OUTPUT_ARG ValidateAuthenticationOutput;
    SAM_VALIDATE_STANDARD_OUTPUT_ARG ValidatePasswordChangeOutput;
    SAM_VALIDATE_STANDARD_OUTPUT_ARG ValidatePasswordResetOutput;
} SAM_VALIDATE_OUTPUT_ARG;
typedef union _SAM_VALIDATE_OUTPUT_ARG *PSAM_VALIDATE_OUTPUT_ARG;
/*****************************************************************************
 * samr interface (v1.0)
 */
#ifndef __samr_INTERFACE_DEFINED__
#define __samr_INTERFACE_DEFINED__

extern RPC_IF_HANDLE samr_v1_0_c_ifspec;
extern RPC_IF_HANDLE samr_v1_0_s_ifspec;
NTSTATUS __stdcall SamrConnect(
    PSAMPR_SERVER_NAME ServerName,
    SAMPR_HANDLE *ServerHandle,
    ACCESS_MASK DesiredAccess);

NTSTATUS __stdcall SamrCloseHandle(
    SAMPR_HANDLE *SamHandle);

NTSTATUS __stdcall SamrSetSecurityObject(
    SAMPR_HANDLE ObjectHandle,
    SECURITY_INFORMATION SecurityInformation,
    PSAMPR_SR_SECURITY_DESCRIPTOR SecurityDescriptor);

NTSTATUS __stdcall SamrQuerySecurityObject(
    SAMPR_HANDLE ObjectHandle,
    SECURITY_INFORMATION SecurityInformation,
    PSAMPR_SR_SECURITY_DESCRIPTOR *SecurityDescriptor);

NTSTATUS __stdcall SamrShutdownSamServer(
    SAMPR_HANDLE ServerHandle);

NTSTATUS __stdcall SamrLookupDomainInSamServer(
    SAMPR_HANDLE ServerHandle,
    PRPC_UNICODE_STRING Name,
    PRPC_SID *DomainId);

NTSTATUS __stdcall SamrEnumerateDomainsInSamServer(
    SAMPR_HANDLE ServerHandle,
    ULONG *EnumerationContext,
    PSAMPR_ENUMERATION_BUFFER *Buffer,
    ULONG PreferedMaximumLength,
    ULONG *CountReturned);

NTSTATUS __stdcall SamrOpenDomain(
    SAMPR_HANDLE ServerHandle,
    ACCESS_MASK DesiredAccess,
    PRPC_SID DomainId,
    SAMPR_HANDLE *DomainHandle);

NTSTATUS __stdcall SamrQueryInformationDomain(
    SAMPR_HANDLE DomainHandle,
    DOMAIN_INFORMATION_CLASS DomainInformationClass,
    PSAMPR_DOMAIN_INFO_BUFFER *Buffer);

NTSTATUS __stdcall SamrSetInformationDomain(
    SAMPR_HANDLE DomainHandle,
    DOMAIN_INFORMATION_CLASS DomainInformationClass,
    PSAMPR_DOMAIN_INFO_BUFFER DomainInformation);

NTSTATUS __stdcall SamrCreateGroupInDomain(
    SAMPR_HANDLE DomainHandle,
    PRPC_UNICODE_STRING Name,
    ACCESS_MASK DesiredAccess,
    SAMPR_HANDLE *GroupHandle,
    ULONG *RelativeId);

NTSTATUS __stdcall SamrEnumerateGroupsInDomain(
    SAMPR_HANDLE DomainHandle,
    ULONG *EnumerationContext,
    PSAMPR_ENUMERATION_BUFFER *Buffer,
    ULONG PreferedMaximumLength,
    ULONG *CountReturned);

NTSTATUS __stdcall SamrCreateUserInDomain(
    SAMPR_HANDLE DomainHandle,
    PRPC_UNICODE_STRING Name,
    ACCESS_MASK DesiredAccess,
    SAMPR_HANDLE *UserHandle,
    ULONG *RelativeId);

NTSTATUS __stdcall SamrEnumerateUsersInDomain(
    SAMPR_HANDLE DomainHandle,
    ULONG *EnumerationContext,
    ULONG UserAccountControl,
    PSAMPR_ENUMERATION_BUFFER *Buffer,
    ULONG PreferedMaximumLength,
    ULONG *CountReturned);

NTSTATUS __stdcall SamrCreateAliasInDomain(
    SAMPR_HANDLE DomainHandle,
    PRPC_UNICODE_STRING AccountName,
    ACCESS_MASK DesiredAccess,
    SAMPR_HANDLE *AliasHandle,
    ULONG *RelativeId);

NTSTATUS __stdcall SamrEnumerateAliasesInDomain(
    SAMPR_HANDLE DomainHandle,
    ULONG *EnumerationContext,
    PSAMPR_ENUMERATION_BUFFER *Buffer,
    ULONG PreferedMaximumLength,
    ULONG *CountReturned);

NTSTATUS __stdcall SamrGetAliasMembership(
    SAMPR_HANDLE DomainHandle,
    PSAMPR_PSID_ARRAY SidArray,
    PSAMPR_ULONG_ARRAY Membership);

NTSTATUS __stdcall SamrLookupNamesInDomain(
    SAMPR_HANDLE DomainHandle,
    ULONG Count,
    RPC_UNICODE_STRING Names[],
    PSAMPR_ULONG_ARRAY RelativeIds,
    PSAMPR_ULONG_ARRAY Use);

NTSTATUS __stdcall SamrLookupIdsInDomain(
    SAMPR_HANDLE DomainHandle,
    ULONG Count,
    ULONG *RelativeIds,
    PSAMPR_RETURNED_USTRING_ARRAY Names,
    PSAMPR_ULONG_ARRAY Use);

NTSTATUS __stdcall SamrOpenGroup(
    SAMPR_HANDLE DomainHandle,
    ACCESS_MASK DesiredAccess,
    ULONG GroupId,
    SAMPR_HANDLE *GroupHandle);

NTSTATUS __stdcall SamrQueryInformationGroup(
    SAMPR_HANDLE GroupHandle,
    GROUP_INFORMATION_CLASS GroupInformationClass,
    PSAMPR_GROUP_INFO_BUFFER *Buffer);

NTSTATUS __stdcall SamrSetInformationGroup(
    SAMPR_HANDLE GroupHandle,
    GROUP_INFORMATION_CLASS GroupInformationClass,
    PSAMPR_GROUP_INFO_BUFFER Buffer);

NTSTATUS __stdcall SamrAddMemberToGroup(
    SAMPR_HANDLE GroupHandle,
    ULONG MemberId,
    ULONG Attributes);

NTSTATUS __stdcall SamrDeleteGroup(
    SAMPR_HANDLE *GroupHandle);

NTSTATUS __stdcall SamrRemoveMemberFromGroup(
    SAMPR_HANDLE GroupHandle,
    ULONG MemberId);

NTSTATUS __stdcall SamrGetMembersInGroup(
    SAMPR_HANDLE GroupHandle,
    PSAMPR_GET_MEMBERS_BUFFER *Members);

NTSTATUS __stdcall SamrSetMemberAttributesOfGroup(
    SAMPR_HANDLE GroupHandle,
    ULONG MemberId,
    ULONG Attributes);

NTSTATUS __stdcall SamrOpenAlias(
    SAMPR_HANDLE DomainHandle,
    ACCESS_MASK DesiredAccess,
    ULONG AliasId,
    SAMPR_HANDLE *AliasHandle);

NTSTATUS __stdcall SamrQueryInformationAlias(
    SAMPR_HANDLE AliasHandle,
    ALIAS_INFORMATION_CLASS AliasInformationClass,
    PSAMPR_ALIAS_INFO_BUFFER *Buffer);

NTSTATUS __stdcall SamrSetInformationAlias(
    SAMPR_HANDLE AliasHandle,
    ALIAS_INFORMATION_CLASS AliasInformationClass,
    PSAMPR_ALIAS_INFO_BUFFER Buffer);

NTSTATUS __stdcall SamrDeleteAlias(
    SAMPR_HANDLE *AliasHandle);

NTSTATUS __stdcall SamrAddMemberToAlias(
    SAMPR_HANDLE AliasHandle,
    PRPC_SID MemberId);

NTSTATUS __stdcall SamrRemoveMemberFromAlias(
    SAMPR_HANDLE AliasHandle,
    PRPC_SID MemberId);

NTSTATUS __stdcall SamrGetMembersInAlias(
    SAMPR_HANDLE AliasHandle,
    PSAMPR_PSID_ARRAY_OUT Members);

NTSTATUS __stdcall SamrOpenUser(
    SAMPR_HANDLE DomainHandle,
    ACCESS_MASK DesiredAccess,
    ULONG UserId,
    SAMPR_HANDLE *UserHandle);

NTSTATUS __stdcall SamrDeleteUser(
    SAMPR_HANDLE *UserHandle);

NTSTATUS __stdcall SamrQueryInformationUser(
    SAMPR_HANDLE UserHandle,
    USER_INFORMATION_CLASS UserInformationClass,
    PSAMPR_USER_INFO_BUFFER *Buffer);

NTSTATUS __stdcall SamrSetInformationUser(
    SAMPR_HANDLE UserHandle,
    USER_INFORMATION_CLASS UserInformationClass,
    PSAMPR_USER_INFO_BUFFER Buffer);

NTSTATUS __stdcall SamrChangePasswordUser(
    SAMPR_HANDLE UserHandle,
    unsigned char LmPresent,
    PENCRYPTED_LM_OWF_PASSWORD OldLmEncryptedWithNewLm,
    PENCRYPTED_LM_OWF_PASSWORD NewLmEncryptedWithOldLm,
    unsigned char NtPresent,
    PENCRYPTED_NT_OWF_PASSWORD OldNtEncryptedWithNewNt,
    PENCRYPTED_NT_OWF_PASSWORD NewNtEncryptedWithOldNt,
    unsigned char NtCrossEncryptionPresent,
    PENCRYPTED_NT_OWF_PASSWORD NewNtEncryptedWithNewLm,
    unsigned char LmCrossEncryptionPresent,
    PENCRYPTED_LM_OWF_PASSWORD NewLmEncryptedWithNewNt);

NTSTATUS __stdcall SamrGetGroupsForUser(
    SAMPR_HANDLE UserHandle,
    PSAMPR_GET_GROUPS_BUFFER *Groups);

NTSTATUS __stdcall SamrQueryDisplayInformation(
    SAMPR_HANDLE DomainHandle,
    DOMAIN_DISPLAY_INFORMATION DisplayInformationClass,
    ULONG Index,
    ULONG EntryCount,
    ULONG PreferredMaximumLength,
    ULONG *TotalAvailable,
    ULONG *TotalReturned,
    PSAMPR_DISPLAY_INFO_BUFFER Buffer);

NTSTATUS __stdcall SamrGetDisplayEnumerationIndex(
    SAMPR_HANDLE DomainHandle,
    DOMAIN_DISPLAY_INFORMATION DisplayInformationClass,
    PRPC_UNICODE_STRING Prefix,
    ULONG *Index);

NTSTATUS __stdcall SamrTestPrivateFunctionsDomain(
    SAMPR_HANDLE DomainHandle);

NTSTATUS __stdcall SamrTestPrivateFunctionsUser(
    SAMPR_HANDLE UserHandle);

NTSTATUS __stdcall SamrGetUserDomainPasswordInformation(
    SAMPR_HANDLE UserHandle,
    PUSER_DOMAIN_PASSWORD_INFORMATION PasswordInformation);

NTSTATUS __stdcall SamrRemoveMemberFromForeignDomain(
    SAMPR_HANDLE DomainHandle,
    PRPC_SID MemberSid);

NTSTATUS __stdcall SamrQueryInformationDomain2(
    SAMPR_HANDLE DomainHandle,
    DOMAIN_INFORMATION_CLASS DomainInformationClass,
    PSAMPR_DOMAIN_INFO_BUFFER *Buffer);

NTSTATUS __stdcall SamrQueryInformationUser2(
    SAMPR_HANDLE UserHandle,
    USER_INFORMATION_CLASS UserInformationClass,
    PSAMPR_USER_INFO_BUFFER *Buffer);

NTSTATUS __stdcall SamrQueryDisplayInformation2(
    SAMPR_HANDLE DomainHandle,
    DOMAIN_DISPLAY_INFORMATION DisplayInformationClass,
    ULONG Index,
    ULONG EntryCount,
    ULONG PreferredMaximumLength,
    ULONG *TotalAvailable,
    ULONG *TotalReturned,
    PSAMPR_DISPLAY_INFO_BUFFER Buffer);

NTSTATUS __stdcall SamrGetDisplayEnumerationIndex2(
    SAMPR_HANDLE DomainHandle,
    DOMAIN_DISPLAY_INFORMATION DisplayInformationClass,
    PRPC_UNICODE_STRING Prefix,
    ULONG *Index);

NTSTATUS __stdcall SamrCreateUser2InDomain(
    SAMPR_HANDLE DomainHandle,
    PRPC_UNICODE_STRING Name,
    ULONG AccountType,
    ACCESS_MASK DesiredAccess,
    SAMPR_HANDLE *UserHandle,
    ULONG *GrantedAccess,
    ULONG *RelativeId);

NTSTATUS __stdcall SamrQueryDisplayInformation3(
    SAMPR_HANDLE DomainHandle,
    DOMAIN_DISPLAY_INFORMATION DisplayInformationClass,
    ULONG Index,
    ULONG EntryCount,
    ULONG PreferredMaximumLength,
    ULONG *TotalAvailable,
    ULONG *TotalReturned,
    PSAMPR_DISPLAY_INFO_BUFFER Buffer);

NTSTATUS __stdcall SamrAddMultipleMembersToAlias(
    SAMPR_HANDLE AliasHandle,
    PSAMPR_PSID_ARRAY MembersBuffer);

NTSTATUS __stdcall SamrRemoveMultipleMembersFromAlias(
    SAMPR_HANDLE AliasHandle,
    PSAMPR_PSID_ARRAY MembersBuffer);

NTSTATUS __stdcall SamrOemChangePasswordUser2(
    handle_t BindingHandle,
    PRPC_STRING ServerName,
    PRPC_STRING UserName,
    PSAMPR_ENCRYPTED_USER_PASSWORD NewPasswordEncryptedWithOldLm,
    PENCRYPTED_LM_OWF_PASSWORD OldLmOwfPasswordEncryptedWithNewLm);

NTSTATUS __stdcall SamrUnicodeChangePasswordUser2(
    handle_t BindingHandle,
    PRPC_UNICODE_STRING ServerName,
    PRPC_UNICODE_STRING UserName,
    PSAMPR_ENCRYPTED_USER_PASSWORD NewPasswordEncryptedWithOldNt,
    PENCRYPTED_NT_OWF_PASSWORD OldNtOwfPasswordEncryptedWithNewNt,
    unsigned char LmPresent,
    PSAMPR_ENCRYPTED_USER_PASSWORD NewPasswordEncryptedWithOldLm,
    PENCRYPTED_LM_OWF_PASSWORD OldLmOwfPasswordEncryptedWithNewNt);

NTSTATUS __stdcall SamrGetDomainPasswordInformation(
    handle_t BindingHandle,
    PRPC_UNICODE_STRING Unused,
    PUSER_DOMAIN_PASSWORD_INFORMATION PasswordInformation);

NTSTATUS __stdcall SamrConnect2(
    PSAMPR_SERVER_NAME ServerName,
    SAMPR_HANDLE *ServerHandle,
    ACCESS_MASK DesiredAccess);

NTSTATUS __stdcall SamrSetInformationUser2(
    SAMPR_HANDLE UserHandle,
    USER_INFORMATION_CLASS UserInformationClass,
    PSAMPR_USER_INFO_BUFFER Buffer);

NTSTATUS __stdcall SamrSetBootKeyInformation(
    handle_t BindingHandle);

NTSTATUS __stdcall SamrGetBootKeyInformation(
    handle_t BindingHandle);

NTSTATUS __stdcall SamrConnect3(
    handle_t BindingHandle);

NTSTATUS __stdcall SamrConnect4(
    PSAMPR_SERVER_NAME ServerName,
    SAMPR_HANDLE *ServerHandle,
    ULONG ClientRevision,
    ACCESS_MASK DesiredAccess);

NTSTATUS __stdcall SamrUnicodeChangePasswordUser3(
    handle_t BindingHandle);

NTSTATUS __stdcall SamrConnect5(
    PSAMPR_SERVER_NAME ServerName,
    ACCESS_MASK DesiredAccess,
    ULONG InVersion,
    SAMPR_REVISION_INFO *InRevisionInfo,
    ULONG *OutVersion,
    SAMPR_REVISION_INFO *OutRevisionInfo,
    SAMPR_HANDLE *ServerHandle);

NTSTATUS __stdcall SamrRidToSid(
    SAMPR_HANDLE ObjectHandle,
    ULONG Rid,
    PRPC_SID *Sid);

NTSTATUS __stdcall SamrSetDSRMPassword(
    handle_t BindingHandle,
    PRPC_UNICODE_STRING Unused,
    ULONG UserId,
    PENCRYPTED_NT_OWF_PASSWORD EncryptedNtOwfPassword);

NTSTATUS __stdcall SamrValidatePassword(
    handle_t Handle,
    PASSWORD_POLICY_VALIDATION_TYPE ValidationType,
    PSAM_VALIDATE_INPUT_ARG InputArg,
    PSAM_VALIDATE_OUTPUT_ARG *OutputArg);


#endif  /* __samr_INTERFACE_DEFINED__ */

/* Begin additional prototypes for all interfaces */

handle_t __RPC_USER PSAMPR_SERVER_NAME_bind(PSAMPR_SERVER_NAME);
void __RPC_USER PSAMPR_SERVER_NAME_unbind(PSAMPR_SERVER_NAME, handle_t);
void __RPC_USER SAMPR_HANDLE_rundown(SAMPR_HANDLE);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __sam_c_h__ */
