/*** Autogenerated by WIDL <undefined version> from /home/jens/winos/reactos/sdk/include/reactos/idl/netlogon.idl - Do not edit ***/

#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#ifdef __REACTOS__
#define WIN32_LEAN_AND_MEAN
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __netlogon_c_h__
#define __netlogon_c_h__

/* Forward declarations */

/* Headers for imported files */


#ifdef __cplusplus
extern "C" {
#endif

#ifndef _DTYP_IDL
#define _DTYP_IDL
#ifndef _WINDEF_H
typedef int BOOL;
typedef int *PBOOL;
typedef int *LPBOOL;
typedef unsigned char BYTE;
typedef unsigned char *PBYTE;
typedef unsigned char *LPBYTE;
typedef ULONG DWORD;
typedef ULONG *PDWORD;
typedef ULONG *LPDWORD;
#endif
#ifndef _BASETSD_H_
typedef unsigned int DWORD32;
typedef UINT64 DWORD64;
#endif
#ifndef _WINDEF_H
typedef int INT;
typedef int *LPINT;
#endif
#ifndef _BASETSD_H_
typedef signed char INT8;
typedef signed short INT16;
typedef signed int INT32;
typedef INT64 INT64;
#endif
#ifndef _BASETSD_H_
typedef signed int LONG32;
typedef INT64 LONG64;
#endif
typedef UINT64 QWORD;
#ifndef _WINNT_
typedef short SHORT;
#endif
typedef INT64 TIME;
#ifndef _WINNT_
typedef char CHAR;
typedef char *PCHAR;
typedef unsigned char UCHAR;
typedef unsigned char *PUCHAR;
#endif
#ifndef _WINDEF_H
typedef unsigned int UINT;
#endif
#ifndef _BASETSD_H_
typedef unsigned char UINT8;
typedef unsigned short UINT16;
typedef unsigned int UINT32;
typedef UINT64 UINT64;
#endif
#ifndef _WINNT_
typedef ULONG ULONG;
typedef ULONG *PULONG;
#endif
#ifndef _BASETSD_H_
typedef unsigned int ULONG32;
typedef UINT64 ULONG64;
#endif
#ifndef _WINNT_
typedef UINT64 ULONGLONG;
typedef unsigned short USHORT;
#endif
#ifndef _WINDEF_H
typedef unsigned short WORD;
typedef unsigned short *PWORD;
typedef unsigned short *LPWORD;
#endif
#ifndef _WINNT_
typedef LONG LONG;
typedef LONG *PLONG;
#endif
#ifndef _WINDEF_H
typedef LONG *LPLONG;
#endif
#ifndef _WINNT_
typedef INT64 LONGLONG;
#endif
#ifndef _WINDEF_H
typedef float FLOAT;
#endif
#ifndef __wtypes_h__
typedef double DOUBLE;
#endif
#ifndef _WINNT_
typedef BYTE BOOLEAN;
typedef BYTE *PBOOLEAN;
#endif
#ifndef _BASETSD_H_
typedef LONG LONG_PTR;
typedef ULONG ULONG_PTR;
typedef ULONG_PTR SIZE_T;
typedef ULONG_PTR DWORD_PTR;
#endif
typedef DWORD NET_API_STATUS;
#ifndef _WINNT_
typedef ULONGLONG DWORDLONG;
typedef ULONGLONG *PDWORDLONG;
#endif
typedef DWORD HCALL;
#ifndef _WINNT_
typedef void *HANDLE;
typedef void *PVOID;
#endif
#ifndef __WINE_RPCDCE_H
typedef void *RPC_BINDING_HANDLE;
#endif
typedef void *PCONTEXT_HANDLE;
typedef PCONTEXT_HANDLE *PPCONTEXT_HANDLE;
#ifndef _WINNT_
typedef wchar_t WCHAR;
typedef wchar_t *PWCHAR;
#if 0
typedef wchar_t UNICODE;
#endif
typedef const char *LPCSTR;
typedef const wchar_t *LPCWSTR;
typedef char *PSTR;
typedef char *LPSTR;
typedef wchar_t *LPWSTR;
typedef wchar_t *PWSTR;
#endif
typedef const wchar_t *LMCSTR;
typedef WCHAR *LMSTR;
#ifndef __wtypes_h__
typedef WCHAR *BSTR;
#endif
#if 0
typedef LPCSTR LPCTSTR;
typedef LPSTR LPTSTR;
typedef CHAR TCHAR;
#endif
#if 0
typedef struct _FILETIME {
    DWORD dwLowDateTime;
    DWORD dwHighDateTime;
} FILETIME;
typedef struct _FILETIME *PFILETIME;
typedef struct _FILETIME *LPFILETIME;
typedef struct _GUID {
    DWORD Data1;
    WORD Data2;
    WORD Data3;
    BYTE Data4[8];
} GUID;
typedef struct _GUID UUID;
typedef struct _GUID *PGUID;
typedef struct _LARGE_INTEGER {
    LONGLONG QuadPart;
} LARGE_INTEGER;
typedef struct _LARGE_INTEGER *PLARGE_INTEGER;
typedef DWORD LCID;
#endif
typedef struct _RPC_UNICODE_STRING {
    USHORT Length;
    USHORT MaximumLength;
    LPWSTR Buffer;
} RPC_UNICODE_STRING;
typedef struct _RPC_UNICODE_STRING *PRPC_UNICODE_STRING;
#if 0
typedef struct _SYSTEMTIME {
    WORD wYear;
    WORD wMonth;
    WORD wDayOfWeek;
    WORD wDay;
    WORD wHour;
    WORD wMinute;
    WORD wSecond;
    WORD wMilliseconds;
} SYSTEMTIME;
typedef struct _SYSTEMTIME *PSYSTEMTIME;
typedef struct _UINT128 {
    UINT64 lower;
    UINT64 upper;
} UINT128;
typedef struct _UINT128 *PUINT128;
typedef struct _ULARGE_INTEGER {
    ULONGLONG QuadPart;
} ULARGE_INTEGER;
typedef struct _ULARGE_INTEGER *PULARGE_INTEGER;
#endif
#if 0
typedef struct _SID_IDENTIFIER_AUTHORITY {
    BYTE Value[6];
} SID_IDENTIFIER_AUTHORITY;
typedef struct _SID {
    BYTE Revision;
    BYTE SubAuthorityCount;
    SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
    DWORD SubAuthority[1];
} SID;
typedef struct _SID *PSID;
typedef struct _ACCESS_MASK {
    DWORD ACCESS_MASK;
} ACCESS_MASK;
typedef struct _ACCESS_MASK *PACCESS_MASK;
typedef struct _ACE_HEADER {
    UCHAR AceType;
    UCHAR AceFlags;
    USHORT AceSize;
} ACE_HEADER;
typedef struct _ACE_HEADER *PACE_HEADER;
typedef struct _ACCESS_ALLOWED_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} ACCESS_ALLOWED_ACE;
typedef struct _ACCESS_ALLOWED_ACE *PACCESS_ALLOWED_ACE;
typedef struct _ACCESS_ALLOWED_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
} ACCESS_ALLOWED_OBJECT_ACE;
typedef struct _ACCESS_ALLOWED_OBJECT_ACE *PACCESS_ALLOWED_OBJECT_ACE;
typedef struct _ACCESS_DENIED_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} ACCESS_DENIED_ACE;
typedef struct _ACCESS_DENIED_ACE *PACCESS_DENIED_ACE;
typedef struct _ACCESS_ALLOWED_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} ACCESS_ALLOWED_CALLBACK_ACE;
typedef struct _ACCESS_ALLOWED_CALLBACK_ACE *PACCESS_ALLOWED_CALLBACK_ACE;
typedef struct _ACCESS_DENIED_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} ACCESS_DENIED_CALLBACK_ACE;
typedef struct _ACCESS_DENIED_CALLBACK_ACE *PACCESS_DENIED_CALLBACK_ACE;
typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
} ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;
typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE;
typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
} ACCESS_DENIED_CALLBACK_OBJECT_ACE;
typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE *PACCESS_DENIED_CALLBACK_OBJECT_ACE;
typedef struct _SYSTEM_AUDIT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} SYSTEM_AUDIT_ACE;
typedef struct _SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE;
typedef struct _SYSTEM_AUDIT_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} SYSTEM_AUDIT_CALLBACK_ACE;
typedef struct _SYSTEM_AUDIT_CALLBACK_ACE *PSYSTEM_AUDIT_CALLBACK_ACE;
typedef struct _SYSTEM_MANDATORY_LABEL_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} SYSTEM_MANDATORY_LABEL_ACE;
typedef struct _SYSTEM_MANDATORY_LABEL_ACE *PSYSTEM_MANDATORY_LABEL_ACE;
typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
} SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;
typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE;
typedef struct _ACL {
    UCHAR AclRevision;
    UCHAR Sbz1;
    USHORT AclSize;
    USHORT AceCount;
    USHORT Sbz2;
} ACL;
typedef struct _ACL *PACL;
typedef struct _SECURITY_DESCRIPTOR {
    UCHAR Revision;
    UCHAR Sbz1;
    USHORT Control;
    ULONG Owner;
    ULONG Group;
    ULONG Sacl;
    ULONG Dacl;
} SECURITY_DESCRIPTOR;
typedef struct _SECURITY_DESCRIPTOR *PSECURITY_DESCRIPTOR;
typedef DWORD SECURITY_INFORMATION;
typedef DWORD *PSECURITY_INFORMATION;
#endif
typedef struct _RPC_SID {
    UCHAR Revision;
    UCHAR SubAuthorityCount;
    SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
    DWORD SubAuthority[1];
} RPC_SID;
typedef struct _RPC_SID *PRPC_SID;
#endif /* _DTYP_IDL */
#ifndef _NTSECAPI_H
typedef ULONG NTSTATUS;
typedef struct _STRING {
    USHORT Length;
    USHORT MaximumLength;
    CHAR *Buffer;
} STRING;
typedef struct _STRING *PSTRING;
#endif
typedef struct _OLD_LARGE_INTEGER {
    ULONG LowPart;
    LONG HighPart;
} OLD_LARGE_INTEGER;
typedef struct _OLD_LARGE_INTEGER *POLD_LARGE_INTEGER;
typedef struct _CYPHER_BLOCK {
    CHAR data[8];
} CYPHER_BLOCK;
typedef struct _CYPHER_BLOCK *PCYPHER_BLOCK;
typedef struct _NT_OWF_PASSWORD {
    CYPHER_BLOCK data[2];
} NT_OWF_PASSWORD;
typedef struct _NT_OWF_PASSWORD *PNT_OWF_PASSWORD;
typedef struct _NT_OWF_PASSWORD ENCRYPTED_NT_OWF_PASSWORD;
typedef struct _NT_OWF_PASSWORD *PENCRYPTED_NT_OWF_PASSWORD;
typedef struct _LM_OWF_PASSWORD {
    CYPHER_BLOCK data[2];
} LM_OWF_PASSWORD;
typedef struct _LM_OWF_PASSWORD *PLM_OWF_PASSWORD;
typedef struct _LM_OWF_PASSWORD ENCRYPTED_LM_OWF_PASSWORD;
typedef struct _LM_OWF_PASSWORD *PENCRYPTED_LM_OWF_PASSWORD;
typedef wchar_t *LOGONSRV_HANDLE;
typedef struct _NLPR_SID_INFORMATION {
    PRPC_SID SidPointer;
} NLPR_SID_INFORMATION;
typedef struct _NLPR_SID_INFORMATION *PNLPR_SID_INFORMATION;
typedef struct _NLPR_SID_ARRAY {
    ULONG Count;
    PNLPR_SID_INFORMATION Sids;
} NLPR_SID_ARRAY;
typedef struct _NLPR_SID_ARRAY *PNLPR_SID_ARRAY;
typedef struct _NLPR_CR_CIPHER_VALUE {
    ULONG Length;
    ULONG MaximumLength;
    UCHAR *Buffer;
} NLPR_CR_CIPHER_VALUE;
typedef struct _NLPR_CR_CIPHER_VALUE *PNLPR_CR_CIPHER_VALUE;
typedef struct _NLPR_LOGON_HOURS {
    USHORT UnitsPerWeek;
    UCHAR *LogonHours;
} NLPR_LOGON_HOURS;
typedef struct _NLPR_LOGON_HOURS *PNLPR_LOGON_HOURS;
typedef struct _NLPR_USER_PRIVATE_INFO {
    UCHAR SensitiveData;
    ULONG DataLength;
    UCHAR *Data;
} NLPR_USER_PRIVATE_INFO;
typedef struct _NLPR_USER_PRIVATE_INFO *PNLPR_USER_PRIVATE_INFO;
typedef struct _NLPR_MODIFIED_COUNT {
    OLD_LARGE_INTEGER ModifiedCount;
} NLPR_MODIFIED_COUNT;
typedef struct _NLPR_MODIFIED_COUNT *PNLPR_MODIFIED_COUNT;
typedef struct _NLPR_QUOTA_LIMITS {
    ULONG PagedPoolLimit;
    ULONG NonPagedPoolLimit;
    ULONG MinimumWorkingSetSize;
    ULONG MaximumWorkingSetSize;
    ULONG PagefileLimit;
    OLD_LARGE_INTEGER Reserved;
} NLPR_QUOTA_LIMITS;
typedef struct _NLPR_QUOTA_LIMITS *PNLPR_QUOTA_LIMITS;
typedef struct _NETLOGON_DELTA_USER {
    RPC_UNICODE_STRING UserName;
    RPC_UNICODE_STRING FullName;
    ULONG UserId;
    ULONG PrimaryGroupId;
    RPC_UNICODE_STRING HomeDirectory;
    RPC_UNICODE_STRING HomeDirectoryDrive;
    RPC_UNICODE_STRING ScriptPath;
    RPC_UNICODE_STRING AdminComment;
    RPC_UNICODE_STRING WorkStations;
    OLD_LARGE_INTEGER LastLogon;
    OLD_LARGE_INTEGER LastLogoff;
    NLPR_LOGON_HOURS LogonHours;
    USHORT BadPasswordCount;
    USHORT LogonCount;
    OLD_LARGE_INTEGER PasswordLastSet;
    OLD_LARGE_INTEGER AccountExpires;
    ULONG UserAccountControl;
    ENCRYPTED_NT_OWF_PASSWORD EncryptedNtOwfPassword;
    ENCRYPTED_LM_OWF_PASSWORD EncryptedLmOwfPassword;
    UCHAR NtPasswordPresent;
    UCHAR LmPasswordPresent;
    UCHAR PasswordExpired;
    RPC_UNICODE_STRING UserComment;
    RPC_UNICODE_STRING Parameters;
    USHORT CountryCode;
    USHORT CodePage;
    NLPR_USER_PRIVATE_INFO PrivateData;
    SECURITY_INFORMATION SecurityInformation;
    ULONG SecuritySize;
    UCHAR *SecurityDescriptor;
    RPC_UNICODE_STRING ProfilePath;
    RPC_UNICODE_STRING DummyString2;
    RPC_UNICODE_STRING DummyString3;
    RPC_UNICODE_STRING DummyString4;
    ULONG DummyLong1;
    ULONG DummyLong2;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_DELTA_USER;
typedef struct _NETLOGON_DELTA_USER *PNETLOGON_DELTA_USER;
typedef struct _NETLOGON_DELTA_GROUP {
    RPC_UNICODE_STRING Name;
    ULONG RelativeId;
    ULONG Attributes;
    RPC_UNICODE_STRING AdminComment;
    SECURITY_INFORMATION SecurityInformation;
    ULONG SecuritySize;
    UCHAR *SecurityDescriptor;
    RPC_UNICODE_STRING DummyString1;
    RPC_UNICODE_STRING DummyString2;
    RPC_UNICODE_STRING DummyString3;
    RPC_UNICODE_STRING DummyString4;
    ULONG DummyLong1;
    ULONG DummyLong2;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_DELTA_GROUP;
typedef struct _NETLOGON_DELTA_GROUP *PNETLOGON_DELTA_GROUP;
typedef struct _NETLOGON_DELTA_GROUP_MEMBER {
    ULONG *Members;
    ULONG *Attributes;
    ULONG MemberCount;
    ULONG DummyLong1;
    ULONG DummyLong2;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_DELTA_GROUP_MEMBER;
typedef struct _NETLOGON_DELTA_GROUP_MEMBER *PNETLOGON_DELTA_GROUP_MEMBER;
typedef struct _NETLOGON_DELTA_ALIAS {
    RPC_UNICODE_STRING Name;
    ULONG RelativeId;
    SECURITY_INFORMATION SecurityInformation;
    ULONG SecuritySize;
    UCHAR *SecurityDescriptor;
    RPC_UNICODE_STRING Comment;
    RPC_UNICODE_STRING DummyString2;
    RPC_UNICODE_STRING DummyString3;
    RPC_UNICODE_STRING DummyString4;
    ULONG DummyLong1;
    ULONG DummyLong2;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_DELTA_ALIAS;
typedef struct _NETLOGON_DELTA_ALIAS *PNETLOGON_DELTA_ALIAS;
typedef struct _NETLOGON_DELTA_ALIAS_MEMBER {
    NLPR_SID_ARRAY Members;
    ULONG DummyLong1;
    ULONG DummyLong2;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_DELTA_ALIAS_MEMBER;
typedef struct _NETLOGON_DELTA_ALIAS_MEMBER *PNETLOGON_DELTA_ALIAS_MEMBER;
typedef struct _NETLOGON_DELTA_DOMAIN {
    RPC_UNICODE_STRING DomainName;
    RPC_UNICODE_STRING OemInformation;
    OLD_LARGE_INTEGER ForceLogoff;
    USHORT MinPasswordLength;
    USHORT PasswordHistoryLength;
    OLD_LARGE_INTEGER MaxPasswordAge;
    OLD_LARGE_INTEGER MinPasswordAge;
    OLD_LARGE_INTEGER DomainModifiedCount;
    OLD_LARGE_INTEGER DomainCreationTime;
    SECURITY_INFORMATION SecurityInformation;
    ULONG SecuritySize;
    UCHAR *SecurityDescriptor;
    RPC_UNICODE_STRING DomainLockoutInformation;
    RPC_UNICODE_STRING DummyString2;
    RPC_UNICODE_STRING DummyString3;
    RPC_UNICODE_STRING DummyString4;
    ULONG PasswordProperties;
    ULONG DummyLong2;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_DELTA_DOMAIN;
typedef struct _NETLOGON_DELTA_DOMAIN *PNETLOGON_DELTA_DOMAIN;
typedef struct _NETLOGON_DELTA_RENAME_GROUP {
    RPC_UNICODE_STRING OldName;
    RPC_UNICODE_STRING NewName;
    RPC_UNICODE_STRING DummyString1;
    RPC_UNICODE_STRING DummyString2;
    RPC_UNICODE_STRING DummyString3;
    RPC_UNICODE_STRING DummyString4;
    ULONG DummyLong1;
    ULONG DummyLong2;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_RENAME_GROUP;
typedef struct _NETLOGON_DELTA_RENAME_GROUP *PNETLOGON_DELTA_RENAME_GROUP;
typedef struct _NETLOGON_DELTA_RENAME_USER {
    RPC_UNICODE_STRING OldName;
    RPC_UNICODE_STRING NewName;
    RPC_UNICODE_STRING DummyString1;
    RPC_UNICODE_STRING DummyString2;
    RPC_UNICODE_STRING DummyString3;
    RPC_UNICODE_STRING DummyString4;
    ULONG DummyLong1;
    ULONG DummyLong2;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_RENAME_USER;
typedef struct _NETLOGON_DELTA_RENAME_USER *PNETLOGON_DELTA_RENAME_USER;
typedef struct _NETLOGON_DELTA_RENAME_ALIAS {
    RPC_UNICODE_STRING OldName;
    RPC_UNICODE_STRING NewName;
    RPC_UNICODE_STRING DummyString1;
    RPC_UNICODE_STRING DummyString2;
    RPC_UNICODE_STRING DummyString3;
    RPC_UNICODE_STRING DummyString4;
    ULONG DummyLong1;
    ULONG DummyLong2;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_RENAME_ALIAS;
typedef struct _NETLOGON_DELTA_RENAME_ALIAS *PNETLOGON_DELTA_RENAME_ALIAS;
typedef struct _NETLOGON_DELTA_POLICY {
    ULONG MaximumLogSize;
    OLD_LARGE_INTEGER AuditRetentionPeriod;
    UCHAR AuditingMode;
    ULONG MaximumAuditEventCount;
    ULONG *EventAuditingOptions;
    RPC_UNICODE_STRING PrimaryDomainName;
    PRPC_SID PrimaryDomainSid;
    NLPR_QUOTA_LIMITS QuotaLimits;
    OLD_LARGE_INTEGER ModifiedId;
    OLD_LARGE_INTEGER DatabaseCreationTime;
    SECURITY_INFORMATION SecurityInformation;
    ULONG SecuritySize;
    UCHAR *SecurityDescriptor;
    RPC_UNICODE_STRING DummyString1;
    RPC_UNICODE_STRING DummyString2;
    RPC_UNICODE_STRING DummyString3;
    RPC_UNICODE_STRING DummyString4;
    ULONG DummyLong1;
    ULONG DummyLong2;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_DELTA_POLICY;
typedef struct _NETLOGON_DELTA_POLICY *PNETLOGON_DELTA_POLICY;
typedef struct _NETLOGON_DELTA_TRUSTED_DOMAINS {
    RPC_UNICODE_STRING DomainName;
    ULONG NumControllerEntries;
    PRPC_UNICODE_STRING ControllerNames;
    SECURITY_INFORMATION SecurityInformation;
    ULONG SecuritySize;
    UCHAR *SecurityDescriptor;
    RPC_UNICODE_STRING DummyString1;
    RPC_UNICODE_STRING DummyString2;
    RPC_UNICODE_STRING DummyString3;
    RPC_UNICODE_STRING DummyString4;
    ULONG TrustedPosixOffset;
    ULONG DummyLong2;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_DELTA_TRUSTED_DOMAINS;
typedef struct _NETLOGON_DELTA_TRUSTED_DOMAINS *PNETLOGON_DELTA_TRUSTED_DOMAINS;
typedef struct _NETLOGON_DELTA_ACCOUNTS {
    ULONG PrivilegeEntries;
    ULONG PrivilegeControl;
    ULONG *PrivilegeAttributes;
    PRPC_UNICODE_STRING PrivilegeNames;
    NLPR_QUOTA_LIMITS QuotaLimits;
    ULONG SystemAccessFlags;
    SECURITY_INFORMATION SecurityInformation;
    ULONG SecuritySize;
    UCHAR *SecurityDescriptor;
    RPC_UNICODE_STRING DummyString1;
    RPC_UNICODE_STRING DummyString2;
    RPC_UNICODE_STRING DummyString3;
    RPC_UNICODE_STRING DummyString4;
    ULONG DummyLong1;
    ULONG DummyLong2;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_DELTA_ACCOUNTS;
typedef struct _NETLOGON_DELTA_ACCOUNTS *PNETLOGON_DELTA_ACCOUNTS;
typedef struct _NETLOGON_DELTA_SECRET {
    NLPR_CR_CIPHER_VALUE CurrentValue;
    OLD_LARGE_INTEGER CurrentValueSetTime;
    NLPR_CR_CIPHER_VALUE OldValue;
    OLD_LARGE_INTEGER OldValueSetTime;
    SECURITY_INFORMATION SecurityInformation;
    ULONG SecuritySize;
    UCHAR *SecurityDescriptor;
    RPC_UNICODE_STRING DummyString1;
    RPC_UNICODE_STRING DummyString2;
    RPC_UNICODE_STRING DummyString3;
    RPC_UNICODE_STRING DummyString4;
    ULONG DummyLong1;
    ULONG DummyLong2;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_DELTA_SECRET;
typedef struct _NETLOGON_DELTA_SECRET *PNETLOGON_DELTA_SECRET;
typedef struct _NETLOGON_DELTA_DELETE_GROUP {
    wchar_t *AccountName;
    RPC_UNICODE_STRING DummyString1;
    RPC_UNICODE_STRING DummyString2;
    RPC_UNICODE_STRING DummyString3;
    RPC_UNICODE_STRING DummyString4;
    ULONG DummyLong1;
    ULONG DummyLong2;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_DELTA_DELETE_GROUP;
typedef struct _NETLOGON_DELTA_DELETE_GROUP *PNETLOGON_DELTA_DELETE_GROUP;
typedef struct _NETLOGON_DELTA_DELETE_USER {
    wchar_t *AccountName;
    RPC_UNICODE_STRING DummyString1;
    RPC_UNICODE_STRING DummyString2;
    RPC_UNICODE_STRING DummyString3;
    RPC_UNICODE_STRING DummyString4;
    ULONG DummyLong1;
    ULONG DummyLong2;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_DELTA_DELETE_USER;
typedef struct _NETLOGON_DELTA_DELETE_USER *PNETLOGON_DELTA_DELETE_USER;
typedef enum _NETLOGON_DELTA_TYPE {
    AddOrChangeDomain = 1,
    AddOrChangeGroup = 2,
    DeleteGroup = 3,
    RenameGroup = 4,
    AddOrChangeUser = 5,
    DeleteUser = 6,
    RenameUser = 7,
    ChangeGroupMembership = 8,
    AddOrChangeAlias = 9,
    DeleteAlias = 10,
    RenameAlias = 11,
    ChangeAliasMembership = 12,
    AddOrChangeLsaPolicy = 13,
    AddOrChangeLsaTDomain = 14,
    DeleteLsaTDomain = 15,
    AddOrChangeLsaAccount = 16,
    DeleteLsaAccount = 17,
    AddOrChangeLsaSecret = 18,
    DeleteLsaSecret = 19,
    DeleteGroupByName = 20,
    DeleteUserByName = 21,
    SerialNumberSkip = 22
} NETLOGON_DELTA_TYPE;
typedef union _NETLOGON_DELTA_UNION {
    PNETLOGON_DELTA_DOMAIN DeltaDomain;
    PNETLOGON_DELTA_GROUP DeltaGroup;
    PNETLOGON_DELTA_RENAME_GROUP DeltaRenameGroup;
    PNETLOGON_DELTA_USER DeltaUser;
    PNETLOGON_DELTA_RENAME_USER DeltaRenameUser;
    PNETLOGON_DELTA_GROUP_MEMBER DeltaGroupMember;
    PNETLOGON_DELTA_ALIAS DeltaAlias;
    PNETLOGON_DELTA_RENAME_ALIAS DeltaRenameAlias;
    PNETLOGON_DELTA_ALIAS_MEMBER DeltaAliasMember;
    PNETLOGON_DELTA_POLICY DeltaPolicy;
    PNETLOGON_DELTA_TRUSTED_DOMAINS DeltaTDomains;
    PNETLOGON_DELTA_ACCOUNTS DeltaAccounts;
    PNETLOGON_DELTA_SECRET DeltaSecret;
    PNETLOGON_DELTA_DELETE_GROUP DeltaDeleteGroup;
    PNETLOGON_DELTA_DELETE_USER DeltaDeleteUser;
    PNLPR_MODIFIED_COUNT DeltaSerialNumberSkip;
} NETLOGON_DELTA_UNION;
typedef union _NETLOGON_DELTA_UNION *PNETLOGON_DELTA_UNION;
typedef union _NETLOGON_DELTA_ID_UNION {
    ULONG Rid;
    PRPC_SID Sid;
    wchar_t *Name;
} NETLOGON_DELTA_ID_UNION;
typedef union _NETLOGON_DELTA_ID_UNION *PNETLOGON_DELTA_ID_UNION;
typedef struct _NETLOGON_DELTA_ENUM {
    NETLOGON_DELTA_TYPE DeltaType;
    NETLOGON_DELTA_ID_UNION DeltaID;
    NETLOGON_DELTA_UNION DeltaUnion;
} NETLOGON_DELTA_ENUM;
typedef struct _NETLOGON_DELTA_ENUM *PNETLOGON_DELTA_ENUM;
typedef struct _NETLOGON_DELTA_ENUM_ARRAY {
    DWORD CountReturned;
    PNETLOGON_DELTA_ENUM Deltas;
} NETLOGON_DELTA_ENUM_ARRAY;
typedef struct _NETLOGON_DELTA_ENUM_ARRAY *PNETLOGON_DELTA_ENUM_ARRAY;
typedef struct _NETLOGON_LOGON_IDENTITY_INFO {
    RPC_UNICODE_STRING LogonDomainName;
    ULONG ParameterControl;
    OLD_LARGE_INTEGER Reserved;
    RPC_UNICODE_STRING UserName;
    RPC_UNICODE_STRING Workstation;
} NETLOGON_LOGON_IDENTITY_INFO;
typedef struct _NETLOGON_LOGON_IDENTITY_INFO *PNETLOGON_LOGON_IDENTITY_INFO;
typedef struct _NETLOGON_INTERACTIVE_INFO {
    NETLOGON_LOGON_IDENTITY_INFO Identity;
    LM_OWF_PASSWORD LmOwfPassword;
    NT_OWF_PASSWORD NtOwfPassword;
} NETLOGON_INTERACTIVE_INFO;
typedef struct _NETLOGON_INTERACTIVE_INFO *PNETLOGON_INTERACTIVE_INFO;
typedef enum _NETLOGON_LOGON_INFO_CLASS {
    NetlogonInteractiveInformation = 1,
    NetlogonNetworkInformation = 2,
    NetlogonServiceInformation = 3,
    NetlogonGenericInformation = 4,
    NetlogonInteractiveTransitiveInformation = 5,
    NetlogonNetworkTransitiveInformation = 6,
    NetlogonServiceTransitiveInformation = 7
} NETLOGON_LOGON_INFO_CLASS;
typedef struct _NETLOGON_SERVICE_INFO {
    NETLOGON_LOGON_IDENTITY_INFO Identity;
    LM_OWF_PASSWORD LmOwfPassword;
    NT_OWF_PASSWORD NtOwfPassword;
} NETLOGON_SERVICE_INFO;
typedef struct _NETLOGON_SERVICE_INFO *PNETLOGON_SERVICE_INFO;
typedef struct __WIDL_netlogon_generated_name_00000000 {
    CHAR data[8];
} LM_CHALLENGE;
typedef struct _NETLOGON_NETWORK_INFO {
    NETLOGON_LOGON_IDENTITY_INFO Identity;
    LM_CHALLENGE LmChallenge;
    STRING NtChallengeResponse;
    STRING LmChallengeResponse;
} NETLOGON_NETWORK_INFO;
typedef struct _NETLOGON_NETWORK_INFO *PNETLOGON_NETWORK_INFO;
typedef struct _NETLOGON_GENERIC_INFO {
    NETLOGON_LOGON_IDENTITY_INFO Identity;
    RPC_UNICODE_STRING PackageName;
    ULONG DataLength;
    UCHAR *LogonData;
} NETLOGON_GENERIC_INFO;
typedef struct _NETLOGON_GENERIC_INFO *PNETLOGON_GENERIC_INFO;
typedef union _NETLOGON_LEVEL {
    PNETLOGON_INTERACTIVE_INFO LogonInteractive;
    PNETLOGON_INTERACTIVE_INFO LogonInteractiveTransitive;
    PNETLOGON_SERVICE_INFO LogonService;
    PNETLOGON_SERVICE_INFO LogonServiceTransitive;
    PNETLOGON_NETWORK_INFO LogonNetwork;
    PNETLOGON_NETWORK_INFO LogonNetworkTransitive;
    PNETLOGON_GENERIC_INFO LogonGeneric;
} NETLOGON_LEVEL;
typedef union _NETLOGON_LEVEL *PNETLOGON_LEVEL;
typedef enum _NETLOGON_VALIDATION_INFO_CLASS {
    NetlogonValidationUasInfo = 1,
    NetlogonValidationSamInfo = 2,
    NetlogonValidationSamInfo2 = 3,
    NetlogonValidationGenericInfo = 4,
    NetlogonValidationGenericInfo2 = 5,
    NetlogonValidationSamInfo4 = 6
} NETLOGON_VALIDATION_INFO_CLASS;
#ifndef _NTSAM_
typedef struct _GROUP_MEMBERSHIP {
    ULONG RelativeId;
    ULONG Attributes;
} GROUP_MEMBERSHIP;
typedef struct _GROUP_MEMBERSHIP *PGROUP_MEMBERSHIP;
#endif
typedef struct _USER_SESSION_KEY {
    CYPHER_BLOCK data[2];
} USER_SESSION_KEY;
typedef struct _USER_SESSION_KEY *PUSER_SESSION_KEY;
typedef struct _NETLOGON_SID_AND_ATTRIBUTES {
    PRPC_SID Sid;
    ULONG Attributes;
} NETLOGON_SID_AND_ATTRIBUTES;
typedef struct _NETLOGON_SID_AND_ATTRIBUTES *PNETLOGON_SID_AND_ATTRIBUTES;
typedef struct _NETLOGON_VALIDATION_SAM_INFO {
    OLD_LARGE_INTEGER LogonTime;
    OLD_LARGE_INTEGER LogoffTime;
    OLD_LARGE_INTEGER KickOffTime;
    OLD_LARGE_INTEGER PasswordLastSet;
    OLD_LARGE_INTEGER PasswordCanChange;
    OLD_LARGE_INTEGER PasswordMustChange;
    RPC_UNICODE_STRING EffectiveName;
    RPC_UNICODE_STRING FullName;
    RPC_UNICODE_STRING LogonScript;
    RPC_UNICODE_STRING ProfilePath;
    RPC_UNICODE_STRING HomeDirectory;
    RPC_UNICODE_STRING HomeDirectoryDrive;
    USHORT LogonCount;
    USHORT BadPasswordCount;
    ULONG UserId;
    ULONG PrimaryGroupId;
    ULONG GroupCount;
    PGROUP_MEMBERSHIP GroupIds;
    ULONG UserFlags;
    USER_SESSION_KEY UserSessionKey;
    RPC_UNICODE_STRING LogonServer;
    RPC_UNICODE_STRING LogonDomainName;
    PRPC_SID LogonDomainId;
    ULONG ExpansionRoom[10];
} NETLOGON_VALIDATION_SAM_INFO;
typedef struct _NETLOGON_VALIDATION_SAM_INFO *PNETLOGON_VALIDATION_SAM_INFO;
typedef struct _NETLOGON_VALIDATION_SAM_INFO2 {
    OLD_LARGE_INTEGER LogonTime;
    OLD_LARGE_INTEGER LogoffTime;
    OLD_LARGE_INTEGER KickOffTime;
    OLD_LARGE_INTEGER PasswordLastSet;
    OLD_LARGE_INTEGER PasswordCanChange;
    OLD_LARGE_INTEGER PasswordMustChange;
    RPC_UNICODE_STRING EffectiveName;
    RPC_UNICODE_STRING FullName;
    RPC_UNICODE_STRING LogonScript;
    RPC_UNICODE_STRING ProfilePath;
    RPC_UNICODE_STRING HomeDirectory;
    RPC_UNICODE_STRING HomeDirectoryDrive;
    USHORT LogonCount;
    USHORT BadPasswordCount;
    ULONG UserId;
    ULONG PrimaryGroupId;
    ULONG GroupCount;
    PGROUP_MEMBERSHIP GroupIds;
    ULONG UserFlags;
    USER_SESSION_KEY UserSessionKey;
    RPC_UNICODE_STRING LogonServer;
    RPC_UNICODE_STRING LogonDomainName;
    PRPC_SID LogonDomainId;
    ULONG ExpansionRoom[10];
    ULONG SidCount;
    PNETLOGON_SID_AND_ATTRIBUTES ExtraSids;
} NETLOGON_VALIDATION_SAM_INFO2;
typedef struct _NETLOGON_VALIDATION_SAM_INFO2 *PNETLOGON_VALIDATION_SAM_INFO2;
typedef struct _NETLOGON_VALIDATION_GENERIC_INFO2 {
    ULONG DataLength;
    UCHAR *ValidationData;
} NETLOGON_VALIDATION_GENERIC_INFO2;
typedef struct _NETLOGON_VALIDATION_GENERIC_INFO2 *PNETLOGON_VALIDATION_GENERIC_INFO2;
typedef struct _NETLOGON_VALIDATION_SAM_INFO4 {
    OLD_LARGE_INTEGER LogonTime;
    OLD_LARGE_INTEGER LogoffTime;
    OLD_LARGE_INTEGER KickOffTime;
    OLD_LARGE_INTEGER PasswordLastSet;
    OLD_LARGE_INTEGER PasswordCanChange;
    OLD_LARGE_INTEGER PasswordMustChange;
    RPC_UNICODE_STRING EffectiveName;
    RPC_UNICODE_STRING FullName;
    RPC_UNICODE_STRING LogonScript;
    RPC_UNICODE_STRING ProfilePath;
    RPC_UNICODE_STRING HomeDirectory;
    RPC_UNICODE_STRING HomeDirectoryDrive;
    unsigned short LogonCount;
    unsigned short BadPasswordCount;
    ULONG UserId;
    ULONG PrimaryGroupId;
    ULONG GroupCount;
    PGROUP_MEMBERSHIP GroupIds;
    ULONG UserFlags;
    USER_SESSION_KEY UserSessionKey;
    RPC_UNICODE_STRING LogonServer;
    RPC_UNICODE_STRING LogonDomainName;
    PRPC_SID LogonDomainId;
    unsigned char LMKey[8];
    ULONG UserAccountControl;
    ULONG SubAuthStatus;
    OLD_LARGE_INTEGER LastSuccessfulILogon;
    OLD_LARGE_INTEGER LastFailedILogon;
    ULONG FailedILogonCount;
    ULONG Reserved4[1];
    ULONG SidCount;
    PNETLOGON_SID_AND_ATTRIBUTES ExtraSids;
    RPC_UNICODE_STRING DnsLogonDomainName;
    RPC_UNICODE_STRING Upn;
    RPC_UNICODE_STRING ExpansionString1;
    RPC_UNICODE_STRING ExpansionString2;
    RPC_UNICODE_STRING ExpansionString3;
    RPC_UNICODE_STRING ExpansionString4;
    RPC_UNICODE_STRING ExpansionString5;
    RPC_UNICODE_STRING ExpansionString6;
    RPC_UNICODE_STRING ExpansionString7;
    RPC_UNICODE_STRING ExpansionString8;
    RPC_UNICODE_STRING ExpansionString9;
    RPC_UNICODE_STRING ExpansionString10;
} NETLOGON_VALIDATION_SAM_INFO4;
typedef struct _NETLOGON_VALIDATION_SAM_INFO4 *PNETLOGON_VALIDATION_SAM_INFO4;
typedef union _NETLOGON_VALIDATION {
    PNETLOGON_VALIDATION_SAM_INFO ValidationSam;
    PNETLOGON_VALIDATION_SAM_INFO2 ValidationSam2;
    PNETLOGON_VALIDATION_GENERIC_INFO2 ValidationGeneric2;
    PNETLOGON_VALIDATION_SAM_INFO4 ValidationSam4;
} NETLOGON_VALIDATION;
typedef union _NETLOGON_VALIDATION *PNETLOGON_VALIDATION;
typedef union _NETLOGON_CONTROL_DATA_INFORMATION {
    wchar_t *TrustedDomainName;
    DWORD DebugFlag;
    wchar_t *UserName;
} NETLOGON_CONTROL_DATA_INFORMATION;
typedef union _NETLOGON_CONTROL_DATA_INFORMATION *PNETLOGON_CONTROL_DATA_INFORMATION;
#ifndef _LMACCESS_H
typedef struct _NETLOGON_INFO_1 {
    DWORD netlog1_flags;
    NET_API_STATUS netlog1_pdc_connection_status;
} NETLOGON_INFO_1;
typedef struct _NETLOGON_INFO_1 *PNETLOGON_INFO_1;
typedef struct _NETLOGON_INFO_2 {
    DWORD netlog2_flags;
    NET_API_STATUS netlog2_pdc_connection_status;
    wchar_t *netlog2_trusted_dc_name;
    NET_API_STATUS netlog2_tc_connection_status;
} NETLOGON_INFO_2;
typedef struct _NETLOGON_INFO_2 *PNETLOGON_INFO_2;
typedef struct _NETLOGON_INFO_3 {
    DWORD netlog3_flags;
    DWORD netlog3_logon_attempts;
    DWORD netlog3_reserved1;
    DWORD netlog3_reserved2;
    DWORD netlog3_reserved3;
    DWORD netlog3_reserved4;
    DWORD netlog3_reserved5;
} NETLOGON_INFO_3;
typedef struct _NETLOGON_INFO_3 *PNETLOGON_INFO_3;
#endif
typedef struct _NETLOGON_INFO_4 {
    wchar_t *netlog4_trusted_dc_name;
    wchar_t *netlog4_trusted_domain_name;
} NETLOGON_INFO_4;
typedef struct _NETLOGON_INFO_4 *PNETLOGON_INFO_4;
typedef union _NETLOGON_CONTROL_QUERY_INFORMATION {
    PNETLOGON_INFO_1 NetlogonInfo1;
    PNETLOGON_INFO_2 NetlogonInfo2;
    PNETLOGON_INFO_3 NetlogonInfo3;
    PNETLOGON_INFO_4 NetlogonInfo4;
} NETLOGON_CONTROL_QUERY_INFORMATION;
typedef union _NETLOGON_CONTROL_QUERY_INFORMATION *PNETLOGON_CONTROL_QUERY_INFORMATION;
typedef enum _SYNC_STATE {
    NormalState = 0,
    DomainState = 1,
    GroupState = 2,
    UasBuiltInGroupState = 3,
    UserState = 4,
    GroupMemberState = 5,
    AliasState = 6,
    AliasMemberState = 7,
    SamDoneState = 8
} SYNC_STATE;
typedef enum _SYNC_STATE *PSYNC_STATE;
typedef struct _DOMAIN_NAME_BUFFER {
    ULONG DomainNameByteCount;
    UCHAR *DomainNames;
} DOMAIN_NAME_BUFFER;
typedef struct _DOMAIN_NAME_BUFFER *PDOMAIN_NAME_BUFFER;
typedef struct _NETLOGON_LSA_POLICY_INFO {
    ULONG LsaPolicySize;
    UCHAR *LsaPolicy;
} NETLOGON_LSA_POLICY_INFO;
typedef struct _NETLOGON_LSA_POLICY_INFO *PNETLOGON_LSA_POLICY_INFO;
typedef struct _NETLOGON_ONE_DOMAIN_INFO {
    RPC_UNICODE_STRING DomainName;
    RPC_UNICODE_STRING DnsDomainName;
    RPC_UNICODE_STRING DnsForestName;
    GUID DomainGuid;
    PRPC_SID DomainSid;
    RPC_UNICODE_STRING TrustExtension;
    RPC_UNICODE_STRING DummyString2;
    RPC_UNICODE_STRING DummyString3;
    RPC_UNICODE_STRING DummyString4;
    ULONG DummyLong1;
    ULONG DummyLong2;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_ONE_DOMAIN_INFO;
typedef struct _NETLOGON_ONE_DOMAIN_INFO *PNETLOGON_ONE_DOMAIN_INFO;
typedef struct _NETLOGON_DOMAIN_INFO {
    NETLOGON_ONE_DOMAIN_INFO PrimaryDomain;
    ULONG TrustedDomainCount;
    PNETLOGON_ONE_DOMAIN_INFO TrustedDomains;
    NETLOGON_LSA_POLICY_INFO LsaPolicy;
    RPC_UNICODE_STRING DnsHostNameInDs;
    RPC_UNICODE_STRING DummyString2;
    RPC_UNICODE_STRING DummyString3;
    RPC_UNICODE_STRING DummyString4;
    ULONG WorkstationFlags;
    ULONG SupportedEncTypes;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_DOMAIN_INFO;
typedef struct _NETLOGON_DOMAIN_INFO *PNETLOGON_DOMAIN_INFO;
typedef union _NETLOGON_DOMAIN_INFORMATION {
    PNETLOGON_DOMAIN_INFO DomainInfo;
    PNETLOGON_LSA_POLICY_INFO LsaPolicyInfo;
} NETLOGON_DOMAIN_INFORMATION;
typedef union _NETLOGON_DOMAIN_INFORMATION *PNETLOGON_DOMAIN_INFORMATION;
typedef struct _NETLOGON_WORKSTATION_INFO {
    NETLOGON_LSA_POLICY_INFO LsaPolicy;
    wchar_t *DnsHostName;
    wchar_t *SiteName;
    wchar_t *Dummy1;
    wchar_t *Dummy2;
    wchar_t *Dummy3;
    wchar_t *Dummy4;
    RPC_UNICODE_STRING OsVersion;
    RPC_UNICODE_STRING OsName;
    RPC_UNICODE_STRING DummyString3;
    RPC_UNICODE_STRING DummyString4;
    ULONG WorkstationFlags;
    ULONG KerberosSupportedEncryptionTypes;
    ULONG DummyLong3;
    ULONG DummyLong4;
} NETLOGON_WORKSTATION_INFO;
typedef struct _NETLOGON_WORKSTATION_INFO *PNETLOGON_WORKSTATION_INFO;
typedef union _NETLOGON_WORKSTATION_INFORMATION {
    PNETLOGON_WORKSTATION_INFO WorkstationInfo;
    PNETLOGON_WORKSTATION_INFO LsaPolicyInfo;
} NETLOGON_WORKSTATION_INFORMATION;
typedef union _NETLOGON_WORKSTATION_INFORMATION *PNETLOGON_WORKSTATION_INFORMATION;
typedef struct _NL_SOCKET_ADDRESS {
    UCHAR *lpSockaddr;
    ULONG iSockaddrLength;
} NL_SOCKET_ADDRESS;
typedef struct _NL_SOCKET_ADDRESS *PNL_SOCKET_ADDRESS;
typedef struct _NL_SITE_NAME_ARRAY {
    ULONG EntryCount;
    PRPC_UNICODE_STRING SiteNames;
} NL_SITE_NAME_ARRAY;
typedef struct _NL_SITE_NAME_ARRAY *PNL_SITE_NAME_ARRAY;
#ifndef _DSGETDC_H
typedef struct _DS_DOMAIN_TRUSTSW {
    wchar_t *NetbiosDomainName;
    wchar_t *DnsDomainName;
    ULONG Flags;
    ULONG ParentIndex;
    ULONG TrustType;
    ULONG TrustAttributes;
    PRPC_SID DomainSid;
    GUID DomainGuid;
} DS_DOMAIN_TRUSTSW;
typedef struct _DS_DOMAIN_TRUSTSW *PDS_DOMAIN_TRUSTSW;
#endif
typedef struct _NETLOGON_TRUSTED_DOMAIN_ARRAY {
    DWORD DomainCount;
    PDS_DOMAIN_TRUSTSW Domains;
} NETLOGON_TRUSTED_DOMAIN_ARRAY;
typedef struct _NETLOGON_TRUSTED_DOMAIN_ARRAY *PNETLOGON_TRUSTED_DOMAIN_ARRAY;
typedef struct _NL_SITE_NAME_EX_ARRAY {
    ULONG EntryCount;
    PRPC_UNICODE_STRING SiteNames;
    PRPC_UNICODE_STRING SubnetNames;
} NL_SITE_NAME_EX_ARRAY;
typedef struct _NL_SITE_NAME_EX_ARRAY *PNL_SITE_NAME_EX_ARRAY;
typedef struct _NL_GENERIC_RPC_DATA {
    ULONG UlongEntryCount;
    ULONG *UlongData;
    ULONG UnicodeStringEntryCount;
    PRPC_UNICODE_STRING UnicodeStringData;
} NL_GENERIC_RPC_DATA;
typedef struct _NL_GENERIC_RPC_DATA *PNL_GENERIC_RPC_DATA;
typedef struct _NETLOGON_VALIDATION_UAS_INFO {
    wchar_t *usrlog1_eff_name;
    DWORD usrlog1_priv;
    DWORD usrlog1_auth_flags;
    DWORD usrlog1_num_logons;
    DWORD usrlog1_bad_pw_count;
    DWORD usrlog1_last_logon;
    DWORD usrlog1_last_logoff;
    DWORD usrlog1_logoff_time;
    DWORD usrlog1_kickoff_time;
    DWORD usrlog1_password_age;
    DWORD usrlog1_pw_can_change;
    DWORD usrlog1_pw_must_change;
    wchar_t *usrlog1_computer;
    wchar_t *usrlog1_domain;
    wchar_t *usrlog1_script_path;
    DWORD usrlog1_reserved1;
} NETLOGON_VALIDATION_UAS_INFO;
typedef struct _NETLOGON_VALIDATION_UAS_INFO *PNETLOGON_VALIDATION_UAS_INFO;
typedef struct _NETLOGON_LOGOFF_UAS_INFO {
    DWORD Duration;
    USHORT LogonCount;
} NETLOGON_LOGOFF_UAS_INFORMATION;
typedef struct _NETLOGON_LOGOFF_UAS_INFO *PNETLOGON_LOGOFF_UAS_INFO;
typedef union _NETLOGON_CAPABILITIES {
    ULONG ServerCapabilities;
} NETLOGON_CAPABILITIES;
typedef union _NETLOGON_CAPABILITIES *PNETLOGON_CAPABILITIES;
typedef struct _NETLOGON_CREDENTIAL {
    CHAR data[8];
} NETLOGON_CREDENTIAL;
typedef struct _NETLOGON_CREDENTIAL *PNETLOGON_CREDENTIAL;
typedef struct _NETLOGON_AUTHENTICATOR {
    NETLOGON_CREDENTIAL Credential;
    DWORD Timestamp;
} NETLOGON_AUTHENTICATOR;
typedef struct _NETLOGON_AUTHENTICATOR *PNETLOGON_AUTHENTICATOR;
typedef enum _NETLOGON_SECURE_CHANNEL_TYPE {
    NullSecureChannel = 0,
    MsvApSecureChannel = 1,
    WorkstationSecureChannel = 2,
    TrustedDnsDomainSecureChannel = 3,
    TrustedDomainSecureChannel = 4,
    UasServerSecureChannel = 5,
    ServerSecureChannel = 6,
    CdcServerSecureChannel = 7
} NETLOGON_SECURE_CHANNEL_TYPE;
typedef struct _UAS_INFO_0 {
    CHAR ComputerName[16];
    ULONG TimeCreated;
    ULONG SerialNumber;
} UAS_INFO_0;
typedef struct _UAS_INFO_0 *PUAS_INFO_0;
#ifndef _DSGETDC_H
typedef struct _DOMAIN_CONTROLLER_INFOW {
    wchar_t *DomainControllerName;
    wchar_t *DomainControllerAddress;
    ULONG DomainControllerAddressType;
    GUID DomainGuid;
    wchar_t *DomainName;
    wchar_t *DnsForestName;
    ULONG Flags;
    wchar_t *DcSiteName;
    wchar_t *ClientSiteName;
} DOMAIN_CONTROLLER_INFOW;
typedef struct _DOMAIN_CONTROLLER_INFOW *PDOMAIN_CONTROLLER_INFOW;
#endif
typedef struct _NL_TRUST_PASSWORD {
    WCHAR Buffer[256];
    ULONG Length;
} NL_TRUST_PASSWORD;
typedef struct _NL_TRUST_PASSWORD *PNL_TRUST_PASSWORD;
typedef struct _NL_PASSWORD_VERSION {
    ULONG ReservedField;
    ULONG PasswordVersionNumber;
    ULONG PasswordVersionPresent;
} NL_PASSWORD_VERSION;
typedef struct _NL_PASSWORD_VERSION *PNL_PASSWORD_VERSION;
#ifndef _NTSECAPI_H
typedef enum _LSA_FOREST_TRUST_RECORD_TYPE {
    ForestTrustTopLevelName = 0,
    ForestTrustTopLevelNameEx = 1,
    ForestTrustDomainInfo = 2
} LSA_FOREST_TRUST_RECORD_TYPE;
typedef RPC_UNICODE_STRING LSA_RPC_UNICODE_STRING;
typedef RPC_UNICODE_STRING *PLSA_RPC_UNICODE_STRING;
typedef struct _LSA_FOREST_TRUST_DOMAIN_INFO {
    PRPC_SID Sid;
    LSA_RPC_UNICODE_STRING DnsName;
    LSA_RPC_UNICODE_STRING NetbiosName;
} LSA_FOREST_TRUST_DOMAIN_INFO;
typedef struct _LSA_FOREST_TRUST_DOMAIN_INFO *PLSA_FOREST_TRUST_DOMAIN_INFO;
typedef struct _LSA_FOREST_TRUST_BINARY_DATA {
    ULONG Length;
    UCHAR *Buffer;
} LSA_FOREST_TRUST_BINARY_DATA;
typedef struct _LSA_FOREST_TRUST_BINARY_DATA *PLSA_FOREST_TRUST_BINARY_DATA;
typedef struct _LSA_FOREST_TRUST_RECORD {
    ULONG Flags;
    LSA_FOREST_TRUST_RECORD_TYPE ForestTrustType;
    LARGE_INTEGER Time;
    union {
        LSA_RPC_UNICODE_STRING TopLevelName;
        LSA_FOREST_TRUST_DOMAIN_INFO DomainInfo;
        LSA_FOREST_TRUST_BINARY_DATA Data;
    } ForestTrustData;
} LSA_FOREST_TRUST_RECORD;
typedef struct _LSA_FOREST_TRUST_RECORD *PLSA_FOREST_TRUST_RECORD;
typedef struct _LSA_FOREST_TRUST_INFORMATION {
    ULONG RecordCount;
    PLSA_FOREST_TRUST_RECORD *Entries;
} LSA_FOREST_TRUST_INFORMATION;
typedef struct _LSA_FOREST_TRUST_INFORMATION *PLSA_FOREST_TRUST_INFORMATION;
#endif
/*****************************************************************************
 * logon interface (v1.0)
 */
#ifndef __logon_INTERFACE_DEFINED__
#define __logon_INTERFACE_DEFINED__

extern handle_t hBinding;
extern RPC_IF_HANDLE logon_v1_0_c_ifspec;
extern RPC_IF_HANDLE logon_v1_0_s_ifspec;
NET_API_STATUS __stdcall NetrLogonUasLogon(
    LOGONSRV_HANDLE ServerName,
    wchar_t *UserName,
    wchar_t *Workstation,
    PNETLOGON_VALIDATION_UAS_INFO *ValidationInformation);

NET_API_STATUS __stdcall NetrLogonUasLogoff(
    LOGONSRV_HANDLE ServerName,
    wchar_t *UserName,
    wchar_t *Workstation,
    PNETLOGON_LOGOFF_UAS_INFO LogoffInformation);

NTSTATUS __stdcall NetrLogonSamLogon(
    LOGONSRV_HANDLE LogonServer,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    NETLOGON_LOGON_INFO_CLASS LogonLevel,
    PNETLOGON_LEVEL LogonInformation,
    NETLOGON_VALIDATION_INFO_CLASS ValidationLevel,
    PNETLOGON_VALIDATION ValidationInformation,
    UCHAR *Authoritative);

NTSTATUS __stdcall NetrLogonSamLogoff(
    LOGONSRV_HANDLE LogonServer,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    NETLOGON_LOGON_INFO_CLASS LogonLevel,
    PNETLOGON_LEVEL LogonInformation);

NTSTATUS __stdcall NetrServerReqChallenge(
    LOGONSRV_HANDLE PrimaryName,
    wchar_t *ComputerName,
    PNETLOGON_CREDENTIAL ClientChallenge,
    PNETLOGON_CREDENTIAL ServerChallenge);

NTSTATUS __stdcall NetrServerAuthenticate(
    LOGONSRV_HANDLE PrimaryName,
    wchar_t *AccountName,
    NETLOGON_SECURE_CHANNEL_TYPE SecureChannelType,
    wchar_t *ComputerName,
    PNETLOGON_CREDENTIAL ClientCredential,
    PNETLOGON_CREDENTIAL ServerCredential);

NTSTATUS __stdcall NetrServerPasswordSet(
    LOGONSRV_HANDLE PrimaryName,
    wchar_t *AccountName,
    NETLOGON_SECURE_CHANNEL_TYPE SecureChannelType,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    PENCRYPTED_NT_OWF_PASSWORD UasNewPassword);

NTSTATUS __stdcall NetrDatabaseDeltas(
    LOGONSRV_HANDLE PrimaryName,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    DWORD DatabaseID,
    PNLPR_MODIFIED_COUNT DomainModifiedCount,
    PNETLOGON_DELTA_ENUM_ARRAY *DeltaArray,
    DWORD PreferredMaximumLength);

NTSTATUS __stdcall NetrDatabaseSync(
    LOGONSRV_HANDLE PrimaryName,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    DWORD DatabaseID,
    ULONG *SyncContext,
    PNETLOGON_DELTA_ENUM_ARRAY *DeltaArray,
    DWORD PreferredMaximumLength);

NTSTATUS __stdcall NetrAccountDeltas(
    LOGONSRV_HANDLE PrimaryName,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    PUAS_INFO_0 RecordId,
    DWORD Count,
    DWORD Level,
    UCHAR *Buffer,
    DWORD BufferSize,
    ULONG *CountReturned,
    ULONG *TotalEntries,
    PUAS_INFO_0 NextRecordId);

NTSTATUS __stdcall NetrAccountSync(
    LOGONSRV_HANDLE PrimaryName,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    DWORD Reference,
    DWORD Level,
    UCHAR *Buffer,
    DWORD BufferSize,
    ULONG *CountReturned,
    ULONG *TotalEntries,
    ULONG *NextReference,
    PUAS_INFO_0 LastRecordId);

NET_API_STATUS __stdcall NetrGetDCName(
    LOGONSRV_HANDLE ServerName,
    wchar_t *DomainName,
    wchar_t **Buffer);

NET_API_STATUS __stdcall NetrLogonControl(
    LOGONSRV_HANDLE ServerName,
    DWORD FunctionCode,
    DWORD QueryLevel,
    PNETLOGON_CONTROL_QUERY_INFORMATION Buffer);

NET_API_STATUS __stdcall NetrGetAnyDCName(
    LOGONSRV_HANDLE ServerName,
    wchar_t *DomainName,
    wchar_t **Buffer);

NET_API_STATUS __stdcall NetrLogonControl2(
    LOGONSRV_HANDLE ServerName,
    DWORD FunctionCode,
    DWORD QueryLevel,
    PNETLOGON_CONTROL_DATA_INFORMATION Data,
    PNETLOGON_CONTROL_QUERY_INFORMATION Buffer);

NTSTATUS __stdcall NetrServerAuthenticate2(
    LOGONSRV_HANDLE PrimaryName,
    wchar_t *AccountName,
    NETLOGON_SECURE_CHANNEL_TYPE SecureChannelType,
    wchar_t *ComputerName,
    PNETLOGON_CREDENTIAL ClientCredential,
    PNETLOGON_CREDENTIAL ServerCredential,
    ULONG *NegotiateFlags);

NTSTATUS __stdcall NetrDatabaseSync2(
    LOGONSRV_HANDLE PrimaryName,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    DWORD DatabaseID,
    SYNC_STATE RestartState,
    ULONG *SyncContext,
    PNETLOGON_DELTA_ENUM_ARRAY *DeltaArray,
    DWORD PreferredMaximumLength);

NTSTATUS __stdcall NetrDatabaseRedo(
    LOGONSRV_HANDLE PrimaryName,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    UCHAR *ChangeLogEntry,
    DWORD ChangeLogEntrySize,
    PNETLOGON_DELTA_ENUM_ARRAY *DeltaArray);

NET_API_STATUS __stdcall NetrLogonControl2Ex(
    LOGONSRV_HANDLE ServerName,
    DWORD FunctionCode,
    DWORD QueryLevel,
    PNETLOGON_CONTROL_DATA_INFORMATION Data,
    PNETLOGON_CONTROL_QUERY_INFORMATION Buffer);

NTSTATUS __stdcall NetrEnumerateTrustedDomains(
    LOGONSRV_HANDLE ServerName,
    PDOMAIN_NAME_BUFFER DomainNameBuffer);

NET_API_STATUS __stdcall DsrGetDcName(
    LOGONSRV_HANDLE ComputerName,
    wchar_t *DomainName,
    GUID *DomainGuid,
    GUID *SiteGuid,
    ULONG Flags,
    PDOMAIN_CONTROLLER_INFOW *DomainControllerInfo);

NTSTATUS __stdcall NetrLogonGetCapabilities(
    LOGONSRV_HANDLE ServerName,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    DWORD QueryLevel,
    PNETLOGON_CAPABILITIES ServerCapabilities);

NTSTATUS __stdcall NetrLogonSetServiceBits(
    LOGONSRV_HANDLE ServerName,
    DWORD ServiceBitsOfInterest,
    DWORD ServiceBits);

NET_API_STATUS __stdcall NetrLogonGetTrustRid(
    LOGONSRV_HANDLE ServerName,
    wchar_t *DomainName,
    ULONG *Rid);

NET_API_STATUS __stdcall NetrLogonComputeServerDigest(
    LOGONSRV_HANDLE ServerName,
    ULONG Rid,
    UCHAR *Message,
    ULONG MessageSize,
    CHAR NewMessageDigest[16],
    CHAR OldMessageDigest[16]);

NET_API_STATUS __stdcall NetrLogonComputeClientDigest(
    LOGONSRV_HANDLE ServerName,
    wchar_t *DomainName,
    UCHAR *Message,
    ULONG MessageSize,
    CHAR NewMessageDigest[16],
    CHAR OldMessageDigest[16]);

NTSTATUS __stdcall NetrServerAuthenticate3(
    LOGONSRV_HANDLE PrimaryName,
    wchar_t *AccountName,
    NETLOGON_SECURE_CHANNEL_TYPE SecureChannelType,
    wchar_t *ComputerName,
    PNETLOGON_CREDENTIAL ClientCredential,
    PNETLOGON_CREDENTIAL ServerCredential,
    ULONG *NegotiateFlags,
    ULONG *AccountRid);

NET_API_STATUS __stdcall DsrGetDcNameEx(
    LOGONSRV_HANDLE ComputerName,
    wchar_t *DomainName,
    GUID *DomainGuid,
    wchar_t *SiteName,
    ULONG Flags,
    PDOMAIN_CONTROLLER_INFOW *DomainControllerInfo);

NET_API_STATUS __stdcall DsrGetSiteName(
    LOGONSRV_HANDLE ComputerName,
    wchar_t **SiteName);

NTSTATUS __stdcall NetrLogonGetDomainInfo(
    LOGONSRV_HANDLE ServerName,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    DWORD Level,
    PNETLOGON_WORKSTATION_INFORMATION WkstaBuffer,
    PNETLOGON_DOMAIN_INFORMATION DomBuffer);

NTSTATUS __stdcall NetrServerPasswordSet2(
    LOGONSRV_HANDLE PrimaryName,
    wchar_t *AccountName,
    NETLOGON_SECURE_CHANNEL_TYPE SecureChannelType,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    PNL_TRUST_PASSWORD ClearNewPassword);

NTSTATUS __stdcall NetrServerPasswordGet(
    LOGONSRV_HANDLE PrimaryName,
    wchar_t *AccountName,
    NETLOGON_SECURE_CHANNEL_TYPE AccountType,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    PENCRYPTED_NT_OWF_PASSWORD EncryptedNtOwfPassword);

NTSTATUS __stdcall NetrLogonSendToSam(
    LOGONSRV_HANDLE PrimaryName,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    UCHAR *OpaqueBuffer,
    ULONG OpaqueBufferSize);

NET_API_STATUS __stdcall DsrAddressToSiteNamesW(
    LOGONSRV_HANDLE ComputerName,
    DWORD EntryCount,
    PNL_SOCKET_ADDRESS SocketAddresses,
    PNL_SITE_NAME_ARRAY *SiteNames);

NET_API_STATUS __stdcall DsrGetDcNameEx2(
    LOGONSRV_HANDLE ComputerName,
    wchar_t *AccountName,
    ULONG AllowableAccountControlBits,
    wchar_t *DomainName,
    GUID *DomainGuid,
    wchar_t *SiteName,
    ULONG Flags,
    PDOMAIN_CONTROLLER_INFOW *DomainControllerInfo);

NET_API_STATUS __stdcall NetrLogonGetTimeServiceParentDomain(
    LOGONSRV_HANDLE ServerName,
    wchar_t **DomainName,
    int *PdcSameSite);

NET_API_STATUS __stdcall NetrEnumerateTrustedDomainsEx(
    LOGONSRV_HANDLE ServerName,
    PNETLOGON_TRUSTED_DOMAIN_ARRAY Domains);

NET_API_STATUS __stdcall DsrAddressToSiteNamesExW(
    LOGONSRV_HANDLE ComputerName,
    DWORD EntryCount,
    PNL_SOCKET_ADDRESS SocketAddresses,
    PNL_SITE_NAME_EX_ARRAY *SiteNames);

NET_API_STATUS __stdcall DsrGetDcSiteCoverageW(
    LOGONSRV_HANDLE ServerName,
    PNL_SITE_NAME_ARRAY *SiteNames);

NTSTATUS __stdcall NetrLogonSamLogonEx(
    handle_t ContextHandle,
    wchar_t *LogonServer,
    wchar_t *ComputerName,
    NETLOGON_LOGON_INFO_CLASS LogonLevel,
    PNETLOGON_LEVEL LogonInformation,
    NETLOGON_VALIDATION_INFO_CLASS ValidationLevel,
    PNETLOGON_VALIDATION ValidationInformation,
    UCHAR *Authoritative,
    ULONG *ExtraFlags);

NET_API_STATUS __stdcall DsrEnumerateDomainTrusts(
    LOGONSRV_HANDLE ServerName,
    ULONG Flags,
    PNETLOGON_TRUSTED_DOMAIN_ARRAY Domains);

NET_API_STATUS __stdcall DsrDeregisterDnsHostRecords(
    LOGONSRV_HANDLE ServerName,
    wchar_t *DnsDomainName,
    GUID *DomainGuid,
    GUID *DsaGuid,
    wchar_t *DnsHostName);

NTSTATUS __stdcall NetrServerTrustPasswordsGet(
    LOGONSRV_HANDLE TrustedDcName,
    wchar_t *AccountName,
    NETLOGON_SECURE_CHANNEL_TYPE SecureChannelType,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    PENCRYPTED_NT_OWF_PASSWORD EncryptedNewOwfPassword,
    PENCRYPTED_NT_OWF_PASSWORD EncryptedOldOwfPassword);

NET_API_STATUS __stdcall DsrGetForestTrustInformation(
    LOGONSRV_HANDLE ServerName,
    wchar_t *TrustedDomainName,
    DWORD Flags,
    PLSA_FOREST_TRUST_INFORMATION *ForestTrustInfo);

NTSTATUS __stdcall NetrGetForestTrustInformation(
    LOGONSRV_HANDLE ServerName,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    DWORD Flags,
    PLSA_FOREST_TRUST_INFORMATION *ForestTrustInfo);

NTSTATUS __stdcall NetrLogonSamLogonWithFlags(
    LOGONSRV_HANDLE LogonServer,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    NETLOGON_LOGON_INFO_CLASS LogonLevel,
    PNETLOGON_LEVEL LogonInformation,
    NETLOGON_VALIDATION_INFO_CLASS ValidationLevel,
    PNETLOGON_VALIDATION ValidationInformation,
    UCHAR *Authoritative,
    ULONG *ExtraFlags);

NTSTATUS __stdcall NetrServerGetTrustInfo(
    LOGONSRV_HANDLE TrustedDcName,
    wchar_t *AccountName,
    NETLOGON_SECURE_CHANNEL_TYPE SecureChannelType,
    wchar_t *ComputerName,
    PNETLOGON_AUTHENTICATOR Authenticator,
    PNETLOGON_AUTHENTICATOR ReturnAuthenticator,
    PENCRYPTED_NT_OWF_PASSWORD EncryptedNewOwfPassword,
    PENCRYPTED_NT_OWF_PASSWORD EncryptedOldOwfPassword,
    PNL_GENERIC_RPC_DATA *TrustInfo);


#endif  /* __logon_INTERFACE_DEFINED__ */

/* Begin additional prototypes for all interfaces */

handle_t __RPC_USER LOGONSRV_HANDLE_bind(LOGONSRV_HANDLE);
void __RPC_USER LOGONSRV_HANDLE_unbind(LOGONSRV_HANDLE, handle_t);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __netlogon_c_h__ */
